{"version":3,"sources":["views/MainHamber/index.js","views/UiHeader/index.js","context/AppReducer.js","service/employee.js","service/pendingLabor.js","context/GlobalState.js","views/BreadcurmbList/index.js","views/TopNavBar/index.js","views/Spinner/index.js","routes/history.js","views/UiCard/index.js","views/UiPageHeader/index.js","constants/index.js","pages/work-cell/work-cell.js","pages/panel-shop/panel-shop.js","pages/job-posting/job-posting.js","pages/labor-activity/labor-activity.js","views/UiGrid/index.js","pages/labor-confirm/labor-confirm.js","views/UiTimerButton/index.js","views/UiGridProgress/index.js","pages/progress-timers/progress-timers.js","utile/helpers.js","pages/review-timer/review-timer.js","pages/progress-time-stop/progress-time-stop.js","views/UiTimerButtonComplete/index.js","pages/labor-record-complete/labor-record-complete.js","views/MainHamber/MaintenancePageDetailDropdown.js","pages/labor-review-and-posting/labor-review-and-posting.js","pages/labor-review-and-posting/labor-review-and-posting-edit.js","pages/labor-review-and-posting/labor-review-and-posting-view.js","pages/labor-review-and-posting/labor-review-and-posting-add.js","routes/routes.js","pages/labor-tracker/labor-tracker.js","routes/index.js","views/BackButton/index.js","App.js","serviceWorker.js","index.js"],"names":["MainHamber","keyValue","data","history","useHistory","useLocation","overlay","onClick","e","key","push","Item","icon","UserOutlined","MenuOutlined","Header","Layout","UiHeader","props","Fragment","className","for","state","payload","type","workCellData","panelShop","keyData","laborActivity","laborConfirm","pendingLabor","pendingLaborRecord","startTime","isActive","breadcurmbList","error","endPoint","getWorkCellService","axios","get","then","res","getPanelShopService","id","getWorkOrderService","getPendingLaborService","getProgressTimeStopService","putPendingLaborService","body","put","deletePendingLaborService","delete","getLaborPostingFilterService","wOrder","filterData","_","filter","item","STATUS","initialState","jobPosting","endTime","laborPostingFilter","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","keyEmpty","Provider","value","getWorkCell","getPendingLabor","getPanalShop","getKeyData","keyName","splice","length","getWorkOrder","DEPARTMENT_KEY","STATUS_MESSAGE","getLaborActivityService","getLaborConfirm","serviceParams","deptKey","woNo","plantKey","wcellKey","wcenterKey","employee","getLaborConfirmService","startTimer","count","isActiveFun","getPendingLaborRecord","pendingLaborKeyData","find","o","KEY","getLaborPostingFilter","getBreadcurmbList","path","name","BreadcurmbList","href","useContext","breadcurmb","uniqBy","tempalate","map","index","onClickBreadcrumb","indexVal","findIndex","itemValue","console","log","to","TopNavBar","location","track","pathname","Spinner","size","createBrowserHistory","style","background","padding","UiCard","text","onClickHandler","span","hoverable","UiPageHeader","content","color","PlusCircleOutlined","CONSTANTS","WORKCELL","JOBPOSTING","LABORCONFIRM","WORKORDER","CUSTOMER","PLANT","DEPARTMENT","WORKCELLS","EMPLOYEE","LOBARACTIVITY","WORKCELL_PROGRESS_TIMERS","PANALSHOP","LABOR_ACTIVITY","PROGRESS_TIME","REVIEW_TIMER","LABOR_RATE","WorkCell","useState","page","useEffect","Constants","gutter","DEPARTMENT_NAME","WORK_CELL_NAME","panelShopClick","PanelShop","useParams","NAME","JobPosting","jobNumber","setJobNumber","onChange","event","target","workOrderPosting","LaborActivity","CODE","DESCRIPTION","code","PLANT_KEY","laborActivityClick","UiGrid","title","number","desc","seconds","setSeconds","setIsActive","interval","setInterval","clearInterval","xs","sm","md","lg","WO_NUMBER","WO_DESC","CUSTOMER_NAME","PLANT_NAME","EMP_NAME","offset","tempDate","Date","tempMonth","getMonth","finaleDateTime","getDate","getFullYear","join","toLocaleString","split","EMPLOYEE_KEY","WORK_CENTER_KEY","WORK_CELL_KEY","LABOR_CLASS","WORK_ORDER_NUMBER","parseInt","START_TIME","STOP_TIME","LABOR_TIME","LABOR_RATE_TYPE","post","UiTimerButton","timerHandler","time","hours","border","txtColor","width","height","start","setStart","setStartTimer","timer","undefined","moment","format","finalTimeSub","diff","UiGridProgress","employe","activity","start_time","start_time_count","employeName","wcName","woDes","styles","bold","fontWeight","colorGreen","ProgressTimers","tempalte","progressDataFilter","orderBy","EMPLOYEE_NAME","WO_DESCRIPTION","convertMonthToNumber","month","daySplit","convertDateTime","date","dateSplit","monthName","Option","Select","TextArea","Input","ReviewTimer","setPage","note","setNote","workOrderNumber","setWorkOrderNumber","setStartTime","startDate","setStartDate","stopTime","setStopTime","stopDate","setStopDate","workCell","setWorkCell","setEmploye","workCenterName","setWorkCenterName","setRaborRate","employeeUpdate","setEmployeeUpdate","workCellUpdate","setWorkCellUpdate","stop","WORKCENTER_NAME","contentHtml","contentHtmlForEmployee","onSubmit","preventDefault","stop_time","message","success","placeholder","CUST_NAME","Group","compact","defaultValue","INVENTORY_NAME","dateString","use12Hours","timeString","rows","ProgressTimeStop","INVENTORY_NUMBER","DEPT_CODE","DEPT_NAME","UiTimerButtonComplete","LaborRecordComplete","MaintenancePageDetailDropdown","refresh","deleteItem","setTimeout","window","reload","this","match","itemKey","allowEdit","allowDelete","menuItems","deleteTooltip","deleteFunction","url","confirm","trigger","React","Component","withRouter","LaborReviewAndPosting","assignListingData","rowData","formattedrowData","setState","handleError","errorData","errors","setErrorState","currentActivity","sourceType","details","toString","sourceName","timestamp","onSelectChange","selectedRowKeys","permissions","columnDefs","headerName","field","pinned","cellClass","cellStyle","textAlign","tooltipField","sort","cellRendererFramework","row","sortable","menuTabs","resizable","selectable","defaultColDef","printMode","test","inputValue","workOrder","handleClick","bind","onChangeHandler","catch","gridOptions","domLayout","popupParent","document","querySelector","animateRows","suppressRowClickSelection","scrollbarWidth","LaborReviewAndPostingEdit","laborPerform","setLaborPerform","laborRate","contentHtmlForRate","backgroundColor","goBack","NOTE","columns","dataIndex","render","LaborReviewAndPostingView","setData","getListLaborAuditTrail","dataSource","LaborReviewAndPostingAdd","customar","setCustomar","setLaborActivityUpdate","Routes","component","exact","isBreadcrumbVisible","LaborConfirm","workCellValue","marginRight","routes","route","RouteComponent","Content","BackButton","ArrowLeftOutlined","includes","App","fallback","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"knBA8BeA,EAxBI,SAAC,GAAoB,EAAnBC,SAAmB,EAAVC,KAAW,IAC/BC,EAAUC,cACDC,cAMf,OACI,6BACI,kBAAC,IAAD,CAAUC,QACN,kBAAC,IAAD,CAAMC,QARM,SAACC,GACR,QAAVA,EAAEC,KACDN,EAAQO,KAAR,+CAOI,kBAAC,IAAKC,KAAN,CAAWF,IAAI,MAAMG,KAAM,kBAACC,EAAA,EAAD,OAA3B,wBAKJ,kBAAC,IAAD,KACK,kBAACC,EAAA,EAAD,UCrBTC,EAAWC,IAAXD,OAkBOE,EAhBE,SAACC,GAChB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACJ,EAAD,KACE,yBAAKK,UAAU,QAEG,eAAdF,EAAMG,IACF,yBAAKD,UAAU,cAAa,kBAAC,EAAD,MAA5B,KAA4C,wBAAIA,UAAU,cAAd,SAC5C,wBAAIA,UAAU,cAAd,Y,yDCbD,WAACE,EAAD,GAER,IADLC,EACI,EADJA,QAEE,OADE,EADKC,MAGL,IAAK,gBACH,OAAO,eACFF,EADL,CAEEG,aAAcF,IAEhB,IAAK,iBACL,OAAO,eACFD,EADL,CAEEI,UAAWH,IAEb,IAAK,eACL,OAAO,eACFD,EADL,CAEEK,QAAQ,GAAD,mBAAML,EAAMK,SAAZ,CAAqBJ,MAE9B,IAAK,qBACH,OAAO,eACFD,EADL,CAEEK,QAAS,KAEb,IAAK,iBACL,OAAO,eACFL,EADL,CAEEM,cAAeL,IAEjB,IAAK,oBACH,OAAO,eACFD,EADL,CAEEO,aAAcN,IAElB,IAAK,oBACL,OAAO,eACFD,EADL,CAEEQ,aAAcP,IAEhB,IAAK,2BACH,OAAO,eACFD,EADL,CAEES,mBAAoBR,IAExB,IAAK,iBACH,OAAO,eACFD,EADL,CAEEU,UAAWT,IAEf,IAAK,gBACL,OAAO,eACFD,EADL,CAEEW,SAAUV,IAEZ,IAAK,iBACH,OAAO,eACFD,EADL,CAEEY,eAAe,GAAD,mBAAMZ,EAAMY,gBAAZ,CAA4BX,MAE9C,IAAK,QACH,OAAO,eACFD,EADL,CAEEa,MAAOZ,IAEb,QACE,OAAOD,I,iBChETc,EAAW,mCACJC,EAAqB,WAC9B,OAAOC,IAAMC,IAAN,UAAaH,EAAb,gBAAoCI,MAAK,SAACC,GAAD,OAASA,EAAIvC,SAKpDwC,EAAsB,SAACC,GAChC,OAAOL,IAAMC,IAAN,UAAaH,EAAb,qBAAkCO,IAAMH,MAAK,SAACC,GAAD,OAASA,EAAIvC,SAExD0C,EAAsB,SAACD,GAChC,OAAOL,IAAMC,IAAN,UAAaH,EAAb,2BAAwCO,IAAMH,MAAK,SAACC,GAAD,OAASA,EAAIvC,SCVrEkC,EAAW,mCAGJS,EAAyB,WAClC,OAAOP,IAAMC,IAAN,UAAaH,EAAb,kBAAsCI,MAAK,SAACC,GAAD,OAASA,EAAIvC,SAGtD4C,EAA6B,SAACrC,GACvC,OAAO6B,IAAMC,IAAN,UAAaH,EAAb,yBAAsC3B,IAAO+B,MAAK,SAACC,GAAD,OAASA,EAAIvC,SAQ7D6C,EAAyB,SAACtC,EAAKuC,GACxC,OAAOV,IAAMW,IAAN,UAAab,EAAb,yBAAsC3B,GAAOuC,GAAMR,MAAK,SAACC,GAAD,OAASA,EAAIvC,SAInEgD,EAA4B,SAACzC,GACtC,OAAO6B,IAAMa,OAAN,UAAgBf,EAAhB,yBAAyC3B,IAAO+B,MAAK,SAACC,GAAD,OAASA,EAAIvC,SAIhEkD,EAA+B,SAACC,GACzC,IAAIC,EAAa,CACbD,OAAOA,GAEX,OAAOf,IAAMC,IAAN,UAAaH,EAAb,iBAAsC,IAAtC,IAA6C,IAA7C,YAAoDkB,EAAWD,SAAUb,MAAK,SAACC,GAClF,OAAOc,IAAEC,OAAOf,EAAIvC,MAAM,SAASuD,GAC/B,GAAmB,MAAhBA,EAAKC,OACJ,OAAOD,SCxBjBE,EAAe,CACnBlC,aAAa,GACbC,UAAU,GACVkC,WAAW,GACXjC,QAAQ,GACRC,cAAe,GACfC,aAAc,GACdC,aAAa,GACbE,UAAU,EACV6B,QAAQ,KACR5B,UAAS,EACTF,mBAAmB,GACnB+B,mBAAmB,GACnB3B,MAAM,GACND,eAAe,IAGJ6B,EAAgBC,wBAAcL,GAC9BM,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWC,EAAYT,GADH,mBACvCrC,EADuC,KAChC+C,EADgC,KA4FxCC,EAAW,WACfD,EAAS,CACL7C,KAAM,qBACND,QAAS,MA4Df,OACE,kBAACwC,EAAcQ,SAAf,CACEC,MAAO,CACL/C,aAAcH,EAAMG,aACpBC,UAAWJ,EAAMI,UACjBC,QAASL,EAAMK,QACfC,cAAeN,EAAMM,cACrBC,aAAaP,EAAMO,aACnBC,aAAaR,EAAMQ,aACnBE,UAAUV,EAAMU,UAChB6B,QAAQvC,EAAMuC,QACd5B,SAASX,EAAMW,SACfF,mBAAmBT,EAAMS,mBACzB+B,mBAAmBxC,EAAMwC,mBACzB3B,MAAMb,EAAMa,MACZD,eAAeZ,EAAMY,eACrBuC,YAxKc,WAClBpC,IAAqBG,MAAK,SAACC,GACvB4B,EAAS,CACL7C,KAAM,gBACND,QAASkB,QAqKbiC,gBAzEkB,WACtB7B,IAAyBL,MAAK,SAACC,GAC7B4B,EAAS,CACP7C,KAAM,oBACND,QAASkB,QAsETkC,aAjKe,SAAClE,GACpBiC,EAAoBjC,GAAK+B,MAAK,SAACC,GAC3B4B,EAAS,CACL7C,KAAM,iBACND,QAASkB,QA8JbmC,WApHa,SAACC,EAAS5E,GAQ3B,GAPe,aAAZ4E,IACDP,IACAD,EAAS,CACP7C,KAAM,eACND,QAAStB,KAGE,eAAZ4E,EAAyB,CAC1B,IAAI3E,EAAOoB,EAAMK,QACjBzB,EAAK4E,OAAO,EAAG5E,EAAK6E,OAAO,GAC3BV,EAAS,CACP7C,KAAM,eACND,QAAStB,IAGb,GAAe,eAAZ4E,EAAyB,CAC1B,IAAI3E,EAAOoB,EAAMK,QACjBzB,EAAK4E,OAAO,EAAG5E,EAAK6E,OAAO,GAC3BV,EAAS,CACP7C,KAAM,eACND,QAAStB,IAGb,GAAe,gBAAZ4E,EAA0B,CAC3B,IAAI3E,EAAOoB,EAAMK,QACjBzB,EAAK4E,OAAO,EAAG5E,EAAK6E,OAAO,GAC3BV,EAAS,CACP7C,KAAM,eACND,QAAStB,MAwFT+E,aA1Je,SAACrC,GACpB,IAAIlC,EAAMa,EAAMK,QAAQ,GAAGsD,eAC3BrC,EAAoBD,GAAIH,MAAK,SAACC,GACG,OAA1BA,EAAI,GAAGyC,eFvCqB,SAACzE,EAAIkC,GACxC,OAAOL,IAAMC,IAAN,UAAaH,EAAb,0BAAuC3B,EAAvC,YAA8CkC,IAAMH,MAAK,SAACC,GAAD,OAASA,EAAIvC,QEuCrEiF,CAAwB1E,EAAIkC,GAAIH,MAAK,SAACC,GAClC4B,EAAS,CACL7C,KAAM,iBACND,QAASkB,OAInB4B,EAAS,CACP7C,KAAM,QACND,QAASkB,QA8Ib2C,gBAxIkB,SAACC,IFhDW,SAAC,GAA8D,EAA7DC,QAA6D,EAApDC,KAAoD,EAA9CC,SAA8C,EAApCC,SAAoC,EAA1BC,WAA0B,EAAdC,SACnF,OAAOrD,IAAMC,IAAN,UAAaH,EAAb,yCAA6DI,MAAK,SAACC,GAAD,OAASA,EAAIvC,SEgDtF0F,CAAuBP,GAAe7C,MAAK,SAACC,GACxC4B,EAAS,CACP7C,KAAM,oBACND,QAASkB,QAqIX6B,WACAuB,WAtEa,SAACC,GAClBzB,EAAS,CACP7C,KAAM,iBACND,QAASuE,KAoEPC,YAhEc,SAACvB,GACnBH,EAAS,CACP7C,KAAM,gBACND,QAASiD,KA8DPwB,sBA1DwB,SAACrD,GAC7BE,IAA2BL,MAAK,SAACC,GAC/B,IAAIwD,EAAsB1C,IAAE2C,KAAKzD,GAAK,SAAS0D,GAC7C,GAAGA,EAAEC,KAAOzD,EACR,OAAOwD,KAGb9B,EAAS,CACP7C,KAAM,2BACND,QAAS0E,QAkDTI,sBA7CwB,SAAChD,GAC7BD,EAA6BC,GAAQb,MAAK,SAACC,GACzC4B,EAAS,CACP7C,KAAM,2BACND,QAASkB,QA0CT6D,kBAtCoB,SAACC,EAAKC,GAK9BnC,EAAS,CACP7C,KAAM,iBACND,QANU,CACVgF,KAAKA,EACLC,KAAKA,QAsCJtC,ICnKQuC,EA9CQ,SAACvF,GACEA,EAAdwF,KAAcxF,EAATsF,KADkB,IAEvBtE,EAAmByE,qBAAW5C,GAA9B7B,eACJ0E,EAAarD,IAAEsD,OAAO3E,GAAgB,SAAU1B,GAChD,OAAOA,EAAEgG,QAETM,EAAY,4BAkChB,OAbGF,EAAW7B,OAAS,IACnB+B,EACI,kBAAC,IAAD,KACMF,EAAWG,KAAI,SAACtD,EAAKuD,GAAN,OACb,kBAAC,IAAWrG,KAAZ,CAAiBJ,QAAS,SAACC,GAAD,OAxBjB,SAAnByG,EAAoBxD,GACtB,IAAIyD,EAAWN,EAAWO,WAAU,SAAAC,GAChC,GAAGA,EAAUZ,OAAS/C,EAAK+C,KACvB,OAAOY,KAGfR,EAAW9B,OAAOoC,EAASN,EAAW7B,QACtCsC,QAAQC,IAAIV,GACZE,EACI,kBAAC,IAAD,KACKF,EAAW7B,OAAS,EAAI6B,EAAWG,KAAI,SAACtD,EAAKuD,GAAN,OACpC,kBAAC,IAAWrG,KAAZ,CAAiBJ,QAAS,SAACC,GAAD,OAAOyG,EAAkBxD,KAC/C,kBAAC,IAAD,CAAMhD,IAAKuG,EAAOO,GAAI9D,EAAK8C,MACtB9C,EAAK+C,UAGf,6BAQkCS,CAAkBxD,KAC/C,kBAAC,IAAD,CAAMhD,IAAKuG,EAAOO,GAAI9D,EAAK8C,MACtB9C,EAAK+C,YAQ1B,oCACCM,I,OCQMU,MA/Cf,SAAmBtG,GAAQ,IAIrB4F,EAHInF,EAAYgF,qBAAW5C,GAAvBpC,QACJ8F,EAAWpH,cACXqH,EAAQ/F,EAAQoD,OAAS,EAAjB,sBAAoCpD,EAAQ,GAAGsD,gBAAkB,IAE3E,MAAyB,mBAAtBwC,EAASE,SAER,yBAAKvG,UAAU,aACb,6BACI,kBAAC,EAAD,QAKiB,qBAAtBqG,EAASE,SAER,yBAAKvG,UAAU,aACb,6BACI,kBAAC,EAAD,OAEJ,6BACI,kBAAC,IAAD,CAAMmG,GAAIG,GAAV,0CAKRZ,EACE,yBAAK1F,UAAU,aACb,6BACI,kBAAC,EAAD,OAEJ,6BACA,kBAAC,IAAD,CAAMmG,GAAG,oBAAT,yBASJ,oCACGT,K,SCxCIc,G,OAPC,WACZ,OACI,6BAASxG,UAAU,WACf,kBAAC,IAAD,CAAMyG,KAAK,a,QCJRC,gB,iBCCTC,G,OAAQ,CAAEC,WAAY,UAAWC,QAAS,UAmBjCC,MAlBf,SAAgBhH,GAAQ,IACdiH,EAA8BjH,EAA9BiH,KAAMC,EAAwBlH,EAAxBkH,eAAgB5B,EAAQtF,EAARsF,KAC9B,OACE,kBAAC,IAAMrF,SAAP,KACE,kBAAC,IAAD,CAAKC,UAAU,aAAaiH,KAAM,GAChC,kBAAC,IAAD,CACEC,WAAS,EACTP,MAAOA,EACP3G,UAAU,YACVb,QAAS6H,GAET,2BAAMD,EAAN,OACA,2BAAI3B,O,kBCZC,SAAS+B,EAAarH,GAAQ,IAClCsH,EAAyBtH,EAAzBsH,QAASd,EAAgBxG,EAAhBwG,MAAOe,EAASvH,EAATuH,MACvB,OACE,yBAAKrH,UAAU,oBACb,yBAAKA,UAAU,cACb,wBAAI2G,MAAO,CAACU,MAAMA,IAASD,IAE5Bd,EACE,yBAAKtG,UAAU,cACb,8BAAM,kBAACsH,EAAA,EAAD,OADR,IACsC,kBAAC,IAAD,CAAMnB,GAAG,KAAT,uCAErC,MCfZ,IAwBiBoB,EAxBC,CACdC,SAAU,0BACVC,WAAY,qCACZC,aAAa,gBACbC,UAAU,aACVC,SAAS,WACTC,MAAM,QACNC,WAAW,aACXC,UAAU,YACVC,SAAS,WACTC,cAAe,iBACfC,yBAA0B,2CAC1BC,UAAU,uDACVC,eAAe,0CACfC,cAAc,oBACdC,aAAa,eACbC,WAAW,CACT,gBACA,kBACA,kBACA,oB,QC4BSC,GAlCE,WAAO,IAAD,EACGC,mBAAS,GADZ,mBACdC,EADc,aAE8DnD,qBAAW5C,IAAtFU,EAFa,EAEbA,YAAahD,EAFA,EAEAA,aAAemD,EAFf,EAEeA,WAAYD,EAF3B,EAE2BA,aAAc2B,EAFzC,EAEyCA,kBACxDnG,EAAUC,cACd2J,qBAAU,WACRtF,MACC,CAACqF,IAgBN,OACE,oCACE,kBAACvB,EAAD,CAAcC,QAASwB,EAAUpB,WACjC,kBAAC,IAAD,CAAKqB,OAAQ,IACVxI,EAAasD,QAAU,EAAItD,EAAasF,KAAI,SAACtD,EAAMuD,GAClD,OAAO,kBAAC,EAAD,CAAQvG,IAAKgD,EAAK2C,IAAM+B,KAAM1E,EAAKyG,gBAAiB1D,KAAM/C,EAAK0G,eAAgB/B,eAAgB,kBAnBvF,SAAC3H,EAAK+F,GAC3B,IACIvG,EADOwB,EAENsF,KAAI,SAAAtD,GACFA,EAAKwB,iBAAmBxE,IACvBR,EAAYwD,MAGpBkB,EAAalE,GACbmE,EAAW,WAAY3E,GACvBqG,EAAkB,YAAYE,GAC9BrG,EAAQO,KAAR,sBAA4BD,IAQsF2J,CAAe3G,EAAKwB,eAAgBxB,EAAK0G,sBAClJ,kBAAC,EAAD,SCKEE,GAlCG,WAAO,IAAD,EAC0C1D,qBAAW5C,GAAjErC,EADY,EACZA,UAAY4E,EADA,EACAA,kBAAmB1B,EADnB,EACmBA,WAAYjD,EAD/B,EAC+BA,QAC7CgB,EAAO2H,cAAP3H,GACAxC,EAAUC,cAoBhB,OAnBA2J,qBAAU,WACe,IAApBpI,EAAQoD,QACT5E,EAAQO,KAAR,gBAED,CAAC,IAgBA,oCACA,kBAAC6H,EAAD,CAAcC,QAASwB,EAAUT,YAC/B,kBAAC,IAAD,CAAKU,OAAQ,IACVvI,EAAUqD,QAAU,EAAIrD,EAAUqF,KAAI,SAACtD,EAAMuD,GAC5C,OAAO,kBAAC,EAAD,CAAQvG,IAAKuG,EAAQmB,KAAI,WAAM1E,EAAK2F,UAAY5C,KAAM/C,EAAK8G,KAAMnC,eAAgB,kBAlBlG,SAAqB3H,EAAK+F,GACxB,IACIvG,EADOyB,EAENqF,KAAI,SAAAtD,GACFA,EAAK2F,WAAa3I,IACjBR,EAAYwD,MAGpBmB,EAAW,aAAa3E,GACxBqG,EAAkB,eAAD,OAAgB3D,GAAK6D,GACtCrG,EAAQO,KAAR,gCAAsCD,IAQgEmD,CAAWH,EAAK2F,SAAU3F,EAAK8G,YAC1H,Q,mBCWFC,GA1CI,SAACtJ,GAAW,IACrByB,EAAO2H,cAAP3H,GADoB,EAEFkH,mBAAS,GAFP,mBAEnBC,EAFmB,aAGQD,sBAHR,mBAGnBY,EAHmB,KAGRC,EAHQ,OAIsC/D,qBAAW5C,GAAnEpC,EAJkB,EAIlBA,QAASqD,EAJS,EAITA,aAAcJ,EAJL,EAIKA,WAAY0B,EAJjB,EAIiBA,kBACrCnG,EAAUC,cAChB2J,qBAAU,WACiB,IAApBpI,EAAQoD,QACP5E,EAAQO,KAAR,gBAEH,CAACoJ,IAeN,OACI,oCACI,kBAACvB,EAAD,CAAcC,QAASwB,EAAUnB,aACjC,yBAAKzH,UAAU,eACX,qCAGA,6BACI,kBAAC,KAAD,CAAOuJ,SArBvB,SAAyBC,GACrBF,EAAaE,EAAMC,OAAOrG,WAsBlB,6BACI,kBAAC,IAAD,CAAQhD,KAAK,UAAUjB,QApBf,WACpB,IAAIuK,EAAmB,CACnBA,iBAAiBL,GAErBzF,EAAayF,GACb7F,EAAW,aAAckG,GACzBxE,EAAkB,yBAAD,OAA0B3D,GAA1B,aAAqC8H,IACtDtK,EAAQO,KAAR,0BAAgC+J,MAapB,aCeLM,GAhDQ,SAAC7J,GAAW,IAAD,EACmDyF,qBAAW5C,GAApFpC,EADsB,EACtBA,QAASC,EADa,EACbA,cAAc0E,EADD,EACCA,kBAAmB1B,EADpB,EACoBA,WAAYQ,EADhC,EACgCA,gBACxDjF,EAAUC,cACVuC,EAAO2H,cAAP3H,GACNoH,qBAAU,WACe,IAApBpI,EAAQoD,QACP5E,EAAQO,KAAR,gBAEH,CAAC,IAwBJ,OACI,oCACA,kBAAC6H,EAAD,CAAcC,QAASwB,EAAUR,iBAC/B,kBAAC,IAAD,CAAKS,OAAQ,IACVrI,EAAcmD,OAAS,EAAInD,EAAcmF,KAAI,SAACtD,EAAMuD,GACnD,OAAO,kBAAC,EAAD,CACGvG,IAAKuG,EACLmB,KAAI,WAAM1E,EAAKuH,MACfxE,KAAM/C,EAAKwH,YACX7C,eAAgB,kBA/BT,SAAC8C,EAAM1E,GAChC,IACIvG,EADO2B,EAENmF,KAAI,SAAAtD,GACFA,EAAKuH,OAASE,IACbjL,EAAYwD,MAGpB,IAAI4B,EAAgB,CAClBC,QAAU3D,EAAQ,GAAGsD,eACrBM,KAAK5D,EAAQ,GAAGmJ,iBAChBtF,SAAS7D,EAAQ,GAAGwJ,UACpB1F,SAAS9D,EAAQ,GAAGyE,IACpBV,WAAWzF,EAASmG,IACpBT,SAAS1F,EAAS+K,MAEpB5F,EAAgBC,GAChBT,EAAW,cAAe3E,GAC1BqG,EAAkB,mBAAD,OAAoB3D,GAApB,UAA4BuI,EAA5B,YAAoC1E,IACrDrG,EAAQO,KAAR,kBAYwC0K,CAAmB3H,EAAKuH,KAAMvH,EAAKwH,mBAEjE,aC5CDI,OAXf,YAAgD,IAA/BC,EAA8B,EAA9BA,MAAMC,EAAwB,EAAxBA,OAAOC,EAAiB,EAAjBA,KAAMtH,EAAW,EAAXA,SAChC,OACA,kBAAC,IAAM/C,SAAP,KACI,yBAAKC,UAAU,WACX,2BAAIkK,GACJ,2BAAIC,GAAUrH,GACd,2BAAIsH,MCuFDT,I,OA9EQ,SAAC7J,GAAW,IAAD,EACwDyF,qBAAW5C,GAAzFpC,EADsB,EACtBA,QAAkDkE,GAD5B,EACZnB,gBADY,EACI1C,UADJ,EACcJ,cADd,EAC4BiE,YAAYhE,EADxC,EACwCA,aADxC,EAEAgI,mBAAS,GAFT,mBAEvB4B,EAFuB,KAEdC,EAFc,OAGE7B,oBAAS,GAHX,mBAGvB5H,EAHuB,KAGb0J,EAHa,KAIxBxL,EAAUC,cAChB2J,qBAAU,WACiB,IAApBpI,EAAQoD,QACP5E,EAAQO,KAAR,cAEJ,IAAIkL,EAAW,KASf,OARI3J,EACF2J,EAAWC,aAAY,WACrBH,GAAW,SAAAD,GAAO,OAAIA,EAAU,KAChC5F,EAAW4F,KACV,KACOxJ,GAAwB,IAAZwJ,GACtBK,cAAcF,GAET,kBAAME,cAAcF,MAC1B,CAAC3J,EAAUwJ,IAgChB,OACI,oCACC5J,EAAakD,OAAS,EACnB,oCACI,kBAACwD,EAAD,CAAcC,QAASwB,EAAUlB,eACjC,kBAAC,IAAD,CAAKmB,OAAQ,CAAE8B,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACtC,kBAAC,IAAD,CAAK9K,UAAU,aAAaiH,KAAM,IAClC,6BACI,kBAAC,GAAD,CAAQiD,MAAOtB,EAAUjB,UAAWwC,OAAQ1J,EAAa,GAAGsK,UAAWX,KAAM3J,EAAa,GAAGuK,UAC7F,kBAAC,GAAD,CAAQd,MAAOtB,EAAUhB,SAAUuC,OAAQ1J,EAAa,GAAGmH,SAAUwC,KAAM3J,EAAa,GAAGwK,gBAC3F,kBAAC,GAAD,CAAQf,MAAOtB,EAAUf,MAAOsC,OAAQ1J,EAAa,GAAGoH,MAAOuC,KAAM3J,EAAa,GAAGyK,aACrF,kBAAC,GAAD,CAAQhB,MAAOtB,EAAUd,WAAYqC,OAAO,GAAGC,KAAK,KACpD,kBAAC,GAAD,CAAQF,MAAOtB,EAAUb,UAAWoC,OAAO,GAAGC,KAAM3J,EAAa,GAAG0I,OACpE,kBAAC,GAAD,CAAQe,MAAOtB,EAAUZ,SAAUmC,OAAQ1J,EAAa,GAAGuH,SAAUoC,KAAM3J,EAAa,GAAG0K,WAC3F,kBAAC,GAAD,CAAQjB,MAAOtB,EAAUX,cAAgBkC,OAAQ1J,EAAa,GAAGmJ,KAAMQ,KAAM3J,EAAa,GAAGoJ,gBAIjG,kBAAC,IAAD,CAAK7J,UAAU,aAAaoL,OAAQ,EAAGnE,KAAM,GACzC,6BAAM,kBAAC,IAAD,CAAQ7G,KAAK,UAAUJ,UAAU,qBAAqBb,QAjD3D,WAEjBoL,GAAa1J,GACb,Id5BgCe,Ec4B5ByJ,EAAW,IAAIC,KAGfC,EAFS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MACjD,MAAO,MAAO,MAAO,MAAO,MAAO,OACZF,EAASG,YAK5BC,EAAiB,CAJL,CAACJ,EAASK,UAAWH,EAAWF,EAASM,eAAeC,KAAK,MAC9D,IAAIN,MAAOO,eAAe,SAChBC,MAAM,KACV,IACiBF,KAAK,KACvC3H,EAAgB,CAChB8F,UAAWxJ,EAAQ,GAAGwJ,UACtBlG,eAAgBtD,EAAQ,GAAGsD,eAC3BkI,aAAcxL,EAAQ,GAAGyH,SACzBgE,gBAAiBzL,EAAQ,GAAGyE,IAC5BiH,cAAe1L,EAAQ,GAAGyE,IAC1BkH,YAAa,KACbC,kBAAmBC,SAAS7L,EAAQ,GAAGmJ,kBACvC2C,WAAYZ,EACZa,UAAW,KACXC,WAAY,KACZC,gBAAiB,KACjBlK,OAAQ,MdjDoBV,EcmDRqC,EdlDrB/C,IAAMuL,KAAN,UAAczL,EAAd,iBAAuCY,GAAMR,MAAK,SAACC,GAAD,OAASA,EAAIvC,SckD3BsC,MAAK,SAAAC,GACxCtC,EAAQO,KAAK,yBAsBK,kBAAN,QAGN,Q,2BC/CHoN,OApCf,SAAuB5M,GAAQ,IACnB6M,EAAuE7M,EAAvE6M,aAAavH,EAA0DtF,EAA1DsF,KAAKwH,EAAqD9M,EAArD8M,KAAKC,EAAgD/M,EAAhD+M,MAAOxF,EAAyCvH,EAAzCuH,MAAOyF,EAAkChN,EAAlCgN,OAAOC,EAA2BjN,EAA3BiN,SAAUC,EAAiBlN,EAAjBkN,MAAOC,EAAUnN,EAAVmN,OAD3C,EAEAxE,mBAAS,GAFT,mBAEnByE,EAFmB,KAEZC,EAFY,OAGM1E,oBAAS,GAHf,mBAGnB5H,EAHmB,aAIW4H,mBAASmE,IAJpB,mBAInBnI,EAJmB,KAIN2I,EAJM,KAwB1B,OAnBAzE,qBAAU,WACN,IAAI6B,EAAW,KAef,OAdI3J,EACJ2J,EAAWC,aAAY,WAEnB,GADA0C,GAAS,SAAAD,GAAK,OAAIA,EAAQ,KACR,SAAfzI,EAAsB,CACrB,IAAI4I,OAAiBC,IAATV,EAAqBA,EAAKd,MAAM,KAAK,MAC7CrJ,EAAU8K,OAASC,OAAO,sBAC1BC,EAAeF,KAAOA,KAAO9K,GAASiL,KAAKH,KAAOF,EAAM,GAAG,cAAcG,OAAO,YACpFL,GAAS,SAAAD,GAAK,OAAIA,EAAQ,KAC1BE,EAAcK,MAEnB,KACS5M,GAAsB,IAAVqM,GACxBxC,cAAcF,GAEP,kBAAME,cAAcF,MAC5B,CAAC3J,EAASqM,IAGb,kBAAC,IAAMnN,SAAP,KACG,yBAAKC,UAAU,kBACV2G,MAAO,CAACC,WAAWS,EAAOyF,OAAO,aAAD,OAAcA,GAASzF,MAAM0F,EAASC,MAAMA,EAAMC,OAAOA,GACzF9N,QAASwN,GACT,2BAAIvH,GACJ,2BAAmB,SAAfX,EAAwBA,EAAa,OACzC,2BAAIoI,M,OCuBDc,OAvDf,SAAwB7N,GAAQ,IACpB8N,EAA+F9N,EAA/F8N,QAAQ3L,EAAuFnC,EAAvFmC,OAAO4L,EAAgF/N,EAAhF+N,SAASC,EAAuEhO,EAAvEgO,WAAWC,EAA4DjO,EAA5DiO,iBAAkBC,EAA0ClO,EAA1CkO,YAAYC,EAA8BnO,EAA9BmO,OAAOC,EAAuBpO,EAAvBoO,MAAOvB,EAAgB7M,EAAhB6M,aACjFhG,EAAQ,CAAGE,QAAS,SACpBsH,EAAS,CACXC,KAAK,CACDC,WAAW,QAEfC,WAAW,CACPjH,MAAM,QACNR,QAAS,QACTwH,WAAY,QAGpB,OACA,kBAAC,IAAMtO,SAAP,KACK,yBAAKC,UAAU,oBACZ,6BACA,kBAAC,IAAD,CAAK6I,OAAQ,CAAE8B,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACtC,kBAAC,IAAD,CAAK9K,UAAU,aAAaiH,KAAM,GAC9B,yBAAKN,MAAOA,GACR,uCACA,yCACA,+CAGR,kBAAC,IAAD,CAAK3G,UAAU,aAAaiH,KAAM,GAC9B,yBAAKN,MAAOwH,EAAOC,KAAMpO,UAAU,0BAC/B,2BAAI4N,GACJ,2BAAI3L,GACJ,2BAAI4L,KAGZ,kBAAC,IAAD,CAAK7N,UAAU,aAAaiH,KAAM,GAC9B,yBAAKN,MAAOA,EAAO3G,UAAU,0BACzB,uBAAG2G,MAAOwH,EAAOC,MAAOJ,GACxB,2BAAIE,EAAJ,KACA,uBAAGvH,MAAOwH,EAAOC,MAAOH,EAAxB,OAGR,kBAAC,IAAD,CAAKjO,UAAU,aAAaiH,KAAM,GAC9B,yBAAKjH,UAAU,0BACX,uBAAG2G,MAAOwH,EAAOG,YAAjB,cACA,uBAAG3H,MAAOwH,EAAOC,MAAON,KAGhC,kBAAC,IAAD,CAAK9N,UAAU,iBAAiBiH,KAAM,GAClC,yBAAKN,MAAOA,EAAO3G,UAAU,0BACzB,kBAAC,GAAD,CAAeoF,KAAK,UAAUwH,KAAMmB,EAAkBlB,MAAM,eAAexF,MAAM,QAAQsF,aAAcA,UCOhH4B,GA3CQ,WAAO,IAAD,EAC0BhJ,qBAAW5C,GAAxDW,EADmB,EACnBA,gBAAkB5C,EADC,EACDA,aADC,KACaE,UAChB6H,mBAAS,IAFN,mBAEpBC,EAFoB,KAGrB3J,GAHqB,KAGXC,eACd2J,qBAAU,WACRrF,MACC,CAACoF,IACJ,IAII8F,EADEC,EAAqB/N,EAAaiD,OAAS,EAAIxB,IAAEuM,QAAQhO,EAAc,CAAC,OAAQ,CAAC,SAAW,KAElG,OAAG+N,GAEDD,EADYrM,IAAEC,OAAOqM,GAAoB,SAASpM,GAAQ,OAA0B,OAAnBA,EAAKiK,aAE/D3G,KAAI,SAACtD,EAAMuD,GACd,IACIgH,EADgBzK,IAAE2J,MAAMzJ,EAAKgK,WAAY,KACpB,GACzB,OAAQ,kBAAC,GAAD,CACFhN,IAAKuG,EACLgI,QAASvL,EAAK0J,aACd9J,OAAQI,EAAK8J,kBACb0B,SAAS,KACTC,WAAYlB,EACZmB,iBAAkB1L,EAAKgK,WACvB2B,YAAa3L,EAAKsM,cAClBV,OAAQ5L,EAAK0G,eACbmF,MAAO7L,EAAKuM,eACZjC,aAAc,kBArBJtN,EAqBuBgD,EAAK2C,SApBhDjG,EAAQO,KAAR,8BAAoCD,IADjB,IAACA,QA6BtB,oCACE,kBAAC8H,EAAD,CAAcC,QAASwB,EAAUV,2BAChCsG,IALM,kBAAC,EAAD,O,uCChDAK,I,OAAuB,SAACC,GACjC,IAAIC,OAAqBzB,IAAVwB,EAAsBA,EAAMhD,MAAM,KAAK,GAGlD3B,EAAShI,IAAE4D,UAFF,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAC/C,MAAO,MAAO,MAAO,MAAO,MAAO,QACJ,SAAShB,GAAK,OAAOA,GAAKgK,EAAS,MACpE,OAAG5E,EAAS,GACJ,GAAN,OAAU4E,EAAS,GAAnB,aAA0B5E,EAA1B,YAAoC4E,EAAS,IAEvC,GAAN,OAAUA,EAAS,GAAnB,YAAyB5E,EAAzB,YAAmC4E,EAAS,MAGrCC,GAAkB,SAACC,EAAMrC,GAClC,IAEIsC,OAAqB5B,IAAT2B,EAAqBA,EAAKnD,MAAM,KAAK,GACjDqD,EAHS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MACjD,MAAO,MAAO,MAAO,MAAO,MAAO,OAEZ/C,SAAS8C,EAAU,GAAI,KAE9C,MAAO,CADU,UAAOA,EAAU,GAAjB,YAAuBC,EAAvB,YAAoCD,EAAU,IACzCtC,GAAMhB,KAAK,MCY7BwD,GAAWC,KAAXD,OAEAE,GAAaC,KAAbD,SA8NOE,GA3NK,WAClB,IAAMzQ,EAAUC,cADQ,EAEiCuG,qBAAW5C,GAA7DhC,EAFiB,EAEjBA,mBAAoBN,EAFH,EAEGA,aAAcgD,EAFjB,EAEiBA,YAFjB,EAGAoF,mBAAS,IAHT,mBAGjBC,EAHiB,KAGX+G,EAHW,OAIAhH,mBAAS,IAJT,mBAIjBiH,EAJiB,KAIXC,EAJW,OAKsBlH,mBAAS,IAL/B,mBAKjBmH,EALiB,KAKAC,EALA,OAMUpH,mBAAS,IANnB,mBAMjB7H,EANiB,KAMNkP,EANM,OAOUrH,mBAAS,IAPnB,mBAOjBsH,EAPiB,KAONC,EAPM,OAQQvH,mBAAS,IARjB,mBAQjBwH,EARiB,KAQPC,EARO,OASQzH,mBAAS,IATjB,mBASjB0H,EATiB,KASPC,EATO,OAUQ3H,mBAAS,IAVjB,mBAUjB4H,EAViB,KAUPC,EAVO,OAWM7H,mBAAS,IAXf,mBAWjBmF,EAXiB,KAWR2C,EAXQ,QAYoB9H,mBAAS,IAZ7B,qBAYjB+H,GAZiB,MAYDC,GAZC,SAaUhI,mBAASG,EAAUL,WAAW,IAbxC,qBAaNmI,IAbM,gBAcoBjI,mBAAS,IAd7B,qBAcjBkI,GAdiB,MAcDC,GAdC,SAeoBnI,mBAAS,MAf7B,qBAejBoI,GAfiB,MAeDC,GAfC,MAiBtBnI,qBAAU,WACPtF,IACA3B,EAA2Bf,EAAmBqE,KAAK5D,MAAK,SAAAC,GACvDoO,EAAQpO,EAAI,IACZ,IAAI6L,EAAQ7L,EAAI,GAAGgL,WAAWP,MAAM,KAChCiF,EAAO1P,EAAI,GAAGiL,UAAUR,MAAM,KAClC7F,QAAQC,IAAI2I,GAAqB3B,EAAM,KACvC4C,EAAa5C,EAAM,IACnB8C,EAAanB,GAAqB3B,EAAM,KACxCgD,EAAYa,EAAK,IACjBX,EAAYvB,GAAqBkC,EAAK,KACtCT,EAAYjP,EAAI,GAAG0H,gBACnBwH,EAAWlP,EAAI,GAAGsN,eAClBkB,EAAmBxO,EAAI,GAAG8K,mBAC1BsE,GAAkBpP,EAAI,GAAG2P,oBAE1B1P,EAAoBX,EAAmBkD,gBAAgBzC,MAAK,SAAAC,GAC3DuP,GAAkBvP,QAEnB,CAAC,IAEJ,IAkFM4P,GAAc,oCACjB5Q,EAAasD,OAAS,EAAItD,EAAasF,KAAI,SAACtD,EAAMuD,GAAP,OAAe,kBAAC,GAAD,CAAQvG,IAAKuG,EAAOxC,MAAOf,EAAK0G,gBAAkB1G,EAAK0G,mBAA4B,MAE1ImI,GAAyB,oCAC5BP,GAAehN,OAAS,EAAIgN,GAAehL,KAAI,SAACtD,EAAMuD,GAAP,OAAe,kBAAC,GAAD,CAAQvG,IAAKuG,EAAOxC,MAAOf,EAAK8G,MAAQ9G,EAAK8G,SAAkB,MAKrG,oCACtBP,EAAUL,WAAW5C,KAAI,SAACtD,EAAMuD,GAAP,OAAe,kBAAC,GAAD,CAAQvG,IAAKuG,EAAOxC,MAAOf,GAAQA,OAGhF,OACE,oCACA,kBAAC,IAAD,CAAKwG,OAAQ,CAAE8B,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC1C,0BAAOqG,SAtDQ,SAAC/R,GAChBA,EAAEgS,iBACF,IAAItD,EAAakB,GAAgBe,EAAUnP,GACvCyQ,EAAYrC,GAAgBmB,EAASF,GACrChM,EAAgB,CAChB8F,UAA8B,OAAnB8G,GAA0BnI,EAAKqB,UAAY8G,GAAe9G,UACrElG,eAAmC,OAAnBgN,GAA0BnI,EAAK7E,eAAiBgN,GAAehN,eAC/EkI,aAAcpL,EAAmBoL,aACjCC,gBAAiBrL,EAAmBqL,gBACpCC,cAAetL,EAAmBsL,cAClCC,YAAa,KACbC,kBAAmByD,EACnBvD,WAAYyB,EACZxB,UAAW+E,EACX9E,WAAY,KACZC,gBAAiB,KACjBlK,OAAQ,KAGC3B,EAAmBoJ,UACdpJ,EAAmBkD,eACrBlD,EAAmBoL,aAChBpL,EAAmBqL,gBACrBrL,EAAmBsL,cAEftL,EAAmBwL,kBAC1BxL,EAAmB0L,WACpB1L,EAAmB2L,UAKhC3K,EAAuBhB,EAAmBqE,IAAKf,GAAe7C,MAAK,SAACC,GAClEiQ,KAAQC,QAAQ,CAAEnK,QAAS,2BAC3BrI,EAAQO,KAAR,iCAAuCqB,EAAmBqE,UAoBjChF,UAAU,qBACnC,kBAAC,IAAD,CAAKA,UAAU,aAAaiH,KAAM,IAChC,6BACE,kBAACE,EAAD,CAAcC,QAASwB,EAAUN,aAAcjB,MAAM,UACrD,kBAAC,GAAD,CAAQ6C,MAAM,cACZ,kBAAC,KAAD,CAAOsH,YAAY,GAAGpM,KAAK,YAAYhC,MAAOwM,EAAiBrG,SA9DhD,SAACnK,GACxByQ,EAAmBzQ,EAAEqK,OAAOrG,WA+DtB,kBAAC,GAAD,CAAQ8G,MAAM,YAAYC,OAAQzB,EAAK+I,YACvC,kBAAC,GAAD,CAAQvH,MAAM,SAASC,OAA2B,OAAnB0G,GAA0BnI,EAAKqB,UAAY8G,GAAe9G,YACzF,kBAAC,GAAD,CAAQG,MAAM,eACZC,OAA2B,OAAnB0G,GAA0BnI,EAAK7E,eAAiBgN,GAAehN,eACvEuG,KAAyB,OAAnByG,GAA0BnI,EAAKI,gBAAkB+H,GAAe/H,kBAExE,kBAAC,GAAD,CAAQoB,MAAM,aACZ,kBAAC,KAAMwH,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAQvO,MAAOiN,EAAU9G,SA9GZ,SAACnK,GACxBiB,EAAasF,KAAI,SAAAtD,GACZA,EAAK0G,iBAAmB3J,IACzBkR,EAAYlR,GACZ0R,GAAkBzO,GAClBf,EAAoBe,EAAKwB,gBAAgBzC,MAAK,SAAAC,GAC5CuP,GAAkBvP,GAClBkP,EAAWlP,EAAI,GAAG8H,eAwGX8H,MAIP,kBAAC,GAAD,CAAQ/G,MAAM,YACZ,kBAAC,KAAMwH,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAQvO,MAAOwK,EAASrE,SAzGX,SAACnK,GACXiB,EAAasF,KAAI,SAAAtD,GAC5B,GAAGjD,IAAMiD,EAAK0G,eACZ,OAAO1G,KAGXkO,EAAWnR,KAoGE8R,MAIP,kBAAC,GAAD,CAAQhH,MAAM,kBACZ,kBAAC,KAAMwH,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAQvO,MAAOoN,IACb,kBAAC,GAAD,KAAUA,OAIhB,kBAAC,GAAD,CAAQtG,MAAM,mBACZ,kBAAC,KAAMwH,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAQC,aAAclJ,EAAKmJ,eAAgBzO,MAAOsF,EAAKmJ,eAAgBtI,SAhG9D,SAACnG,GAClBsN,GAAatN,IA+F0FgC,KAAK,kBAClG,kBAAC,GAAD,KAAUsD,EAAKmJ,mBAIrB,kBAAC,GAAD,CAAQ3H,MAAM,cACZ,yBAAKlK,UAAU,YACb,6BACE,kBAAC,KAAM0R,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAYpI,SA/GF,SAAC0F,EAAM6C,GAC7B9B,EAAa8B,IA8GwC1O,MAAOmK,KAAOwC,EAAW,YAAavC,OAvLhF,iBA0LH,6BACE,kBAAC,KAAD,CAAYuE,YAAU,EAACvE,OAAO,UAAUjE,SAzH5B,SAACqD,EAAMoF,GAC7BlC,EAAakC,IAwHkE5O,MAAOmK,KAAO3M,EA7LtF,cAiMH,kBAAC,GAAD,CAAQsJ,MAAM,aACZ,yBAAKlK,UAAU,YACb,6BACE,kBAAC,KAAM0R,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAYpI,SAxHH,SAAC0F,EAAM6C,GAC5B1B,EAAY0B,IAuHwC1O,MAAOmK,KAAO4C,EAnMvD,cAmM8E3C,OAnM9E,iBAsMH,6BACE,kBAAC,KAAD,CAAYuE,YAAU,EAACvE,OAAO,UAAUjE,SAlI7B,SAACqD,EAAMoF,GAC5B9B,EAAY8B,IAiIkE5O,MAAOmK,KAAO0C,EAzMrF,cA6MH,kBAAC,GAAD,CAAQ/F,MAAM,cAAcC,OAAQxJ,EAAmB4L,eAG3D,kBAAC,IAAD,CAAKvM,UAAU,aAAaiH,KAAM,IAC9B,6BACE,qCACA,kBAACqI,GAAD,CAAU2C,KAAM,EAAG7M,KAAK,OAAOhC,MAAOsM,EAAMnG,SAzKrC,SAACnK,GAChBuQ,EAAQvQ,EAAEqK,OAAOrG,QAwKuDoO,YAAY,UAE9E,yBAAKxR,UAAU,qBACb,2BAAOI,KAAK,SAASJ,UAAU,qBAAqBoD,MAAM,sBAC1D,kBAAC,IAAD,CAAQhD,KAAK,UAAUJ,UAAU,cAAcb,QAtJhC,WACvBJ,EAAQO,KAAK,OAqJL,6CC1JC4S,GA5EW,SAACpS,GAAW,IAAD,EACqByF,qBAAW5C,GAAzDhC,EADyB,EACzBA,mBAAoBiE,EADK,EACLA,sBACtBrD,EAAO2H,cAAP3H,GAF2B,EAGTkH,mBAAS,GAHA,mBAG1BC,EAH0B,KAI3B3J,GAJ2B,KAIjBC,eAChB2J,qBAAU,WACN/D,EAAsBrD,KACrB,CAACmH,IAkCN,OACI,yCAC6B4E,IAAvB3M,EACE,oCACI,kBAACwG,EAAD,CAAcC,QAASwB,EAAUP,gBACjC,kBAAC,IAAD,CAAKQ,OAAQ,CAAE8B,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACtC,kBAAC,IAAD,CAAK9K,UAAU,aAAaiH,KAAM,IAClC,6BACKhB,QAAQC,IAAIvF,EAAmB0L,YAChC,kBAAC,GAAD,CAAQnC,MAAOtB,EAAUjB,UAAWwC,OAAQxJ,EAAmBwL,kBAAmB/B,KAAMzJ,EAAmBiO,iBAC3G,kBAAC,GAAD,CAAQ1E,MAAOtB,EAAUhB,SAAUuC,OAAQxJ,EAAmB8Q,YAC9D,kBAAC,GAAD,CAAQvH,MAAOtB,EAAUf,MAAOsC,OAAQxJ,EAAmBwR,iBAAkB/H,KAAMzJ,EAAmBkR,iBACtG,kBAAC,GAAD,CAAQ3H,MAAOtB,EAAUd,WAAYqC,OAAQxJ,EAAmByR,UAAWhI,KAAMzJ,EAAmB0R,YACpG,kBAAC,GAAD,CAAQnI,MAAOtB,EAAUb,UAAWoC,OAAQxJ,EAAmBsL,cAAe7B,KAAMzJ,EAAmBoI,iBACvG,kBAAC,GAAD,CAAQmB,MAAOtB,EAAUZ,SAAUmC,OAAQxJ,EAAmBoL,aAAc3B,KAAMzJ,EAAmBgO,gBACrG,kBAAC,GAAD,CAAQzE,MAAOtB,EAAUX,cAAgBkC,OAAQxJ,EAAmBqQ,oBAGxE,kBAAC,IAAD,CAAKhR,UAAU,aAAaoL,OAAQ,EAAGnE,KAAM,GACzC,6BACA,kBAAC,GAAD,CAAe7B,KAAK,UAAUwH,KAAMjM,EAAmB0L,WAAYQ,MAAM,eAAexF,MAAM,YAGlG,kBAAC,IAAD,CAAKrH,UAAU,aAAaiH,KAAM,GAC9B,6BACI,kBAAC,GAAD,CAAe7B,KAAK,aAAawH,KAAK,OAAOC,MAAM,eAAexF,MAAM,MAAMsF,aAxDxF,WACd,IAAItB,EAAW,IAAIC,KAGfC,EAFS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MACjD,MAAO,MAAO,MAAO,MAAO,MAAO,OACZF,EAASG,YAK5ByE,EAAW,CAJC,CAAC5E,EAASK,UAAWH,EAAWF,EAASM,eAAeC,KAAK,MAC9D,IAAIN,MAAOO,eAAe,SAChBC,MAAM,KACV,IACYF,KAAK,KAClC3H,EAAgB,CAChB8F,UAAWpJ,EAAmBoJ,UAC9BlG,eAAgBlD,EAAmBkD,eACnCkI,aAAcpL,EAAmBoL,aACjCC,gBAAiBrL,EAAmBqL,gBACpCC,cAAetL,EAAmBsL,cAClCC,YAAa,KACbC,kBAAmBxL,EAAmBwL,kBACtCE,WAAY1L,EAAmB0L,WAC/BC,UAAW2D,EACX1D,WAAY,KACZC,gBAAiB,KACjBlK,OAAQ,KAEZX,EAAuBJ,EAAI0C,GAAe7C,MAAK,SAACC,GACzCA,GACCtC,EAAQO,KAAK,2BAmCX,O,OCxDHgT,OAzBf,SAA+BxS,GAAQ,IAC3B6M,EAAuE7M,EAAvE6M,aAAavH,EAA0DtF,EAA1DsF,KAAKwH,EAAqD9M,EAArD8M,KAAKC,EAAgD/M,EAAhD+M,MAAOxF,EAAyCvH,EAAzCuH,MAAOyF,EAAkChN,EAAlCgN,OAAOC,EAA2BjN,EAA3BiN,SAAUC,EAAiBlN,EAAjBkN,MAAOC,EAAUnN,EAAVmN,OADnC,EAERxE,mBAAS,GAFD,mBAEpB0E,GAFoB,aAGG1E,mBAASmE,GAHZ,mBAG3BnI,EAH2B,KAGd2I,EAHc,KAalC,OATAzE,qBAAU,WACN,IAAI0E,OAAiBC,IAATV,EAAqBA,EAAKd,MAAM,KAAK,MAC7CrJ,EAAU8K,OAASC,OAAO,WAC1BC,EAAeF,KAAOA,KAAO9K,EAAQ,YAAYiL,KAAKH,KAAOF,EAAM,GAAG,cAAcG,OAAO,YAC/FL,GAAS,SAAAD,GAAK,OAAIA,EAAQ,KAC1BE,EAAcK,GACdxH,QAAQC,IAAI,WAAYuH,KACzB,CAAC,IAGJ,kBAAC,IAAM1N,SAAP,KACG,yBAAKC,UAAU,kBACV2G,MAAO,CAACC,WAAWS,EAAOyF,OAAO,aAAD,OAAcA,GAASzF,MAAM0F,EAASC,MAAMA,EAAMC,OAAOA,GACzF9N,QAASwN,GACT,2BAAIvH,GACJ,2BAAmB,SAAfX,EAAwBA,EAAa,OACzC,2BAAIoI,MCuDD0F,I,OAhEc,SAACzS,GAAW,IAAD,EAC+ByF,qBAAW5C,GAAzDhC,GADe,EAC7BD,aAD6B,EACfC,oBAAoBiE,EADL,EACKA,sBACnCrD,EAAO2H,cAAP3H,GAF8B,EAGZkH,mBAAS,GAHG,mBAG7BC,EAH6B,UAIpB1J,cAChB2J,qBAAU,WACN/D,EAAsBrD,KACrB,CAACmH,IAcN,OACI,yCAC6B4E,IAAvB3M,EACE,oCACI,kBAACwG,EAAD,CAAcC,QAASwB,EAAUlB,aAAcpB,OAAK,IACpD,kBAAC,IAAD,CAAKuC,OAAQ,CAAE8B,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACtC,kBAAC,IAAD,CAAK9K,UAAU,aAAaiH,KAAM,IAC9B,6BACI,kBAAC,GAAD,CAAQiD,MAAOtB,EAAUjB,UAAWwC,OAAQxJ,EAAmBwL,kBAAmB/B,KAAMzJ,EAAmBiO,iBAC3G,kBAAC,GAAD,CAAQ1E,MAAOtB,EAAUhB,SAAUuC,OAAQxJ,EAAmB8Q,YAC9D,kBAAC,GAAD,CAAQvH,MAAOtB,EAAUf,MAAOsC,OAAQxJ,EAAmBwR,iBAAkB/H,KAAMzJ,EAAmBkR,iBACtG,kBAAC,GAAD,CAAQ3H,MAAOtB,EAAUd,WAAYqC,OAAQxJ,EAAmByR,UAAWhI,KAAMzJ,EAAmB0R,YACpG,kBAAC,GAAD,CAAQnI,MAAOtB,EAAUb,UAAWoC,OAAQxJ,EAAmBsL,cAAe7B,KAAMzJ,EAAmBoI,iBACvG,kBAAC,GAAD,CAAQmB,MAAOtB,EAAUZ,SAAUmC,OAAQxJ,EAAmBoL,aAAc3B,KAAMzJ,EAAmBgO,gBACrG,kBAAC,GAAD,CAAQzE,MAAOtB,EAAUX,cAAgBkC,OAAQxJ,EAAmBqQ,oBAG5E,kBAAC,IAAD,CAAKhR,UAAU,aAAaiH,KAAM,IAC9B,yBAAKjH,UAAU,aACX,kBAAC,GAAD,CACIoF,KAAK,WACLwH,KAAMjM,EAAmB0L,WACzBQ,MAAM,eACNE,SAAS,QACT1F,MAAM,QACNyF,OAAO,QACPE,MAAM,QACNC,OAAO,cAWzB,Q,2DCxEZuF,I,qNACJC,QAAU,kBAAM,G,EAChBC,WAAa,SAACtT,GACZ,OAAO0C,EAA0B1C,GAAGgC,MAAK,SAAAC,GAClCA,IACCiQ,KAAQC,QAAQ,wBAChBoB,YAAW,WAAYC,OAAOvM,SAASwM,QAAO,KAAW,U,0EAIzD,IAAD,SAQHC,KAAKhT,MANPiT,EAFK,EAELA,MACAC,EAHK,EAGLA,QAEAC,GALK,EAILC,YAJK,EAKLD,WAKIE,GAVC,EAMLC,cANK,EAOLC,eAIA,kBAAC,IAAD,KACE,kBAAC,IAAK9T,KAAN,CAAWF,IAAI,KACX,kBAAC,IAAD,CAAM8G,GAAE,UAAK4M,EAAMO,IAAX,YAAkBN,IAA1B,SAEJ,kBAAC,IAAKzT,KAAN,CAAWF,IAAI,KACb,kBAAC,IAAD,CAAM8G,GAAE,UAAK4M,EAAMO,IAAX,iBAAuBN,IAAYC,EAAY,OAAS,SAElE,kBAAC,IAAK1T,KAAN,CAAWF,IAAI,SAASG,KAAM,kBAACC,EAAA,EAAD,OAC1B,uBAAG6F,KAAK,IAAInG,QAAS,SAACC,GAAYwT,OAAOW,QAAQ,+CAA+C,EAAKb,WAAWM,KAAhH,aAOR,OACE,kBAAC,IAAD,CAAU9T,QAASiU,EAAWK,QAAS,CAAC,UACtC,uBAAGxT,UAAU,oBAAoBsF,KAAK,KACrC,kBAAC5F,EAAA,EAAD,Y,GAvCmC+T,IAAMC,YA8CnCC,eAAWnB,I,UC8LXoB,G,YAxOX,WAAY9T,GAAQ,IAAD,wBACf,8CAAMA,KAgHV+T,kBAAoB,SAAAC,GAClB,GAAIA,EAAS,CACX,IAAMC,EAAmBD,EAAQnO,KAAI,SAAA7G,GACnC,MAAO,CACLkG,IAAIlG,EAAKkG,IACTmH,kBAAmBrN,EAAKqN,kBACxBsF,UAAW3S,EAAK2S,UAChB9C,cAAe7P,EAAK6P,cACpBzC,YAAapN,EAAKoN,YAClBnD,eAAgBjK,EAAKiK,eACrBsD,WAAYvN,EAAKuN,WACjBC,UAAWxN,EAAKwN,UAChBC,WAAYzN,EAAKyN,WACjBC,gBAAiB1N,EAAK0N,oBAG1B,EAAKwH,SAAS,CAAEF,QAASC,MAjIV,EAqInBE,YAAc,SAAC7U,EAAG8K,GAAW,IAGvBgK,EAFIC,EAAW,EAAKjU,MAAhBiU,OACkB,EAAKrU,MAAvBsU,cAINF,EADE9U,EAAEN,KACK,eAAQM,EAAEN,KAAV,CAAgBuV,gBAFH,kDAIV,CACVnK,QACAoK,WAAY,UACZC,QAASnV,EAAEoV,WACXC,WAAY,uBACZJ,gBAToB,gDAUpBK,UAAWpJ,OAAOkJ,YAGtBvO,QAAQC,IAAI9G,GACZ+U,EAAO7U,KAAK4U,GACZ,EAAKF,SAAS,CAAEG,YAxJC,EAyKnBQ,eAAiB,SAAAC,GACb3O,QAAQC,IAAI,4BAA6B0O,GACzC,EAAKZ,SAAS,CAAEY,qBA3KD,MAEgB,EAAK9U,MAA5BiT,EAFO,EAEPA,MAFO,EAEA8B,YAFA,OAGf,EAAK3U,MAAQ,CACX4U,WAAY,CACV,CACEC,WAAY,MACZC,MAAO,MACPC,QAAQ,EACRC,UAAW,CAAC,cAAe,cAC3BlI,MAAO,IACP5K,OAAQ,sBAEV,CACE2S,WAAY,oBACZC,MAAO,oBACPC,QAAQ,EACRC,UAAW,CAAC,cAAe,cAC3BlI,MAAO,IACP5K,OAAQ,sBAEV,CACE2S,WAAY,YACZC,MAAO,YACPhI,MAAO,IACP5K,OAAQ,sBAEV,CACE2S,WAAY,gBACZC,MAAO,gBACPhI,MAAO,IACP5K,OAAQ,sBAEV,CACE2S,WAAY,cACZC,MAAO,cACPG,UAAW,CAAEC,UAAW,UACxBpI,MAAO,IACP5K,OAAQ,uBACRiT,aAAc,eAEhB,CACEN,WAAY,iBACZC,MAAO,iBACPG,UAAW,CAAEC,UAAW,UACxBpI,MAAO,IACP5K,OAAQ,uBACRiT,aAAc,kBAEhB,CACEN,WAAY,aACZC,MAAO,aACPG,UAAW,CAAEC,UAAW,QACxBhT,OAAQ,qBACR4K,MAAO,KAET,CACE+H,WAAY,YACZC,MAAO,YACPG,UAAW,CAAEC,UAAW,QACxBhT,OAAQ,qBACR4K,MAAO,KAET,CACE+H,WAAY,aACZC,MAAO,aACPG,UAAW,CAAEC,UAAW,UACxBpI,MAAO,IACPsI,KAAM,QAER,CACEP,WAAY,kBACZC,MAAO,kBACPG,UAAW,CAAEC,UAAW,UACxBpI,MAAO,IACPsI,KAAM,QAER,CACEP,WAAY,KACZI,UAAW,CAAErI,OAAQ,OACrByI,sBAAuB,SAAAC,GAAG,OACxB,kBAAC,GAAD,CACExC,QAASwC,EAAI1W,KAAKkG,IAClBkO,aAAa,EACbD,WAAW,EACXG,cAAc,qCAGlBpG,MAAO,GACPiI,OAAQ,QACRQ,UAAU,EACVrT,QAAQ,EACRsT,SAAU,GACVC,WAAW,EACXC,YAAY,IAGhBC,cAAe,CAAEJ,UAAU,EAAMrT,QAAQ,EAAMuT,WAAW,EAAMD,SAAU,CAAC,kBAC3E5B,QAAS,GACTK,OAAQ,GACR2B,UAAW,SAASC,KAAKhD,GACzBiD,WAAW,CACTC,UAAU,KAGd,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,iBACnB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,iBA1GR,E,mFA6Gf1U,EAAuBqR,KAAK5S,MAAM8V,WAAWC,WAC5C7U,KAAK0R,KAAKe,mBACVwC,OAAM,SAAAtV,GAAK,OAAIkF,QAAQC,IAAInF,Q,kCA6CpByI,GAAQ,IAAD,OACfA,EAAM4H,iBACNpP,EAA6B8Q,KAAK5S,MAAM8V,WAAWC,WAClD7U,MAAK,SAACC,GAAD,OAAS,EAAK2S,SAAS,CAAEF,QAASzS,OACvCgV,OAAM,SAAAtV,GAAK,OAAIkF,QAAQC,IAAInF,Q,sCAEhByI,GACZsJ,KAAKkB,SAAS,CACVgC,WAAW,CACPC,UAAUzM,EAAMC,OAAOrG,W,+BAQzB,IACAgM,EAAWC,KAAXD,OADD,EAEwF0D,KAAK5S,MAA5F4U,EAFD,EAECA,WAAYe,EAFb,EAEaA,cAAe/B,EAF5B,EAE4BA,QAASK,EAFrC,EAEqCA,OAAQ2B,EAF7C,EAE6CA,UAA4BE,GAFzE,EAEwDpB,gBAFxD,EAEyEoB,YAK1EM,GAFMxD,KAAK6B,eAEG,CAClB4B,UAAWT,EAAY,QAAU,SACjCU,YAAaC,SAASC,cAAc,UAKtC,OAAOvC,EAAOxQ,OACR,GAEA,yBACA3D,UAAU,kBACV2G,MAAO,CAAEsG,OAAQ,UAEjB,yBAAKjN,UAAU,uBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACX,qCAEJ,6BACA,kBAAC,KAAM0R,MAAP,CAAaC,SAAO,GAChB,kBAAC,KAAD,CAAQC,aAAc,MAAQxM,KAAK,SAC/B,kBAACgK,EAAD,CAAQhM,MAAM,OAAQ,WAKlC,yBAAKpD,UAAU,0BACX,yBAAKA,UAAU,UACX,0CAEJ,6BACI,kBAAC,KAAD,CAAOoF,KAAK,YAAYmE,SAAUuJ,KAAKsD,gBAAiBhT,MAAO4S,EAAWC,aAE9E,yBAAKjW,UAAU,SACX,kBAAC,IAAD,CAAQI,KAAK,UAAUjB,QAAS2T,KAAKoD,aAArC,YAIZ,kBAAC,eAAD,CACES,aAAW,EACXC,2BAAyB,EACzBf,cAAeA,EACff,WAAYA,EACZhB,QAASA,EACTwC,YAAaA,EACbO,eAAgB,S,GAnOMnD,aCsB5BtE,GAAWC,KAAXD,OAEAE,GAAaC,KAAbD,SA8JOwH,GA3JmB,WAChC,IAAM/X,EAAUC,cADsB,EAEkEuG,qBAAW5C,GAA5GhC,EAF+B,EAE/BA,mBAF+B,KAEZL,UAFY,EAEDD,aAFC,EAEagD,YAFb,EAE0BE,aAF1B,EAEwCqB,sBACtD6D,mBAAS,KAHK,mBAG/BC,EAH+B,KAGzB+G,EAHyB,OAIdhH,mBAAS,IAJK,mBAI/BiH,EAJ+B,KAIzBC,EAJyB,OAKJlH,mBAAS,IALL,mBAK/B7H,EAL+B,KAKpBkP,EALoB,OAMJrH,mBAAS,IANL,mBAM/BsH,EAN+B,KAMpBC,EANoB,OAONvH,mBAAS,IAPH,mBAO/BwH,EAP+B,KAOrBC,EAPqB,OAQNzH,mBAAS,IARH,mBAQ/B0H,EAR+B,KAQrBC,EARqB,OASE3H,mBAAS,IATX,mBAS/BsO,EAT+B,KASjBC,EATiB,OAUJvO,mBAASG,EAAUL,WAAW,IAV1B,mBAU/B0O,EAV+B,KAUpBvG,EAVoB,KAWhCnP,EAAO2H,cAAP3H,GACJoH,qBAAU,WACRjH,EAA2BH,GAAIH,MAAK,SAAAC,GAClCoO,EAAQpO,EAAI,IACZ,IAAI6L,EAAQ7L,EAAI,GAAGgL,WAAWP,MAAM,KAChCiF,EAA4B,OAArB1P,EAAI,GAAGiL,UAAqBjL,EAAI,GAAGiL,UAAUR,MAAM,KAAM,GACpE7F,QAAQC,IAAI2I,GAAqB3B,EAAM,KACvC4C,EAAa5C,EAAM,IACnB8C,EAAanB,GAAqB3B,EAAM,KACxCgD,EAAYa,EAAK,IACjBX,EAAYvB,GAAqBkC,EAAK,KACtCiG,EAAgB3V,EAAI,GAAGwQ,qBAExB,CAAC,IAEJ,IAAMtI,EAAW,SAACnK,GAChBuQ,EAAQvQ,EAAEqK,OAAOrG,QA+Cb8T,EAAqB,oCACtBtO,EAAUL,WAAW5C,KAAI,SAACtD,EAAMuD,GAAP,OAAe,kBAAC,GAAD,CAAQvG,IAAKuG,EAAOxC,MAAOf,GAAQA,OAGhF,OACE,oCACA,kBAAC,IAAD,CAAKwG,OAAQ,CAAE8B,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAC1C,0BAAO9K,UAAU,qBACf,kBAAC,IAAD,CAAKA,UAAU,aAAaiH,KAAM,IAChC,6BACE,kBAACE,EAAD,CAAcC,QAASwB,EAAUV,2BACjC,kBAAC,GAAD,CAAQgC,MAAM,cAAcC,OAAQzB,EAAKyD,oBACzC,kBAAC,GAAD,CAAQjC,MAAM,YAAYC,OAAQzB,EAAK+I,YACvC,kBAAC,GAAD,CAAQvH,MAAM,aAAaC,OAAQzB,EAAKK,iBACxC,kBAAC,GAAD,CAAQmB,MAAM,YAAYC,OAAQzB,EAAKiG,gBACvC,kBAAC,GAAD,CAAQzE,MAAM,mBACZ,kBAAC,KAAMwH,MAAP,CAAaC,SAAO,GACpB,kBAAC,KAAD,CAAQvO,MAAO2T,EAAcxN,SA/CV,SAACnG,GAC5B4T,EAAgB5T,IA8CqDgC,KAAK,kBAChE,kBAAC,GAAD,CAAQhC,MAAOsF,EAAKmJ,eAAgBtI,SAAUA,GAAWb,EAAKmJ,mBAIlE,kBAAC,GAAD,CAAQ3H,MAAM,cACZ,yBAAKlK,UAAU,YACb,6BACE,kBAAC,KAAM0R,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAYpI,SAjEF,SAAC0F,EAAM6C,GAC7B9B,EAAa8B,IAgEwC1O,MAAOmK,KAAOwC,EAAW,YAAavC,OAtGhF,iBAyGH,6BACE,kBAAC,KAAD,CAAYuE,YAAU,EAACvE,OAAO,UAAUjE,SA3E5B,SAACqD,EAAMoF,GAC/BlC,EAAakC,IA0EoE5O,MAAOmK,KAAO3M,EA5GtF,cAgHH,kBAAC,GAAD,CAAQsJ,MAAM,aACZ,yBAAKlK,UAAU,YACb,6BACE,kBAAC,KAAM0R,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAYpI,SA1EH,SAAC0F,EAAM6C,GAC5B1B,EAAY0B,IAyEwC1O,MAAOmK,KAAO4C,EAlHvD,cAkH8E3C,OAlH9E,iBAqHH,6BACE,kBAAC,KAAD,CAAYuE,YAAU,EAACvE,OAAO,UAAUjE,SApF7B,SAACqD,EAAMoF,GAC5B9B,EAAY8B,IAmFkE5O,MAAOmK,KAAO0C,EAxHrF,cA4HH,kBAAC,GAAD,CAAQ/F,MAAM,cACZ,kBAAC,KAAMwH,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAQvO,MAAO6T,EAAW1N,SAjFjB,SAACnG,GACpBsN,EAAatN,IAgF+CgC,KAAK,aACpD8R,KAIP,kBAAC,GAAD,CAAQhN,MAAM,cAAcC,OAAQxJ,EAAmB4L,aACvD,6BACE,qCACA,kBAAC,GAAD,CAAU0F,KAAM,EAAG7M,KAAK,OAAOhC,MAAOsM,EAAMnG,SAAUA,EAAUiI,YAAY,UAE9E,yBAAKxR,UAAU,iBACX,kBAAC,IAAD,CACII,KAAK,UACLuG,MAAO,CAACwQ,gBAAgB,OACxBnX,UAAU,cACVb,QA1FM,WACpBJ,EAAQqY,WAqFE,IAKE,qCAAU,6BAAV,0BAEF,kBAAC,IAAD,CACIhX,KAAK,UACLJ,UAAU,cACVb,QA7FG,WACjB,IAAI2O,EAAakB,GAAgBe,EAAUnP,GACvCyQ,EAAYrC,GAAgBmB,EAASF,GACnChM,EAAgB,CAChB8F,UAAWrB,EAAKqB,UAChBlG,eAAgB6E,EAAK7E,eACrBkI,aAAcrD,EAAKqD,aACnBC,gBAAiBtD,EAAKsD,gBACtBC,cAAevD,EAAKuD,cACpBC,YAAa,KACbC,kBAAmBzD,EAAKyD,kBACxBE,WAAYyB,EACZxB,UAAW+E,EACX9E,WAAY,KACZC,gBAAiB,KACjB6K,KAAK3H,EACLpN,OAAQ,KAEZ2D,QAAQC,IAAI+Q,EAAWnJ,EAAYuD,GACnC1P,EAAuB+G,EAAK1D,IAAKf,GAAe7C,MAAK,SAACC,GACpDiQ,KAAQC,QAAQ,CAAEnK,QAAS,0BAC3BrI,EAAQO,KAAR,iCAyEUqH,MAAO,CAACE,QAAS,SAJrB,IAKE,mD,UC1KZyQ,GAAU,CACZ,CACIpN,MAAO,GACPqN,UAAW,mBACXlY,IAAK,IAET,CACI6K,MAAO,OACPqN,UAAW,aACXlY,IAAK,aACLmY,OAAQ,SAAAzQ,GAAI,OAAI,2BAAIA,KAExB,CACImD,MAAO,UACPqN,UAAW,aACXlY,IAAK,cAET,CACI6K,MAAO,aACPqN,UAAW,6BACXlY,IAAK,8BAET,CACI6K,MAAO,YACPqN,UAAW,yBACXlY,IAAK,0BAET,CACI6K,MAAO,WACPqN,UAAW,wBACXlY,IAAK,yBAET,CACI6K,MAAO,kBACPqN,UAAW,yBACXlY,IAAK,0BAET,CACI6K,MAAO,aACPqN,UAAW,sBACXlY,IAAK,uBAET,CACI6K,MAAO,YACPqN,UAAW,qBACXlY,IAAK,sBAET,CACE6K,MAAO,OACP7K,IAAK,OACLkY,UAAW,OACXC,OAAQ,SAAAzQ,GAAI,OAAI,2BAAIA,MA8BX0Q,GA3BmB,WAAO,IAAD,EACZhP,mBAAS,GADG,mBAC7BC,EAD6B,aAEZD,mBAAS,IAFG,mBAE7B3J,EAF6B,KAEvB4Y,EAFuB,OAG+CnS,qBAAW5C,GACxF5D,GAJ8B,EAG5BsE,YAH4B,EAGfhD,aAHe,EAGAmD,WAHA,EAGYjD,QAHZ,EAGqBgD,aAHrB,EAGmCL,SACvDlE,eACVuC,EAAO2H,cAAP3H,GACNoH,qBAAU,Y1B5BwB,SAACpH,GACnC,OAAOL,IAAMC,IAAN,UAAaH,EAAb,gCAA6CO,IAAMH,MAAK,SAACC,GAAD,OAASA,EAAIvC,S0B4BxE6Y,CAAuBpW,GAAIH,MAAK,SAAAC,GAAG,OAAEqW,EAAQrW,QAC9C,CAACqH,IAIJ,OACI,6BACK5J,EAAK6E,OAAS,EAAG,kBAAC,KAAD,CAAO2T,QAASA,GAASM,WAAY9Y,IAAW,UAClE,yBAAKkB,UAAU,iBACX,kBAAC,IAAD,CACII,KAAK,UACLJ,UAAU,cACVb,QAVM,WAClBJ,EAAQqY,UAUIzQ,MAAO,CAACwQ,gBAAgB,wBAJ5B,IAKE,kDCvDV/H,GAAWC,KAAXD,OAEAE,GAAaC,KAAbD,SA+MOuI,GA5MkB,WAC/B,IAAM9Y,EAAUC,cADqB,EAEmEuG,qBAAW5C,GAA5GhC,EAF8B,EAE9BA,mBAA8BN,GAFA,EAEXC,UAFW,EAEAD,cAFA,KAEcgD,YAFd,EAE2BE,aAF3B,EAEyCqB,sBAC9C6D,mBAAS,KAHJ,mBAG9BqP,EAH8B,KAGpBC,EAHoB,OAIbtP,mBAAS,IAJI,mBAI9BC,EAJ8B,aAKbD,mBAAS,KALI,mBAK9BiH,EAL8B,aAMSjH,mBAAS,KANlB,mBAM9BmH,EAN8B,KAMbC,EANa,OAOHpH,mBAAS,IAPN,mBAO9B7H,EAP8B,KAOnBkP,EAPmB,OAQHrH,mBAAS,IARN,mBAQ9BsH,EAR8B,KAQnBC,EARmB,OASLvH,mBAAS,IATJ,mBAS9BwH,EAT8B,KASpBC,EAToB,OAULzH,mBAAS,IAVJ,mBAU9B0H,EAV8B,KAUpBC,EAVoB,OAWL3H,mBAAS,IAXJ,mBAW9B4H,EAX8B,KAWpBC,EAXoB,OAYP7H,mBAAS,IAZF,mBAY9BmF,EAZ8B,KAYrB2C,GAZqB,QAaO9H,mBAAS,IAbhB,qBAa9B+H,GAb8B,MAadC,GAbc,SAcHhI,mBAASG,EAAUL,WAAW,IAd3B,qBAc9B0O,GAd8B,gBAeOxO,mBAAS,KAfhB,qBAe9BkI,GAf8B,MAedC,GAfc,SAgBOnI,mBAAS,IAhBhB,qBAgB9BoI,GAhB8B,MAgBdC,GAhBc,SAiBiBrI,mBAAS,IAjB1B,qBAiBTuP,IAjBS,aAkBxB9O,cAAP3H,GACJoH,qBAAU,WACR1H,IAAqBG,MAAK,SAAAC,GACxBiP,EAAYjP,EAAI,GAAG0H,gBACnB+H,GAAkBzP,QAEnB,CAAC,IACJ,IAuFM4P,GAAc,oCACjBJ,GAAelN,OAAS,EAAIkN,GAAelL,KAAI,SAACtD,EAAMuD,GAAP,OAAe,kBAAC,GAAD,CAAQvG,IAAKuG,EAAOxC,MAAOf,EAAK0G,gBAAkB1G,EAAK0G,mBAA4B,MAE9ImI,GAAyB,oCAC5BP,GAAehN,OAAS,EAAIgN,GAAehL,KAAI,SAACtD,EAAMuD,GAAP,OAAe,kBAAC,GAAD,CAAQvG,IAAKuG,EAAOxC,MAAOf,EAAK8G,MAAQ9G,EAAK8G,SAAkB,MAGhI,OACE,oCACA,kBAAC,IAAD,CAAKN,OAAQ,CAAE8B,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KACxC,kBAAC,IAAD,CAAK9K,UAAU,aAAaiH,KAAM,IAChC,6BACE,kBAACE,EAAD,CAAcC,QAASwB,EAAUV,2BACjC,kBAAC,GAAD,CAAQgC,MAAM,cACZ,kBAAC,KAAD,CAAOsH,YAAY,mBAAmBpO,MAAOwM,EAAiBxK,KAAK,YAAYmE,SAzDhE,SAACnK,GACxBoC,EAAoBpC,EAAEqK,OAAOrG,OAAOhC,MAAK,SAAAC,GACvC2W,GAAuB3W,GACvB4E,QAAQC,IAAI7E,MAGdwO,EAAmBzQ,EAAEqK,OAAOrG,WAqDtB,kBAAC,GAAD,CAAQ8G,MAAM,YACZ,kBAAC,KAAD,CAAOsH,YAAY,WAAWpM,KAAK,WAAWhC,MAAO0U,EAAUvO,SA5FhD,SAACnK,GACxB2Y,EAAY3Y,EAAEqK,OAAOrG,WA6Ff,kBAAC,GAAD,CAAQ8G,MAAM,aACZ,kBAAC,KAAMwH,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAQvO,MAAOiN,EAAU9G,SA5GZ,SAACnK,GACxByR,GAAelL,KAAI,SAAAtD,GACdA,EAAK0G,iBAAmB3J,IACzBkR,EAAYlR,GACZkC,EAAoBe,EAAKwB,gBAAgBzC,MAAK,SAAAC,GAC5CoP,GAAkBpP,EAAI,GAAGwI,aACzB+G,GAAkBvP,GAClBkP,GAAWlP,EAAI,GAAG8H,eAsGX8H,MAIP,kBAAC,GAAD,CAAQ/G,MAAM,YACZ,kBAAC,KAAMwH,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAQvO,MAAOwK,EAASrE,SAjGX,SAACnK,GACXiB,EAAasF,KAAI,SAAAtD,GAC5B,GAAGjD,IAAMiD,EAAK0G,eACZ,OAAO1G,KAGXkO,GAAWnR,KA4FE8R,MAIP,kBAAC,GAAD,CAAQhH,MAAM,kBACZ,kBAAC,KAAMwH,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAQvO,MAAOoN,OAKnB,kBAAC,GAAD,CAAQtG,MAAM,cACZ,yBAAKlK,UAAU,YACb,6BACE,kBAAC,KAAM0R,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAYpI,SAhGF,SAAC0F,EAAM6C,GAC7B9B,EAAa8B,IA+FyCtE,OA9J3C,iBAiKH,6BACE,kBAAC,KAAD,CAAYuE,YAAU,EAACvE,OAAO,UAAUjE,SA1G5B,SAACqD,EAAMoF,GAC7BlC,EAAakC,SA6GT,kBAAC,GAAD,CAAQ9H,MAAM,aACZ,yBAAKlK,UAAU,YACb,6BACE,kBAAC,KAAM0R,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CAAYpI,SAzGH,SAAC0F,EAAM6C,GAC5B1B,EAAY0B,IAwGyCtE,OA1K1C,iBA6KH,6BACE,kBAAC,KAAD,CAAYuE,YAAU,EAACvE,OAAO,UAAUjE,SAnH7B,SAACqD,EAAMoF,GAC5B9B,EAAY8B,SAsHR,kBAAC,GAAD,CAAQ9H,MAAM,cAAcC,OAAQxJ,EAAmB4L,aACvD,6BACI,qCACA,kBAAC,GAAD,CAAU0F,KAAM,EAAG7M,KAAK,OAAOhC,MAAOsM,EAAO8B,YAAY,UAE7D,yBAAKxR,UAAU,iBACX,kBAAC,IAAD,CACII,KAAK,UACLuG,MAAO,CAACwQ,gBAAgB,OACxBnX,UAAU,cACVb,QA7GM,WACpBJ,EAAQqY,WAwGE,IAKE,qCAAU,6BAAV,0BAEF,kBAAC,IAAD,CACIhX,KAAK,UACLJ,UAAU,cACVb,QAhHG,WACjB,IAAI2O,EAAakB,GAAgBe,EAAUnP,GACvCyQ,EAAYrC,GAAgBmB,EAASF,GAEP,OAAnBY,GAA0BnI,EAAKqB,UAAY8G,GAAe9G,UAClC,OAAnB8G,GAA0BnI,EAAK7E,eAAiBgN,GAAehN,eACjElD,EAAmBoL,aAChBpL,EAAmBqL,gBACrBrL,EAAmBsL,cASpChG,QAAQC,IAAI,aAAc,CACxB4H,aACAuD,YACE3B,OACAuH,aACArW,YACAmP,YACAH,kBACAkI,aAEJxG,KAAQC,QAAQ,CAAEnK,QAAS,mCAsFfT,MAAO,CAACE,QAAS,SAJrB,IAKE,kDC1HHoR,I,OA7FO,CAClB,CACIC,UAAW1P,GACXrD,KAAM,aACNgT,OAAO,EACPjO,MAAO,aAEX,CACIgO,UAAW1P,GACXrD,KAAM,IACNgT,OAAO,EACPjO,MAAO,aAEX,CACIgO,UAAWjP,GACX9D,KAAM,kBACNiT,qBAAqB,EACrBD,OAAO,EACPjO,MAAO,aAEX,CACIgO,UAAW9O,GACXjE,KAAM,4BACNgT,OAAO,EACPjO,MAAO,cAEX,CACIgO,UAAWvO,GACXxE,KAAM,sBACNgT,OAAO,EACPjO,MAAO,iBAEX,CACIgO,UAAWG,GACXlT,KAAM,iBACNgT,OAAO,EACPjO,MAAO,iBAEX,CACIgO,UAAW3J,GACXpJ,KAAM,mBACNgT,OAAO,EACPjO,MAAO,kBAEX,CACIgO,UAAW1I,GACXrK,KAAM,gBACNgT,OAAO,EACPjO,MAAO,eAEX,CACIgO,UAAWhG,GACX/M,KAAM,0BACNgT,OAAO,EACPjO,MAAO,oBAEX,CACIgO,UAAW3F,GACXpN,KAAM,6BACNgT,OAAO,EACPjO,MAAO,uBAEX,CACIgO,UAAWtE,GACXzO,KAAM,4BACNgT,OAAO,EACPjO,MAAO,yBAEX,CACIgO,UAAWpB,GACX3R,KAAM,qCACNgT,OAAO,EACPjO,MAAO,6BAEX,CACIgO,UAAWT,GACXtS,KAAM,gCACNgT,OAAO,EACPjO,MAAO,yBAEX,CACIgO,UAAWL,GACX1S,KAAM,6CACNgT,OAAO,EACPjO,MAAO,4BAEX,CACIgO,UCvFa,WAAO,IAAD,EAC4B3S,qBAAW5C,GAAxDW,EADiB,EACjBA,gBAAkB5C,EADD,EACCA,aADD,KACeE,UAChB6H,mBAAS,IAFR,mBAElBC,EAFkB,aAGiBD,mBAAS,QAH1B,mBAGlB6P,EAHkB,KAIjBlJ,GAJiB,KAINC,KAAXD,QACFrQ,EAAUC,cACd2J,qBAAU,WACRrF,MACC,CAACoF,IACJ,IAII8F,EADEC,EAAqB/N,EAAaiD,OAAS,EAAIxB,IAAEuM,QAAQhO,EAAc,CAAC,OAAQ,CAAC,SAAW,KAElG,OAAG+N,GAEDD,EADYrM,IAAEC,OAAOqM,GAAoB,SAASpM,GAAQ,OAA0B,OAAnBA,EAAKiK,aAE/D3G,KAAI,SAACtD,EAAMuD,GACd,IACIgH,EADgBzK,IAAE2J,MAAMzJ,EAAKgK,WAAY,KACpB,GACzB,OAAQ,kBAAC,GAAD,CACFhN,IAAKuG,EACLgI,QAASvL,EAAK0J,aACd9J,OAAQI,EAAK8J,kBACb0B,SAAS,KACTC,WAAYlB,EACZmB,iBAAkB1L,EAAKgK,WACvB2B,YAAa3L,EAAKsM,cAClBV,OAAQ5L,EAAK0G,eACbmF,MAAO7L,EAAKuM,eACZjC,aAAc,kBArBJtN,EAqBuBgD,EAAK2C,SApBhDjG,EAAQO,KAAR,8BAAoCD,IADjB,IAACA,QA8BtB,oCACI,yBAAKW,UAAU,iBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACX,yCAEJ,6BACA,kBAAC,KAAM0R,MAAP,CAAaC,SAAO,GAChB,kBAAC,KAAD,CAAQvO,MAAOkV,EAAgBlT,KAAK,YAChC,kBAACgK,EAAD,CAAQhM,MAAM,OAAQ,WAKlC,yBAAKuD,MAAO,CAAC4R,YAAa,OAAOnD,UAAU,WACvC,sDAA4B,6BAA5B,eAGP5G,IAtBI,kBAAC,EAAD,ODqDLrJ,KAAM,iBACNgT,OAAO,EACPjO,MAAO,kBElFA+N,GAfA,SAACnY,GAAD,OACX,kBAAC,IAAD,CAAQf,QAAUA,GAChB,kBAAC,IAAD,KACIyZ,GAAO7S,KAAI,SAAC8S,EAAO7S,GAAW,IACX8S,EAAwCD,EAAnDP,UAA2BM,EAAwBC,EAAxBD,OAAQL,EAAgBM,EAAhBN,MAAOhT,EAASsT,EAATtT,KAElD,OAAO,kBAAC,IAAD,CACLgT,MAAQA,EACR9Y,IAAMuG,EACNT,KAAOA,EACPqS,OAAS,kBAAM,kBAACkB,EAAD,iBAAqB5Y,EAArB,CAA6B0Y,OAASA,c,UCbzDG,GAAY/Y,IAAZ+Y,QACO,SAASC,KACpB,IACIlT,EADE3G,EAAUC,cAsBhB,OAhBAiH,QAAQC,IAAI,MAAM0M,OAAOvM,SAASE,UAE9Bb,EAD4B,eAA7BkN,OAAOvM,SAASE,SACJ,KAEE,kBAAC,IAAD,CAAQvG,UAAU,UAC/B,kBAAC2Y,GAAD,CAAShS,MAAO,CAAEE,QAAS,WACzB,kBAAC,IAAD,CAAQzG,KAAK,UAAUJ,UAAU,cAAcb,QATtC,WACXJ,EAAQqY,UAQ0D5X,KAAM,kBAACqZ,GAAA,EAAD,OAAtE,UAIHjG,OAAOvM,SAASE,SAASuS,SAAS,+BACjCpT,EAAW,MAEiB,mBAA7BkN,OAAOvM,SAASE,WACfb,EAAU,MAGV,oCACKA,G,ICdLiT,GAAY/Y,IAAZ+Y,QAyBOI,GAvBH,WACR,IAAI1S,EAAWpH,cADD,EAEyDsG,qBAAW5C,GAFpE,EAENpC,QAFM,EAEGiD,WAFH,EAEeF,gBAFf,EAE+BzC,SAF/B,EAEyC8D,YAC5CuE,cAAN3H,GACL,OACI,kBAAC,EAAD,KACE,kBAAC,WAAD,CAAUyX,SAAU,kBAAC,EAAD,OAApB,IAEC3S,EAASE,SAASuS,SAAS,4BACxB,kBAAC,EAAD,CAAU7Y,IAAI,eACf,oCAAE,kBAAC,EAAD,MAAY,kBAAC,EAAD,OAEb,kBAAC,IAAD,CAAQD,UAAU,UAChB,kBAAC,GAAD,CAAS2G,MAAO,CAAEE,QAAS,WACvB,kBAAC,GAAD,QAGN,kBAAC+R,GAAD,SCvBMK,QACW,cAA7BrG,OAAOvM,SAAS6S,UAEe,UAA7BtG,OAAOvM,SAAS6S,UAEhBtG,OAAOvM,SAAS6S,SAASnG,MACvB,2DCNNoG,IAAS3B,OACL,kBAAC,IAAD,KACI,kBAAC,GAAD,OAEJf,SAAS2C,eAAe,SDmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnY,MAAK,SAAAoY,GACJA,EAAaC,gBAEdpD,OAAM,SAAAtV,GACLkF,QAAQlF,MAAMA,EAAMuQ,c","file":"static/js/main.f9be285e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button ,Menu, Dropdown, message } from 'antd';\r\nimport { MenuOutlined , UserOutlined } from '@ant-design/icons';\r\n// Router\r\nimport {useHistory, useLocation} from 'react-router-dom';\r\n\r\nconst MainHamber = ({keyValue,data}) => {\r\n    const history = useHistory();\r\n    let location = useLocation();\r\n    const handleMenuClick = (e) => {\r\n        if(e.key === 'add'){\r\n            history.push(`labor-review-and-posting-add-labor-record`);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Dropdown overlay= {\r\n                <Menu onClick={handleMenuClick}>\r\n                <Menu.Item key='add' icon={<UserOutlined />}>\r\n                    Add a Labor Record \r\n                </Menu.Item>\r\n              </Menu>\r\n            } >\r\n            <Button>\r\n                 <MenuOutlined />\r\n            </Button>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\nexport default MainHamber","import React from 'react'\r\nimport { Layout } from 'antd';\r\nimport MainHamber from './../MainHamber'\r\nconst { Header } = Layout;\r\n\r\nconst UiHeader = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Header>\r\n        <div className=\"logo\">\r\n          {\r\n            props.for === 'supervisor' \r\n              ? <div className=\"supervisor\"><MainHamber />  <h3 className=\"logo-white\">Logo</h3></div>\r\n              : <h3 className=\"logo-white\">Logo</h3>\r\n          }\r\n          \r\n        </div>\r\n      </Header>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default UiHeader\r\n","export default (state, {\r\n  payload, type\r\n}) => {\r\n    switch (type) {\r\n      case \"GET_WORK_CELL\":\r\n        return {\r\n          ...state,\r\n          workCellData: payload\r\n        };\r\n        case \"GET_PANEL_SHOP\":\r\n        return {\r\n          ...state,\r\n          panelShop: payload\r\n        };\r\n        case \"GET_KEY_DATA\":\r\n        return {\r\n          ...state,\r\n          keyData: [...state.keyData, payload]\r\n        };\r\n        case \"GET_KEY_DATA_EMPTY\":\r\n          return {\r\n            ...state,\r\n            keyData: []\r\n          };\r\n        case \"GET_WORK_ORDER\":\r\n        return {\r\n          ...state,\r\n          laborActivity: payload\r\n        };\r\n        case \"GET_LABOR_CONFIRM\":\r\n          return {\r\n            ...state,\r\n            laborConfirm: payload\r\n          };\r\n        case \"GET_PENDING_LABOR\":\r\n        return {\r\n          ...state,\r\n          pendingLabor: payload\r\n        };\r\n        case \"GET_PENDING_LABOR_RECORD\":\r\n          return {\r\n            ...state,\r\n            pendingLaborRecord: payload\r\n          };\r\n        case \"GET_START_TIME\":\r\n          return {\r\n            ...state,\r\n            startTime: payload\r\n          };\r\n        case \"GET_IS_ACTIVE\":\r\n        return {\r\n          ...state,\r\n          isActive: payload\r\n        };\r\n        case \"GET_BREADCURMB\":\r\n          return {\r\n            ...state,\r\n            breadcurmbList: [...state.breadcurmbList, payload]\r\n          };\r\n        case \"ERROR\":\r\n          return {\r\n            ...state,\r\n            error: payload\r\n          };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import axios from 'axios';\r\nconst endPoint = \"http://34.206.72.199:3010/api/pc\"\r\nexport const getWorkCellService = () => {\r\n    return axios.get(`${endPoint}/workCells/`).then((res) => res.data);\r\n};\r\nexport const getWorkCellIdService = (id) => {\r\n    return axios.get(`${endPoint}/workCells/${id}`).then((res) => res.data);\r\n};\r\nexport const getPanelShopService = (id) => {\r\n    return axios.get(`${endPoint}/employee/${id}`).then((res) => res.data);\r\n};\r\nexport const getWorkOrderService = (id) => {\r\n    return axios.get(`${endPoint}/checkWorkOrder/${id}`).then((res) => res.data);\r\n};\r\nexport const getLaborActivityService = (key,id) => {\r\n    return axios.get(`${endPoint}/laborActivity/${key}/${id}`).then((res) => res.data);\r\n};\r\n// export const getLaborConfirmService = ({deptKey, woNo, plantKey, wcellKey, wcenterKey, employee}) => {\r\n//     return axios.get(`${endPoint}/laborConfirm/${deptKey}/${woNo}/${plantKey}/${wcellKey}/${wcenterKey}/${employee}`).then((res) => res.data);\r\n// };\r\n// demo \r\nexport const getLaborConfirmService = ({deptKey, woNo, plantKey, wcellKey, wcenterKey, employee}) => {\r\n    return axios.get(`${endPoint}/laborConfirm/31/3443151/97/2/157/55`).then((res) => res.data);\r\n};\r\n","import axios from 'axios';\r\nimport _ from 'lodash'\r\nconst endPoint = \"http://34.206.72.199:3010/api/pc\"\r\n// Pending Labor\r\n//get\r\nexport const getPendingLaborService = () => {\r\n    return axios.get(`${endPoint}/pendingLabor`).then((res) => res.data);\r\n}\r\n//get:id\r\nexport const getProgressTimeStopService = (key) => {\r\n    return axios.get(`${endPoint}/pendingLabor/${key}`).then((res) => res.data);\r\n}\r\n//post\r\nexport const postPendingLaborService = (body) => {\r\n    return axios.post(`${endPoint}/pendingLabor`, body).then((res) => res.data);\r\n}\r\n\r\n// put\r\nexport const putPendingLaborService = (key, body) => {\r\n    return axios.put(`${endPoint}/pendingLabor/${key}`, body).then((res) => res.data);\r\n}\r\n\r\n// Delete\r\nexport const deletePendingLaborService = (key) => {\r\n    return axios.delete(`${endPoint}/pendingLabor/${key}`).then((res) => res.data);\r\n}\r\n\r\n// getLaborPostingFilter\r\nexport const getLaborPostingFilterService = (wOrder) => {\r\n    let filterData = {\r\n        wOrder:wOrder\r\n    }\r\n    return axios.get(`${endPoint}/pendingLabor/${' '}/${' '}/${filterData.wOrder}`).then((res) => {\r\n        return _.filter(res.data, function(item) { \r\n            if(item.STATUS === \"I\"){\r\n                return item\r\n            }\r\n         });\r\n    });\r\n}\r\n\r\n// listLaborAuditTrail\r\nexport const getListLaborAuditTrail = (id) => {\r\n    return axios.get(`${endPoint}/listLaborAuditTrail/${id}`).then((res) => res.data);\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport _ from 'lodash'\r\nimport AppReducer from \"./AppReducer\";\r\nimport { \r\n    getWorkCellService, \r\n    getPanelShopService, \r\n    getWorkOrderService,\r\n    getLaborActivityService,\r\n    getLaborConfirmService \r\n} from './../service/employee'\r\nimport {getPendingLaborService ,getLaborPostingFilterService} from './../service/pendingLabor'\r\nconst initialState = {\r\n  workCellData:[],\r\n  panelShop:[],\r\n  jobPosting:[],\r\n  keyData:[],\r\n  laborActivity: [],\r\n  laborConfirm: {},\r\n  pendingLabor:{},\r\n  startTime:0,\r\n  endTime:null,\r\n  isActive:false,\r\n  pendingLaborRecord:{},\r\n  laborPostingFilter:{},\r\n  error:{},\r\n  breadcurmbList:[]\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const getWorkCell = () => {\r\n    getWorkCellService().then((res)=>{\r\n        dispatch({\r\n            type: \"GET_WORK_CELL\",\r\n            payload: res\r\n        });\r\n    })\r\n  }\r\n\r\n  const getPanalShop = (key) => {\r\n    getPanelShopService(key).then((res)=>{\r\n        dispatch({\r\n            type: \"GET_PANEL_SHOP\",\r\n            payload: res\r\n        });\r\n    })\r\n  }\r\n\r\n  const getWorkOrder = (id) => {\r\n    let key = state.keyData[0].DEPARTMENT_KEY\r\n    getWorkOrderService(id).then((res)=>{\r\n        if(res[0].STATUS_MESSAGE === null){\r\n            getLaborActivityService(key,id).then((res)=>{\r\n                dispatch({\r\n                    type: \"GET_WORK_ORDER\",\r\n                    payload: res\r\n                });\r\n            })\r\n        }else{\r\n          dispatch({\r\n            type: \"ERROR\",\r\n            payload: res\r\n        });\r\n       }\r\n    })\r\n  }\r\n\r\n  const getLaborConfirm = (serviceParams) => {\r\n    getLaborConfirmService(serviceParams).then((res)=>{\r\n        dispatch({\r\n          type: \"GET_LABOR_CONFIRM\",\r\n          payload: res\r\n      });\r\n    })\r\n  }\r\n\r\n  const getProgressTimeStop = (key) => {\r\n    getProgressTimeStop(key).then((res)=>{\r\n        dispatch({\r\n          type: \"GET_PROGRESS_TIME_STOP\",\r\n          payload: res\r\n      });\r\n    })\r\n  }\r\n  \r\n  const getKeyData = (keyName, keyValue) => {\r\n    if(keyName === 'workcell'){\r\n      keyEmpty()\r\n      dispatch({\r\n        type: \"GET_KEY_DATA\",\r\n        payload: keyValue\r\n      });\r\n    };\r\n    if(keyName === 'panel_shop'){\r\n      let data = state.keyData\r\n      data.splice(1, data.length-1);\r\n      dispatch({\r\n        type: \"GET_KEY_DATA\",\r\n        payload: keyValue\r\n      });\r\n    }\r\n    if(keyName === 'post_labor'){\r\n      let data = state.keyData\r\n      data.splice(2, data.length-1);\r\n      dispatch({\r\n        type: \"GET_KEY_DATA\",\r\n        payload: keyValue\r\n      });\r\n    }\r\n    if(keyName === 'work_center'){\r\n      let data = state.keyData\r\n      data.splice(3, data.length-1);\r\n      dispatch({\r\n        type: \"GET_KEY_DATA\",\r\n        payload: keyValue\r\n      });\r\n    }\r\n  }\r\n\r\n  const keyEmpty = () =>{\r\n    dispatch({\r\n        type: \"GET_KEY_DATA_EMPTY\",\r\n        payload: []\r\n    });\r\n  }\r\n  \r\n  const getPendingLabor = () => {\r\n    getPendingLaborService().then((res)=>{\r\n      dispatch({\r\n        type: \"GET_PENDING_LABOR\",\r\n        payload: res\r\n      });\r\n    })\r\n  }\r\n\r\n  const startTimer = (count) => {\r\n    dispatch({\r\n      type: \"GET_START_TIME\",\r\n      payload: count\r\n    });\r\n  }\r\n\r\n  const isActiveFun = (value) => {\r\n    dispatch({\r\n      type: \"GET_IS_ACTIVE\",\r\n      payload: value\r\n    });\r\n  }\r\n// laborPending\r\n  const getPendingLaborRecord = (id) => {\r\n    getPendingLaborService(id).then((res)=>{\r\n      let pendingLaborKeyData = _.find(res, function(o) { \r\n        if(o.KEY == id){\r\n            return o\r\n        }\r\n      });\r\n      dispatch({\r\n        type: \"GET_PENDING_LABOR_RECORD\",\r\n        payload: pendingLaborKeyData\r\n      });\r\n    })\r\n  }\r\n// labor review posting \r\n  const getLaborPostingFilter = (wOrder) => {\r\n    getLaborPostingFilterService(wOrder).then((res)=>{\r\n      dispatch({\r\n        type: \"GET_LABOR_POSTING_FILTER\",\r\n        payload: res\r\n      });\r\n    })\r\n  }\r\n  const getBreadcurmbList = (path,name) =>{\r\n    const res = {\r\n      path:path,\r\n      name:name\r\n    }\r\n    dispatch({\r\n      type: \"GET_BREADCURMB\",\r\n      payload: res\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        workCellData: state.workCellData,\r\n        panelShop: state.panelShop,\r\n        keyData: state.keyData,\r\n        laborActivity: state.laborActivity,\r\n        laborConfirm:state.laborConfirm,\r\n        pendingLabor:state.pendingLabor,\r\n        startTime:state.startTime,\r\n        endTime:state.endTime,\r\n        isActive:state.isActive,\r\n        pendingLaborRecord:state.pendingLaborRecord,\r\n        laborPostingFilter:state.laborPostingFilter,\r\n        error:state.error,\r\n        breadcurmbList:state.breadcurmbList,\r\n        getWorkCell,\r\n        getPendingLabor,\r\n        getPanalShop,\r\n        getKeyData,\r\n        getWorkOrder,\r\n        getLaborConfirm,\r\n        keyEmpty,\r\n        startTimer,\r\n        isActiveFun,\r\n        getPendingLaborRecord,\r\n        getLaborPostingFilter,\r\n        getBreadcurmbList\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};","import React, {useContext} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Breadcrumb } from 'antd';\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\nimport _ from 'lodash'\r\nconst BreadcurmbList = (props)  =>{\r\n    const { href,name } = props;\r\n    const { breadcurmbList } = useContext(GlobalContext);\r\n    var breadcurmb = _.uniqBy(breadcurmbList, function (e) {\r\n        return e.name;\r\n    });\r\n    let tempalate = <p></p>\r\n    const onClickBreadcrumb =(item) =>{\r\n        let indexVal = breadcurmb.findIndex(itemValue=>{\r\n            if(itemValue.name === item.name){\r\n                return itemValue\r\n            }\r\n        })\r\n        breadcurmb.splice(indexVal,breadcurmb.length)\r\n        console.log(breadcurmb)\r\n        tempalate = (\r\n            <Breadcrumb>\r\n                {breadcurmb.length > 0 ? breadcurmb.map((item,index) => (\r\n                    <Breadcrumb.Item onClick={(e) => onClickBreadcrumb(item)} >\r\n                        <Link key={index} to={item.path}>\r\n                            {item.name}\r\n                        </Link>\r\n                    </Breadcrumb.Item>\r\n                )):<p></p>}  \r\n            </Breadcrumb>\r\n        )\r\n    }\r\n    if(breadcurmb.length > 0){\r\n        tempalate = (\r\n            <Breadcrumb>\r\n                { breadcurmb.map((item,index) => (\r\n                    <Breadcrumb.Item onClick={(e) => onClickBreadcrumb(item)} >\r\n                        <Link key={index} to={item.path}>\r\n                            {item.name}\r\n                        </Link>\r\n                    </Breadcrumb.Item>\r\n                ))}\r\n            </Breadcrumb>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n        {tempalate}\r\n        </>\r\n    )\r\n}\r\nexport default BreadcurmbList","import React, {useContext} from 'react'\r\nimport BreadcurmbList from './../BreadcurmbList';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport {  useLocation } from 'react-router-dom';\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\nimport './topNavBar.scss'\r\nfunction TopNavBar(props) {\r\n  const { keyData } = useContext(GlobalContext);\r\n  let location = useLocation();\r\n  let track = keyData.length > 0 ? `/panel-shop/${keyData[0].DEPARTMENT_KEY}` :'/'\r\n  let tempalate\r\n    if(location.pathname === '/labor-tracker'){\r\n      return tempalate = (\r\n        <div className=\"main-flex\">\r\n          <div>\r\n              <BreadcurmbList />\r\n          </div>\r\n        </div>\r\n      )\r\n    }else{\r\n      if(location.pathname === '/progress-timers'){\r\n        return tempalate = (\r\n          <div className=\"main-flex\">\r\n            <div>\r\n                <BreadcurmbList />\r\n            </div>\r\n            <div>\r\n                <Link to={track}>Track Another Job in this Work Cell</Link>\r\n            </div>\r\n          </div>\r\n        )\r\n      }else{\r\n        tempalate = (\r\n          <div className=\"main-flex\">\r\n            <div>\r\n                <BreadcurmbList />\r\n            </div>\r\n            <div>\r\n            <Link to=\"/progress-timers\">See All In Progress</Link> \r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n          {tempalate}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopNavBar;","import React from 'react'\r\nimport { Spin } from 'antd';\r\nimport './spinner.scss'\r\nconst Spinner = () => {\r\n    return (\r\n        <section className=\"spinner\">\r\n            <Spin size=\"large\" />\r\n        </section>\r\n    )\r\n}\r\nexport default Spinner","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","import React from 'react'\r\nimport { Card, Col } from 'antd';\r\nimport './ui-card.scss'\r\nconst style = { background: '#bfbfbf', padding: '8px 0' };\r\nfunction UiCard(props) {\r\n  const { text, onClickHandler, name} = props\r\n  return (\r\n    <React.Fragment>\r\n      <Col className=\"gutter-row\" span={6}>\r\n        <Card\r\n          hoverable\r\n          style={style}\r\n          className=\"card-body\" \r\n          onClick={onClickHandler}\r\n        >\r\n          <p  >{text}   </p>\r\n          <p>{name}</p>\r\n        </Card>\r\n      </Col>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default UiCard\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './page-header.scss'\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\nexport default function UiPageHeader(props) {\r\n    const {content, track, color} = props\r\n    return (\r\n      <div className=\"page-header-flex\">\r\n        <div className=\"main-title\">\r\n          <h3 style={{color:color}}>{content}</h3>\r\n        </div>\r\n        {track \r\n          ?<div className=\"plus-icons\">\r\n             <span><PlusCircleOutlined /></span> <Link to=\"/\">Link Another Job in this Work Cell</Link>\r\n            </div> \r\n          : null\r\n        }\r\n        \r\n      </div>\r\n    )\r\n}\r\n","const CONSTANTS = {\r\n    WORKCELL: 'Clock in to a Work Cell',\r\n    JOBPOSTING: 'Which Job Are You Posting Labor To',\r\n    LABORCONFIRM:'Post Labor To',\r\n    WORKORDER:'Work Order',\r\n    CUSTOMER:'Customer',\r\n    PLANT:'Plant',\r\n    DEPARTMENT:'Department',\r\n    WORKCELLS:'Work Cell',\r\n    EMPLOYEE:'Employee',\r\n    LOBARACTIVITY: 'Labor Activity',\r\n    WORKCELL_PROGRESS_TIMERS: 'Work Cell Panal Shop In Progress Timers ',\r\n    PANALSHOP:'Which Employee is Posting Labor in Panel Shop Wiring',\r\n    LABOR_ACTIVITY:'Which labor Activity is Being Performed',\r\n    PROGRESS_TIME:'In Progress Timer',\r\n    REVIEW_TIMER:'Review Timer',\r\n    LABOR_RATE:[\r\n      \"Standard Rate\",\r\n      \"Standard Rate 2\",\r\n      \"Standard Rate 3\",\r\n      \"Standard Rate 4\"\r\n    ]\r\n  };\r\n  \r\n  export default CONSTANTS;","import React, { useState, useEffect, useContext } from 'react';\r\n//components\r\nimport UiCard from './../../views/UiCard'\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport Spinner from './../../views/Spinner'\r\n//Constants\r\nimport Constants from './../../constants'\r\n// Router\r\nimport {useHistory} from 'react-router-dom';\r\n//antd\r\nimport { Row } from 'antd';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n\r\nconst WorkCell = () => {\r\n  const [page, setPage] = useState(1);\r\n  const { getWorkCell, workCellData , getKeyData, getPanalShop, getBreadcurmbList} = useContext(GlobalContext);\r\n  const history = useHistory();\r\n    useEffect(() => {\r\n      getWorkCell()\r\n    }, [page]);\r\n\r\n  const panelShopClick = (key, name) => {\r\n    let data = workCellData\r\n    let keyValue;\r\n    data.map(item=>{\r\n        if(item.DEPARTMENT_KEY === key){\r\n            keyValue =  item\r\n        }\r\n    })\r\n    getPanalShop(key)\r\n    getKeyData('workcell', keyValue)\r\n    getBreadcurmbList('/workcell',name)\r\n    history.push(`/panel-shop/${key}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UiPageHeader content={Constants.WORKCELL} />\r\n      <Row gutter={16}>\r\n        {workCellData.length >= 1 ? workCellData.map((item, index)=>{\r\n          return <UiCard key={item.KEY } text={item.DEPARTMENT_NAME} name={item.WORK_CELL_NAME} onClickHandler={() => panelShopClick(item.DEPARTMENT_KEY, item.WORK_CELL_NAME)}/>\r\n        }) : <Spinner />}\r\n      </Row>\r\n    </>\r\n  ); \r\n}\r\n\r\nexport default WorkCell;","import React, {useState,useEffect, useContext} from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n//components\r\nimport UiCard from './../../views/UiCard'\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\n//Constants\r\nimport Constants from './../../constants'\r\n// Antd\r\nimport { Row } from 'antd';\r\nimport {useHistory} from 'react-router-dom';\r\n// context\r\nimport { GlobalContext } from \"./../../context//GlobalState\";\r\n\r\nconst PanelShop = () => {\r\n    const { panelShop , getBreadcurmbList, getKeyData ,keyData} = useContext(GlobalContext);\r\n    let { id } = useParams();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n      if(keyData.length  === 0){\r\n        history.push(`/work-cell`)\r\n      }\r\n    }, [1]);\r\n\r\n    function jobPosting (key, name) {\r\n      let data = panelShop\r\n      let keyValue;\r\n      data.map(item=>{\r\n          if(item.EMPLOYEE === key){\r\n              keyValue =  item\r\n          }\r\n      })\r\n      getKeyData('panel_shop',keyValue)\r\n      getBreadcurmbList(`/panel-shop/${id}`,name)\r\n      history.push(`/job-posting-employee/${key}`);\r\n    };\r\n  \r\n    return (\r\n        <>\r\n        <UiPageHeader content={Constants.PANALSHOP} />\r\n          <Row gutter={16}>\r\n            {panelShop.length >= 1 ? panelShop.map((item, index)=>{\r\n              return <UiCard key={index } text={`#${item.EMPLOYEE}`} name={item.NAME} onClickHandler={() => jobPosting(item.EMPLOYEE, item.NAME)}/>\r\n            }):  null}\r\n          </Row>\r\n        </>\r\n    )\r\n}\r\nexport default PanelShop","import React, {useState,useEffect, useContext} from 'react'\r\nimport { useParams, useHistory} from \"react-router-dom\";\r\n//components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\nimport './job-posting.scss'\r\nimport { Input, Button  } from 'antd';\r\n\r\nconst JobPosting = (props) => {\r\n    let { id } = useParams();\r\n    const [page, setPage] = useState(1);\r\n    const [jobNumber, setJobNumber] = useState();\r\n    const { keyData, getWorkOrder, getKeyData, getBreadcurmbList} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(keyData.length  === 0){\r\n            history.push(`/work-cell`)\r\n          }\r\n      }, [page]);\r\n\r\n    function onChangeHandler(event) {\r\n        setJobNumber(event.target.value)\r\n    }\r\n\r\n    const onSubmitHandler = () => {\r\n        let workOrderPosting = {\r\n            workOrderPosting:jobNumber\r\n        }\r\n        getWorkOrder(jobNumber)\r\n        getKeyData('post_labor', workOrderPosting)\r\n        getBreadcurmbList(`/job-posting-employee/${id}`,`WO ${jobNumber}`)\r\n        history.push(`/labor-activity/${jobNumber}`);\r\n    }\r\n    return (\r\n        <>\r\n            <UiPageHeader content={Constants.JOBPOSTING} />\r\n            <div className=\"job-posting\">\r\n                <div>\r\n                    WO #\r\n                </div>\r\n                <div>\r\n                    <Input onChange={onChangeHandler} />\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" onClick={onSubmitHandler}>Enter</Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default JobPosting","\r\nimport React, {useContext, useEffect} from 'react'\r\n//components\r\nimport UiCard from './../../views/UiCard'\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\n// Antd\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport { Row } from 'antd';\r\n\r\n\r\n const LaborActivity = (props) => {\r\n    const { keyData, laborActivity,getBreadcurmbList, getKeyData, getLaborConfirm} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n      if(keyData.length  === 0){\r\n          history.push(`/work-cell`)\r\n        }\r\n    }, [1]);\r\n\r\n    const laborActivityClick = (code, name) => {\r\n      let data = laborActivity\r\n      let keyValue;\r\n      data.map(item=>{\r\n          if(item.CODE === code){\r\n              keyValue =  item\r\n          }\r\n      })\r\n      let serviceParams = {\r\n        deptKey : keyData[0].DEPARTMENT_KEY,\r\n        woNo:keyData[2].workOrderPosting,\r\n        plantKey:keyData[0].PLANT_KEY,\r\n        wcellKey:keyData[0].KEY,\r\n        wcenterKey:keyValue.KEY,\r\n        employee:keyValue.CODE\r\n      }\r\n      getLaborConfirm(serviceParams);\r\n      getKeyData('work_center', keyValue)\r\n      getBreadcurmbList(`/labor-activity/${id}`,`${code} ${name}`)  \r\n      history.push(`/labor-confirm`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <UiPageHeader content={Constants.LABOR_ACTIVITY} />\r\n          <Row gutter={16}>\r\n            {laborActivity.length > 0 ? laborActivity.map((item, index)=>{\r\n              return <UiCard \r\n                        key={index }  \r\n                        text={`#${item.CODE}`} \r\n                        name={item.DESCRIPTION} \r\n                        onClickHandler={() => laborActivityClick(item.CODE, item.DESCRIPTION)}\r\n                      />\r\n            }): 'No Data'}\r\n          </Row>\r\n        </>\r\n    )\r\n}\r\nexport default LaborActivity","\r\nimport React from 'react'\r\nfunction UiGrid({title,number,desc, children}) {\r\n    return (\r\n    <React.Fragment>\r\n        <div className=\"ui-grid\">\r\n            <p>{title}</p>\r\n            <p>{number || children}</p>\r\n            <p>{desc}</p>\r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nexport default UiGrid\r\n            ","\r\nimport React, {useContext,useState,useEffect} from 'react'\r\n//components\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiPageHeader from './../../views/UiPageHeader';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\nimport _ from 'lodash'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Button,Row, Col } from 'antd';\r\n//SCSS\r\nimport './labor-confirm.scss'\r\n// service\r\nimport { postPendingLaborService } from './../../service/pendingLabor'\r\n\r\n const LaborActivity = (props) => {\r\n    const { keyData , getPendingLabor,startTime,laborActivity,startTimer, laborConfirm} = useContext(GlobalContext);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(keyData.length  === 0){\r\n            history.push(`/work-cell`)\r\n          }\r\n        let interval = null;\r\n        if (isActive) {\r\n          interval = setInterval(() => {\r\n            setSeconds(seconds => seconds + 1);\r\n            startTimer(seconds)\r\n          }, 1000);\r\n        } else if (!isActive && seconds !== 0) {\r\n          clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n      }, [isActive, seconds]);\r\n     \r\n    const startHandler = () => {\r\n        // Date and Time Conveter script\r\n        setIsActive(!isActive)\r\n        let tempDate = new Date()\r\n        let months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \r\n        \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n        let tempMonth = months[tempDate.getMonth()]\r\n        let finalDate = [tempDate.getDate(), tempMonth, tempDate.getFullYear()].join('-')\r\n        let tempTime = new Date().toLocaleString('en-GB');\r\n        let splitTime = tempTime.split(',')\r\n        let time = splitTime[1]\r\n        let finaleDateTime = [finalDate,time].join(' ')\r\n        let serviceParams = {\r\n            PLANT_KEY: keyData[0].PLANT_KEY,\r\n            DEPARTMENT_KEY: keyData[0].DEPARTMENT_KEY,\r\n            EMPLOYEE_KEY: keyData[1].EMPLOYEE,\r\n            WORK_CENTER_KEY: keyData[3].KEY,\r\n            WORK_CELL_KEY: keyData[0].KEY,\r\n            LABOR_CLASS: null,\r\n            WORK_ORDER_NUMBER: parseInt(keyData[2].workOrderPosting),\r\n            START_TIME: finaleDateTime,\r\n            STOP_TIME: null,\r\n            LABOR_TIME: null,\r\n            LABOR_RATE_TYPE: null,\r\n            STATUS: \"I\"\r\n        }\r\n        postPendingLaborService(serviceParams).then(res=>{\r\n            history.push('/progress-timers')\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n        {laborConfirm.length > 0 ? \r\n            <>  \r\n                <UiPageHeader content={Constants.LABORCONFIRM} />\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col className=\"gutter-row\" span={24}>\r\n                    <div>\r\n                        <UiGrid title={Constants.WORKORDER} number={laborConfirm[0].WO_NUMBER} desc={laborConfirm[0].WO_DESC} />\r\n                        <UiGrid title={Constants.CUSTOMER} number={laborConfirm[0].CUSTOMER} desc={laborConfirm[0].CUSTOMER_NAME}/>\r\n                        <UiGrid title={Constants.PLANT} number={laborConfirm[0].PLANT} desc={laborConfirm[0].PLANT_NAME} />\r\n                        <UiGrid title={Constants.DEPARTMENT} number='' desc=\"\" />\r\n                        <UiGrid title={Constants.WORKCELLS} number='' desc={laborConfirm[0].NAME} />\r\n                        <UiGrid title={Constants.EMPLOYEE} number={laborConfirm[0].EMPLOYEE} desc={laborConfirm[0].EMP_NAME} />\r\n                        <UiGrid title={Constants.LOBARACTIVITY}  number={laborConfirm[0].CODE} desc={laborConfirm[0].DESCRIPTION} />\r\n                    </div>\r\n                    </Col>\r\n                    \r\n                    <Col className=\"gutter-row\" offset={8} span={8}>\r\n                        <div ><Button type=\"primary\" className=\"start-button green\" onClick={startHandler} >Start Tracking</Button> </div>\r\n                    </Col>\r\n                </Row>\r\n            </> : null }\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default LaborActivity","\r\nimport React, {useState,useEffect,useContext} from 'react'\r\nimport moment from 'moment'\r\nimport './ui-timer-buuton.scss'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n\r\nfunction UiTimerButton(props) {\r\n    const { timerHandler,name,time,hours, color, border,txtColor, width, height} = props;\r\n    const [start, setStart] = useState(0);\r\n    const [isActive, setIsActive] = useState(true);\r\n    const [startTimer , setStartTimer] = useState(time)\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (isActive) {\r\n        interval = setInterval(() => {\r\n            setStart(start => start + 1);\r\n            if(startTimer !== 'null'){\r\n                var timer = time !== undefined ? time.split(' '):\"0 0\"\r\n                var endTime = moment().format('MM-DD-YYYY h:mm:ss')\r\n                var finalTimeSub = moment(moment(endTime).diff(moment(timer[1],\"hh:mm:ss\"))).format(\"hh:mm:ss\")\r\n                setStart(start => start + 1);\r\n                setStartTimer(finalTimeSub)\r\n            }\r\n        }, 1000);\r\n        } else if (!isActive && start !== 0) {\r\n        clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isActive,start]);\r\n\r\n    return (\r\n    <React.Fragment>\r\n       <div className=\"ui-timer-button\" \r\n            style={{background:color, border:`1px solid ${border}`,color:txtColor,width:width,height:height}} \r\n            onClick={timerHandler}>\r\n            <p>{name}</p>\r\n            <p>{startTimer !== 'null' ? startTimer : 'and' }</p>\r\n            <p>{hours}</p>\r\n       </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nexport default UiTimerButton\r\n            ","\r\nimport React from 'react'\r\nimport UiTimerButton from './../UiTimerButton'\r\n//antd\r\nimport { Row,Col } from 'antd';\r\nimport './ui-grid-progress.scss'\r\nfunction UiGridProgress(props) {\r\n    const { employe,wOrder,activity,start_time,start_time_count, employeName,wcName,woDes, timerHandler} = props;\r\n    const style = {  padding: '8px 0' };\r\n    const styles = {\r\n        bold:{\r\n            fontWeight:'bold'\r\n        },\r\n        colorGreen:{\r\n            color:'green',\r\n            padding: '8px 0',\r\n            fontWeight: '500'\r\n        }\r\n    }\r\n    return (\r\n    <React.Fragment>\r\n         <div className=\"ui-grid-progress\" >\r\n            <hr></hr>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col className=\"gutter-row\" span={3}>\r\n                    <div style={style} >\r\n                        <p>Employee</p>\r\n                        <p>Work Order</p>\r\n                        <p>Labor Activity</p>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={3}>\r\n                    <div style={styles.bold} className=\"ui-grid-progress__grid\">\r\n                        <p>{employe}</p>\r\n                        <p>{wOrder}</p>\r\n                        <p>{activity}</p>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={8}>\r\n                    <div style={style} className=\"ui-grid-progress__grid\">\r\n                        <p style={styles.bold}>{employeName}</p>\r\n                        <p>{woDes} </p>\r\n                        <p style={styles.bold}>{wcName} </p>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={4}>\r\n                    <div className=\"ui-grid-progress__grid\">\r\n                        <p style={styles.colorGreen}>Start Time</p>\r\n                        <p style={styles.bold}>{start_time}</p>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"gutter-row end\" span={6}>\r\n                    <div style={style} className=\"ui-grid-progress__grid\">\r\n                        <UiTimerButton name=\"Elasped\" time={start_time_count} hours='HoursMinutes' color=\"green\" timerHandler={timerHandler}/>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nexport default UiGridProgress\r\n            ","import React, { useState, useEffect, useContext } from 'react';\r\n//components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport UiTimerButton from './../../views/UiTimerButton'\r\nimport UiGridProgress from './../../views/UiGridProgress'\r\nimport Spinner from './../../views/Spinner'\r\n// Router\r\nimport {useHistory} from 'react-router-dom';\r\n//Constants\r\nimport Constants from './../../constants'\r\n//antd\r\nimport { Row,Col } from 'antd';\r\n// context\r\nimport { GlobalContext } from \"./../../context//GlobalState\";\r\nimport _ from 'lodash';\r\nimport moment from 'moment'\r\n\r\nconst ProgressTimers = () => {\r\n  const { getPendingLabor , pendingLabor, startTime} = useContext(GlobalContext);\r\n  const [page, setPage] = useState(1);\r\n  const history = useHistory();\r\n    useEffect(() => {\r\n      getPendingLabor()\r\n    }, [page]);\r\n    const timerHandler = (key) =>{\r\n      history.push(`/progress-time-stop/${key}`)\r\n    }\r\n    const progressDataFilter = pendingLabor.length > 0 ? _.orderBy(pendingLabor, ['KEY'], ['desc']) : null\r\n    let tempalte\r\n    if(progressDataFilter){\r\n      let data =  _.filter(progressDataFilter, function(item) { return item.STOP_TIME === null });\r\n      tempalte = (\r\n        data.map((item, index)=>{\r\n          let itemStartTime = _.split(item.START_TIME, ' ');\r\n          let time = itemStartTime[1]\r\n          return  <UiGridProgress \r\n                key={index}\r\n                employe={item.EMPLOYEE_KEY} \r\n                wOrder={item.WORK_ORDER_NUMBER} \r\n                activity=\"22\" \r\n                start_time={time}\r\n                start_time_count={item.START_TIME}\r\n                employeName={item.EMPLOYEE_NAME}\r\n                wcName={item.WORK_CELL_NAME}\r\n                woDes={item.WO_DESCRIPTION}\r\n                timerHandler={() => timerHandler(item.KEY)} \r\n            />\r\n        })\r\n      )\r\n    }else{\r\n      return <Spinner />\r\n    }\r\n  return (\r\n    <>\r\n      <UiPageHeader content={Constants.WORKCELL_PROGRESS_TIMERS} />\r\n      {tempalte }\r\n    </>\r\n  ); \r\n}\r\n\r\nexport default ProgressTimers;","// lodash\r\nimport _ from 'lodash'\r\nexport const convertMonthToNumber = (month) =>{\r\n    let daySplit = month !== undefined ? month.split(\"-\"):''\r\n    let months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \r\n      \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n    let number = _.findIndex(months, function(o) { return o == daySplit[1] });\r\n    if(number < 10){\r\n      return `${daySplit[0]}-0${number}-${daySplit[2]}`\r\n    }else{\r\n      return `${daySplit[0]}-${number}-${daySplit[2]}`\r\n    }\r\n}\r\nexport const convertDateTime = (date, time) =>{\r\n    let months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \r\n    \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n    let dateSplit = date !== undefined ? date.split('-'):''\r\n    let monthName = months[parseInt(dateSplit[1], 10)]\r\n    let finalNameDate =  `${dateSplit[0]}-${monthName}-${dateSplit[1]}`\r\n    return [finalNameDate,time].join(' ')\r\n  }","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Radio,\r\n    Select,\r\n    Input,\r\n    Col,\r\n    DatePicker,\r\n    TimePicker,\r\n    Row,\r\n    Button,\r\n    message\r\n  } from 'antd';\r\n\r\nimport moment from 'moment';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\nimport {useHistory} from 'react-router-dom';\r\n  //components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport UiGrid from './../../views/UiGrid'\r\n//Constants\r\nimport Constants from './../../constants'\r\n// lodash\r\nimport _ from 'lodash'\r\n//scss \r\nimport './review-timer.scss'\r\n  // service\r\nimport { getProgressTimeStopService, putPendingLaborService } from './../../service/pendingLabor'\r\nimport { getPanelShopService,getWorkOrderService, getLaborActivityService } from './../../service/employee';\r\nimport { convertMonthToNumber, convertDateTime } from './../../utile/helpers' \r\n\r\nconst { Option } = Select;\r\nconst format = 'HH:mm';\r\nconst { TextArea } = Input;\r\nconst dateFormat = 'DD-MM-YYYY';\r\n\r\nconst ReviewTimer = () => {\r\n  const history = useHistory();\r\n  const {pendingLaborRecord, workCellData, getWorkCell } = useContext(GlobalContext);\r\n  const [page, setPage] = useState([]);\r\n  const [note, setNote] = useState('');\r\n  const [workOrderNumber, setWorkOrderNumber] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [stopTime, setStopTime] = useState('');\r\n  const [stopDate, setStopDate] = useState('');\r\n  const [workCell, setWorkCell] = useState('');\r\n  const [employe, setEmploye] = useState('');\r\n  const [workCenterName, setWorkCenterName] = useState('');\r\n  const [laborRate, setRaborRate] = useState(Constants.LABOR_RATE[0]);\r\n  const [employeeUpdate, setEmployeeUpdate] = useState([]);\r\n  const [workCellUpdate, setWorkCellUpdate] = useState(null)\r\n\r\n    useEffect(() => {\r\n       getWorkCell()\r\n       getProgressTimeStopService(pendingLaborRecord.KEY).then(res=>{\r\n        setPage(res[0])\r\n        let start = res[0].START_TIME.split(\" \");\r\n        let stop = res[0].STOP_TIME.split(\" \")\r\n        console.log(convertMonthToNumber(start[0]))\r\n        setStartTime(start[1])\r\n        setStartDate(convertMonthToNumber(start[0]))\r\n        setStopTime(stop[1])\r\n        setStopDate(convertMonthToNumber(stop[0]))\r\n        setWorkCell(res[0].WORK_CELL_NAME)\r\n        setEmploye(res[0].EMPLOYEE_NAME)\r\n        setWorkOrderNumber(res[0].WORK_ORDER_NUMBER);\r\n        setWorkCenterName(res[0].WORKCENTER_NAME)\r\n      });\r\n       getPanelShopService(pendingLaborRecord.DEPARTMENT_KEY).then(res=>{\r\n        setEmployeeUpdate(res)\r\n      })\r\n    }, [1]);\r\n\r\n    const onChange = (e) => {\r\n      setNote(e.target.value);\r\n  }\r\n    const onChangeWorkCell = (e) => {\r\n      workCellData.map(item =>{\r\n        if(item.WORK_CELL_NAME === e){\r\n          setWorkCell(e)\r\n          setWorkCellUpdate(item)\r\n          getPanelShopService(item.DEPARTMENT_KEY).then(res=>{\r\n            setEmployeeUpdate(res)\r\n            setEmploye(res[0].NAME)\r\n          })\r\n        }\r\n      })\r\n    }\r\n    const onChangeEmployee = (e) =>{\r\n      let update = workCellData.map(item=>{\r\n        if(e === item.WORK_CELL_NAME){\r\n          return item\r\n        }\r\n      })    \r\n      setEmploye(e)\r\n    }\r\n    const completeStartNew = () =>{\r\n      history.push('/')\r\n    }\r\n    const onChangeStartTime = (time, timeString) =>{\r\n        setStartTime(timeString);\r\n    }\r\n    const onChangeStopTime = (time, timeString) =>{\r\n        setStopTime(timeString);\r\n    }\r\n    const onChangeStartDate = (date, dateString) =>{\r\n        setStartDate(dateString);\r\n    }\r\n    const onChangeStopDate = (date, dateString) =>{\r\n        setStopDate(dateString);\r\n    }\r\n    const onChangeRate = (value) =>{\r\n        setRaborRate(value)\r\n    }\r\n    const onChangeWorkOrder =(e) =>{\r\n      setWorkOrderNumber(e.target.value)\r\n    }\r\n    const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      let start_time = convertDateTime(startDate,startTime)\r\n      let stop_time = convertDateTime(stopDate,stopTime)\r\n      let serviceParams = {\r\n          PLANT_KEY: workCellUpdate === null ? page.PLANT_KEY : workCellUpdate.PLANT_KEY,\r\n          DEPARTMENT_KEY: workCellUpdate === null ? page.DEPARTMENT_KEY : workCellUpdate.DEPARTMENT_KEY,\r\n          EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n          WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n          WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n          LABOR_CLASS: null,\r\n          WORK_ORDER_NUMBER: workOrderNumber,\r\n          START_TIME: start_time,\r\n          STOP_TIME: stop_time,\r\n          LABOR_TIME: null,\r\n          LABOR_RATE_TYPE: null,\r\n          STATUS: \"C\"\r\n      }\r\n      let serviceParams1 = {\r\n        PLANT_KEY: pendingLaborRecord.PLANT_KEY,\r\n        DEPARTMENT_KEY: pendingLaborRecord.DEPARTMENT_KEY,\r\n        EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n        WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n        WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n        LABOR_CLASS: null,\r\n        WORK_ORDER_NUMBER: pendingLaborRecord.WORK_ORDER_NUMBER,\r\n        START_TIME: pendingLaborRecord.START_TIME,\r\n        STOP_TIME: pendingLaborRecord.STOP_TIME,\r\n        LABOR_TIME: null,\r\n        LABOR_RATE_TYPE: null,\r\n        STATUS: \"C\"\r\n    }\r\n      putPendingLaborService(pendingLaborRecord.KEY, serviceParams).then((res)=>{\r\n        message.success({ content: 'Successfully Recorded ' });\r\n        history.push(`/labor-record-complete/${pendingLaborRecord.KEY}`)\r\n      })\r\n    }\r\n\r\n    const contentHtml = <>\r\n      {workCellData.length > 0 ? workCellData.map((item, index)=><Option key={index} value={item.WORK_CELL_NAME} >{item.WORK_CELL_NAME}</Option>) : null}\r\n    </>;\r\n    const contentHtmlForEmployee = <>\r\n      {employeeUpdate.length > 0 ? employeeUpdate.map((item, index)=><Option key={index} value={item.NAME} >{item.NAME}</Option>) : null}\r\n    </>;\r\n    // const contentHtmlForWorkCenter = <>\r\n    //   {apiFetchData.laborActivityUpdate.length > 0 ? apiFetchData.laborActivityUpdate.map((item, index)=><Option key={index} value={item.CUSTOMER_NAME} >{item.CUSTOMER_NAME}</Option>) : null}\r\n    // </>;\r\n    const contentHtmlForRate = <>\r\n        {Constants.LABOR_RATE.map((item, index)=><Option key={index} value={item} >{item}</Option>)}\r\n    </>;\r\n    \r\n    return (\r\n      <>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n      <form  onSubmit={onSubmit} className=\"labor-record-form\">\r\n        <Col className=\"gutter-row\" span={12}>\r\n          <div>\r\n            <UiPageHeader content={Constants.REVIEW_TIMER} color=\"green\"/>\r\n            <UiGrid title=\"Work Order\">\r\n              <Input placeholder=\"\" name=\"workOrder\" value={workOrderNumber} onChange={onChangeWorkOrder} />\r\n            </UiGrid>\r\n            <UiGrid title=\"Customar \" number={page.CUST_NAME} />\r\n            <UiGrid title=\"Plant \" number={workCellUpdate === null ? page.PLANT_KEY : workCellUpdate.PLANT_KEY}  />\r\n            <UiGrid title=\"Departement \" \r\n              number={workCellUpdate === null ? page.DEPARTMENT_KEY : workCellUpdate.DEPARTMENT_KEY} \r\n              desc={workCellUpdate === null ? page.DEPARTMENT_NAME : workCellUpdate.DEPARTMENT_NAME} \r\n            />\r\n            <UiGrid title=\"Work Cell\" >\r\n              <Input.Group compact>\r\n                <Select value={workCell} onChange={onChangeWorkCell}>\r\n                  {contentHtml}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Employee\" >\r\n              <Input.Group compact>\r\n                <Select value={employe} onChange={onChangeEmployee}>\r\n                  {contentHtmlForEmployee}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Activity\" >\r\n              <Input.Group compact>\r\n                <Select value={workCenterName} >\r\n                  <Option >{workCenterName}</Option>\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Performed\" >\r\n              <Input.Group compact>\r\n                <Select defaultValue={page.INVENTORY_NAME} value={page.INVENTORY_NAME} onChange={onChangeRate} name=\"laborPerformed\">\r\n                  <Option >{page.INVENTORY_NAME}</Option>\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Start Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact >\r\n                    <DatePicker onChange={onChangeStartDate} value={moment(startDate, 'DD-MM-YY')} format={dateFormat}/>\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss\" onChange={onChangeStartTime} value={moment(startTime, format)} />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Stop Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact>\r\n                    <DatePicker onChange={onChangeStopDate} value={moment(stopDate, dateFormat)} format={dateFormat} />\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss\" onChange={onChangeStopTime} value={moment(stopTime, format)} />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Hours\" number={pendingLaborRecord.LABOR_TIME} />\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={12}>\r\n            <div>\r\n              <p>Note *</p>\r\n              <TextArea rows={4} name='note' value={note} onChange={onChange} placeholder=\"Note\"/>\r\n            </div>\r\n            <div className=\"check-time-button\">\r\n              <input type=\"submit\" className=\"time-button yellow\" value=\"Complete Tracking\" />\r\n              <Button type=\"primary\" className=\"time-button\" onClick={completeStartNew} >Complete Tracking And Start New Job</Button>  \r\n            </div>\r\n        </Col>\r\n      </form>\r\n    </Row> \r\n      </>\r\n    )\r\n}\r\nexport default ReviewTimer","\r\nimport React, {useContext,useState, useEffect} from 'react'\r\n//components\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiPageHeader from './../../views/UiPageHeader';\r\nimport UiTimerButton from './../../views/UiTimerButton'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\nimport _ from 'lodash'\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { Button,Row, Col } from 'antd';\r\n\r\n// service\r\nimport { putPendingLaborService } from './../../service/pendingLabor'\r\n\r\n const ProgressTimeStop = (props) => {\r\n    const { pendingLaborRecord, getPendingLaborRecord } = useContext(GlobalContext);\r\n    let { id } = useParams();\r\n    const [page, setPage] = useState(1);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getPendingLaborRecord(id)\r\n      }, [page]);\r\n\r\n \r\n    const stopTimer = () =>{\r\n        let tempDate = new Date()\r\n        let months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \r\n        \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n        let tempMonth = months[tempDate.getMonth()]\r\n        let finalDate = [tempDate.getDate(), tempMonth, tempDate.getFullYear()].join('-')\r\n        let tempTime = new Date().toLocaleString('en-GB');\r\n        let splitTime = tempTime.split(',')\r\n        let time = splitTime[1]\r\n        let stopTime = [finalDate, time].join(' ')\r\n        let serviceParams = {\r\n            PLANT_KEY: pendingLaborRecord.PLANT_KEY,\r\n            DEPARTMENT_KEY: pendingLaborRecord.DEPARTMENT_KEY,\r\n            EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n            WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n            WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n            LABOR_CLASS: null,\r\n            WORK_ORDER_NUMBER: pendingLaborRecord.WORK_ORDER_NUMBER,\r\n            START_TIME: pendingLaborRecord.START_TIME,\r\n            STOP_TIME: stopTime,\r\n            LABOR_TIME: null,\r\n            LABOR_RATE_TYPE: null,\r\n            STATUS: \"I\"\r\n        }\r\n        putPendingLaborService(id, serviceParams).then((res)=>{\r\n            if(res){\r\n                history.push('/review-timer')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { pendingLaborRecord !== undefined ?\r\n                <> \r\n                    <UiPageHeader content={Constants.PROGRESS_TIME} />\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col className=\"gutter-row\" span={24}>\r\n                        <div>\r\n                            {console.log(pendingLaborRecord.START_TIME)}\r\n                            <UiGrid title={Constants.WORKORDER} number={pendingLaborRecord.WORK_ORDER_NUMBER} desc={pendingLaborRecord.WO_DESCRIPTION} />\r\n                            <UiGrid title={Constants.CUSTOMER} number={pendingLaborRecord.CUST_NAME} />\r\n                            <UiGrid title={Constants.PLANT} number={pendingLaborRecord.INVENTORY_NUMBER} desc={pendingLaborRecord.INVENTORY_NAME} />\r\n                            <UiGrid title={Constants.DEPARTMENT} number={pendingLaborRecord.DEPT_CODE} desc={pendingLaborRecord.DEPT_NAME} />\r\n                            <UiGrid title={Constants.WORKCELLS} number={pendingLaborRecord.WORK_CELL_KEY} desc={pendingLaborRecord.WORK_CELL_NAME} />\r\n                            <UiGrid title={Constants.EMPLOYEE} number={pendingLaborRecord.EMPLOYEE_KEY} desc={pendingLaborRecord.EMPLOYEE_NAME} />\r\n                            <UiGrid title={Constants.LOBARACTIVITY}  number={pendingLaborRecord.WORKCENTER_NAME} />\r\n                        </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" offset={8} span={5}>\r\n                            <div>\r\n                            <UiTimerButton name=\"Elasped\" time={pendingLaborRecord.START_TIME} hours='HoursMinutes' color=\"green\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={5}>\r\n                            <div>\r\n                                <UiTimerButton name=\"Stop Timer\" time='null' hours='Review Labor' color=\"red\" timerHandler={stopTimer}/>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                 </> \r\n                : null}\r\n           \r\n        </>\r\n    )\r\n}\r\nexport default ProgressTimeStop","\r\nimport React, {useState,useEffect,useContext} from 'react'\r\nimport moment from 'moment'\r\nimport './ui-button-complete.scss'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n\r\nfunction UiTimerButtonComplete(props) {\r\n    const { timerHandler,name,time,hours, color, border,txtColor, width, height} = props;\r\n    const [start, setStart] = useState(0);\r\n    const [startTimer , setStartTimer] = useState(time)\r\n    useEffect(() => {\r\n        var timer = time !== undefined ? time.split(' '):\"0 0\"\r\n        var endTime = moment().format('h:mm:ss')\r\n        var finalTimeSub = moment(moment(endTime,\"hh:mm:ss\").diff(moment(timer[1],\"hh:mm:ss\"))).format(\"hh:mm:ss\")\r\n        setStart(start => start + 1);\r\n        setStartTimer(finalTimeSub)\r\n        console.log(\"------ss\", finalTimeSub)\r\n    }, [1]);\r\n\r\n    return (\r\n    <React.Fragment>\r\n       <div className=\"ui-timer-button\" \r\n            style={{background:color, border:`1px solid ${border}`,color:txtColor,width:width,height:height}} \r\n            onClick={timerHandler}>\r\n            <p>{name}</p>\r\n            <p>{startTimer !== 'null' ? startTimer : 'and' }</p>\r\n            <p>{hours}</p>\r\n       </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nexport default UiTimerButtonComplete\r\n            ","\r\nimport React, {useContext,useState, useEffect} from 'react'\r\n//components\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiPageHeader from './../../views/UiPageHeader';\r\nimport UiTimerButtonComplete from './../../views/UiTimerButtonComplete'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\nimport _ from 'lodash'\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { Button,Row, Col } from 'antd';\r\n//scss\r\nimport './labor-record-complete.scss'\r\n// service\r\nimport { putPendingLaborService } from './../../service/pendingLabor'\r\n\r\n const LaborRecordComplete = (props) => {\r\n    const {pendingLabor, pendingLaborRecord, getPendingLaborRecord } = useContext(GlobalContext);\r\n    let { id } = useParams();\r\n    const [page, setPage] = useState(0);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getPendingLaborRecord(id)\r\n      }, [page]);\r\n\r\n \r\n    const stopTimer = () =>{\r\n        let serviceParams = {\r\n            STOP_TIME: null,\r\n        }\r\n        // putPendingLaborService(id, serviceParams).then((res)=>{\r\n        //     console.log(res)\r\n        // })\r\n        history.push('/review-timer')\r\n        console.log('stop')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { pendingLaborRecord !== undefined ?\r\n                <> \r\n                    <UiPageHeader content={Constants.LABORCONFIRM} track />\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col className=\"gutter-row\" span={12}>\r\n                            <div>\r\n                                <UiGrid title={Constants.WORKORDER} number={pendingLaborRecord.WORK_ORDER_NUMBER} desc={pendingLaborRecord.WO_DESCRIPTION} />\r\n                                <UiGrid title={Constants.CUSTOMER} number={pendingLaborRecord.CUST_NAME} />\r\n                                <UiGrid title={Constants.PLANT} number={pendingLaborRecord.INVENTORY_NUMBER} desc={pendingLaborRecord.INVENTORY_NAME} />\r\n                                <UiGrid title={Constants.DEPARTMENT} number={pendingLaborRecord.DEPT_CODE} desc={pendingLaborRecord.DEPT_NAME} />\r\n                                <UiGrid title={Constants.WORKCELLS} number={pendingLaborRecord.WORK_CELL_KEY} desc={pendingLaborRecord.WORK_CELL_NAME} />\r\n                                <UiGrid title={Constants.EMPLOYEE} number={pendingLaborRecord.EMPLOYEE_KEY} desc={pendingLaborRecord.EMPLOYEE_NAME} />\r\n                                <UiGrid title={Constants.LOBARACTIVITY}  number={pendingLaborRecord.WORKCENTER_NAME} />\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={12}>\r\n                            <div className=\"big-timer\">\r\n                                <UiTimerButtonComplete \r\n                                    name=\"Complete\" \r\n                                    time={pendingLaborRecord.START_TIME}\r\n                                    hours='HoursMinutes' \r\n                                    txtColor=\"black\" \r\n                                    color=\"white\" \r\n                                    border=\"black\"\r\n                                    width=\"250px\" \r\n                                    height=\"250px\"\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        {/* <Col className=\"gutter-row\" span={5}>\r\n                            <div>\r\n                                <UiTimerButton name=\"Stop Timer\" time='and' hours='Review Labor' color=\"red\" timerHandler={stopTimer}/>\r\n                            </div>\r\n                        </Col> */}\r\n                    </Row>\r\n                 </> \r\n                : null}\r\n           \r\n        </>\r\n    )\r\n}\r\nexport default LaborRecordComplete","import React from 'react'\r\nimport { Dropdown, Icon, Menu, Tooltip, message } from 'antd'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { MenuOutlined , UserOutlined } from '@ant-design/icons';\r\nimport {deletePendingLaborService} from './../../service/pendingLabor'\r\nclass MaintenancePageDetailDropdown extends React.Component {\r\n  refresh = () => true\r\n  deleteItem = (e) =>{\r\n    return deletePendingLaborService(e).then(res=>{\r\n        if(res){\r\n            message.success('successfully deleted');\r\n            setTimeout(function(){ window.location.reload(false); }, 2000);\r\n        }\r\n    })\r\n}\r\n  render() {\r\n    const {\r\n      match,\r\n      itemKey,\r\n      allowDelete = true,\r\n      allowEdit,\r\n      deleteTooltip,\r\n      deleteFunction,\r\n    } = this.props\r\n\r\n    const menuItems = (\r\n      <Menu>\r\n        <Menu.Item key=\"0\">\r\n            <Link to={`${match.url}/${itemKey}`}>View</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"1\">\r\n          <Link to={`${match.url}/edit/${itemKey}`}>{allowEdit ? 'Edit' : 'View'}</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key='delete' icon={<UserOutlined />}>  \r\n            <a href=\"#\" onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.deleteItem(itemKey) } }>\r\n                Delete\r\n            </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n\r\n    return (\r\n      <Dropdown overlay={menuItems} trigger={['click']}>\r\n        <a className=\"ant-dropdown-link\" href=\"#\">\r\n         <MenuOutlined />\r\n        </a>\r\n      </Dropdown>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(MaintenancePageDetailDropdown)","import React, { Component } from 'react';\r\nimport { Input, Button, Select, Table ,Menu, Dropdown, message } from 'antd';\r\nimport './labor-review-and-posting.scss'\r\nimport { getLaborPostingFilterService, getPendingLaborService, deletePendingLaborService } from './../../service/pendingLabor'\r\nimport Spinner from './../../views/Spinner'\r\nimport MaintenancePageDetailDropdown from './../../views/MainHamber/MaintenancePageDetailDropdown'\r\nimport { AgGridReact } from 'ag-grid-react'\r\n\r\nclass LaborReviewAndPosting extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { match, permissions } = this.props\r\n        this.state = {\r\n          columnDefs: [\r\n            {\r\n              headerName: 'KEY',\r\n              field: 'KEY',\r\n              pinned: true,\r\n              cellClass: ['lock-pinned', 'stringType'],\r\n              width: 125,\r\n              filter: 'agTextColumnFilter',\r\n            },\r\n            {\r\n              headerName: 'WORK_ORDER_NUMBER',\r\n              field: 'WORK_ORDER_NUMBER',\r\n              pinned: true,\r\n              cellClass: ['lock-pinned', 'stringType'],\r\n              width: 125,\r\n              filter: 'agTextColumnFilter',\r\n            },\r\n            {\r\n              headerName: 'CUST_NAME',\r\n              field: 'CUST_NAME',\r\n              width: 200,\r\n              filter: 'agTextColumnFilter',\r\n            },\r\n            {\r\n              headerName: 'EMPLOYEE_NAME',\r\n              field: 'EMPLOYEE_NAME',\r\n              width: 200,\r\n              filter: 'agTextColumnFilter',\r\n            },\r\n            {\r\n              headerName: 'LABOR_CLASS',\r\n              field: 'LABOR_CLASS',\r\n              cellStyle: { textAlign: 'center' },\r\n              width: 150,\r\n              filter: 'agNumberColumnFilter',\r\n              tooltipField: 'LABOR_CLASS',\r\n            },\r\n            {\r\n              headerName: 'WORK_CELL_NAME',\r\n              field: 'WORK_CELL_NAME',\r\n              cellStyle: { textAlign: 'center' },\r\n              width: 145,\r\n              filter: 'agNumberColumnFilter',\r\n              tooltipField: 'WORK_CELL_NAME',\r\n            },\r\n            {\r\n              headerName: 'START_TIME',\r\n              field: 'START_TIME',\r\n              cellStyle: { textAlign: 'left' },\r\n              filter: 'agTextColumnFilter',\r\n              width: 190,\r\n            },\r\n            {\r\n              headerName: 'STOP_TIME',\r\n              field: 'STOP_TIME',\r\n              cellStyle: { textAlign: 'left' },\r\n              filter: 'agTextColumnFilter',\r\n              width: 190,\r\n            },\r\n            {\r\n              headerName: 'LABOR_TIME',\r\n              field: 'LABOR_TIME',\r\n              cellStyle: { textAlign: 'center' },\r\n              width: 150,\r\n              sort: 'desc',\r\n            },\r\n            {\r\n              headerName: 'LABOR_RATE_TYPE',\r\n              field: 'LABOR_RATE_TYPE',\r\n              cellStyle: { textAlign: 'center' },\r\n              width: 150,\r\n              sort: 'desc',\r\n            },\r\n            {\r\n              headerName: null,\r\n              cellStyle: { border: '0px' },\r\n              cellRendererFramework: row => (\r\n                <MaintenancePageDetailDropdown\r\n                  itemKey={row.data.KEY}\r\n                  allowDelete={true}\r\n                  allowEdit={true}\r\n                  deleteTooltip=\"Sales Classes cannot be deleted\"\r\n                />\r\n              ),\r\n              width: 50,\r\n              pinned: 'right',\r\n              sortable: false,\r\n              filter: false,\r\n              menuTabs: [],\r\n              resizable: false,\r\n              selectable: false,\r\n            },\r\n          ],\r\n          defaultColDef: { sortable: true, filter: true, resizable: true, menuTabs: ['filterMenuTab'] },\r\n          rowData: [],\r\n          errors: [],\r\n          printMode: /print/g.test(match),\r\n          inputValue:{\r\n            workOrder:''\r\n          }\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        getPendingLaborService(this.state.inputValue.workOrder)\r\n        .then(this.assignListingData)\r\n        .catch(error => console.log(error))\r\n    }\r\n    assignListingData = rowData => {\r\n      if (rowData) {\r\n        const formattedrowData = rowData.map(data => {\r\n          return {\r\n            KEY:data.KEY,\r\n            WORK_ORDER_NUMBER: data.WORK_ORDER_NUMBER,\r\n            CUST_NAME: data.CUST_NAME,\r\n            EMPLOYEE_NAME: data.EMPLOYEE_NAME,\r\n            LABOR_CLASS: data.LABOR_CLASS,\r\n            WORK_CELL_NAME: data.WORK_CELL_NAME,\r\n            START_TIME: data.START_TIME,\r\n            STOP_TIME: data.STOP_TIME,\r\n            LABOR_TIME: data.LABOR_TIME,\r\n            LABOR_RATE_TYPE: data.LABOR_RATE_TYPE\r\n          }\r\n        })\r\n        this.setState({ rowData: formattedrowData })\r\n      }\r\n    }\r\n\r\n    handleError = (e, title) => {\r\n      const { errors } = this.state\r\n      const { setErrorState } = this.props\r\n      let errorData\r\n      const currentActivity = 'selecting Data to Display Sales Class Listing'\r\n      if (e.data) {\r\n        errorData = { ...e.data, currentActivity }\r\n      } else {\r\n        errorData = {\r\n          title,\r\n          sourceType: 'Network',\r\n          details: e.toString(),\r\n          sourceName: 'SalesClassListing.js',\r\n          currentActivity,\r\n          timestamp: Date().toString(),\r\n        }\r\n      }\r\n      console.log(e)\r\n      errors.push(errorData)\r\n      this.setState({ errors })\r\n      // setErrorState()\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        getLaborPostingFilterService(this.state.inputValue.workOrder)\r\n        .then((res) => this.setState({ rowData: res }))\r\n        .catch(error => console.log(error))\r\n    }\r\n    onChangeHandler(event){\r\n        this.setState({\r\n            inputValue:{\r\n                workOrder:event.target.value\r\n            }\r\n        })\r\n    }\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    };\r\n    render() {\r\n      const { Option } = Select;\r\n      const { columnDefs, defaultColDef, rowData, errors, printMode, selectedRowKeys, inputValue } = this.state\r\n      const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: this.onSelectChange,\r\n      };\r\n      const gridOptions = {\r\n        domLayout: printMode ? 'print' : 'normal',\r\n        popupParent: document.querySelector('body')\r\n        // rowClassRules: {\r\n        //   'inactive-row-item': params => params.data.ACTIVE_SALES_CLASS !== 'Yes',\r\n        // },\r\n      }\r\n      return errors.length ? (\r\n            \"\"\r\n          ) : (\r\n            <div\r\n            className=\"ag-theme-balham\"\r\n            style={{ height: '600px'}}\r\n        >\r\n            <div className=\"labor-review-filter\">\r\n                <div className=\"__work-order\">\r\n                    <div className=\"__mr-2\">\r\n                        <p>Plant</p>\r\n                    </div>\r\n                    <div>\r\n                    <Input.Group compact>\r\n                        <Select defaultValue={'All'}  name=\"plant\">\r\n                            <Option value=\"one\" >{\"one\"}</Option>\r\n                        </Select>\r\n                    </Input.Group>\r\n                    </div>\r\n                </div>\r\n                <div className=\"__work-order mt-2 mb-2\">\r\n                    <div className=\"__mr-1\">\r\n                        <p>Work Order</p>\r\n                    </div>\r\n                    <div>\r\n                        <Input name=\"workOrder\" onChange={this.onChangeHandler} value={inputValue.workOrder} />\r\n                    </div>\r\n                    <div className=\"ml-10\">\r\n                        <Button type=\"primary\" onClick={this.handleClick}>Enter</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AgGridReact\r\n              animateRows\r\n              suppressRowClickSelection\r\n              defaultColDef={defaultColDef}\r\n              columnDefs={columnDefs}\r\n              rowData={rowData}\r\n              gridOptions={gridOptions}\r\n              scrollbarWidth={8}\r\n            />\r\n        </div>\r\n      )\r\n    }\r\n}\r\nexport default LaborReviewAndPosting","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Radio,\r\n    Select,\r\n    Input,\r\n    Col,\r\n    DatePicker,\r\n    TimePicker,\r\n    Row,\r\n    Button,\r\n    message\r\n  } from 'antd';\r\n\r\nimport moment from 'moment';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\r\n  //components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiTimerButton from './../../views/UiTimerButton'\r\nimport Spinner from './../../views/Spinner'\r\nimport { convertMonthToNumber, convertDateTime } from './../../utile/helpers' \r\n//Constants\r\nimport Constants from './../../constants'\r\n//scss \r\nimport './labor-review-and-posting.scss'\r\n  // service\r\nimport { getProgressTimeStopService, putPendingLaborService } from './../../service/pendingLabor'\r\nconst { Option } = Select;\r\nconst format = 'HH:mm';\r\nconst { TextArea } = Input;\r\nconst dateFormat = 'DD-MM-YYYY';\r\n\r\nconst LaborReviewAndPostingEdit = () => {\r\n  const history = useHistory();\r\n  const {pendingLaborRecord,panelShop, workCellData, getWorkCell, getPanalShop, getPendingLaborRecord } = useContext(GlobalContext);\r\n  const [page, setPage] = useState([]);\r\n  const [note, setNote] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [stopTime, setStopTime] = useState('');\r\n  const [stopDate, setStopDate] = useState('');\r\n  const [laborPerform, setLaborPerform] = useState('');\r\n  const [laborRate, setRaborRate] = useState(Constants.LABOR_RATE[0]);\r\n  let { id } = useParams();\r\n    useEffect(() => {\r\n      getProgressTimeStopService(id).then(res=>{\r\n        setPage(res[0])\r\n        let start = res[0].START_TIME.split(\" \");\r\n        let stop = res[0].STOP_TIME !== null ? res[0].STOP_TIME.split(\" \"): ''\r\n        console.log(convertMonthToNumber(start[0]))\r\n        setStartTime(start[1])\r\n        setStartDate(convertMonthToNumber(start[0]))\r\n        setStopTime(stop[1])\r\n        setStopDate(convertMonthToNumber(stop[0]))\r\n        setLaborPerform(res[0].INVENTORY_NAME)\r\n      })\r\n    }, [1]);\r\n\r\n    const onChange = (e) => {\r\n      setNote(e.target.value);\r\n    }\r\n    const onChangeStartTime = (time, timeString) =>{\r\n      setStartTime(timeString);\r\n    }\r\n    const onChangeStopTime = (time, timeString) =>{\r\n        setStopTime(timeString);\r\n    }\r\n    const onChangeStartDate = (date, dateString) =>{\r\n        setStartDate(dateString);\r\n    }\r\n    const onChangeStopDate = (date, dateString) =>{\r\n        setStopDate(dateString);\r\n    }\r\n    const onChangeRate = (value) =>{\r\n      setRaborRate(value)\r\n    }\r\n    const onChangeLaborPerform = (value) =>{\r\n      setLaborPerform(value)\r\n    }\r\n    const cancleChanges = () =>{\r\n      history.goBack();\r\n    }\r\n    const saveChange = () =>{\r\n      let start_time = convertDateTime(startDate,startTime)\r\n      let stop_time = convertDateTime(stopDate,stopTime)\r\n        let serviceParams = {\r\n            PLANT_KEY: page.PLANT_KEY,\r\n            DEPARTMENT_KEY: page.DEPARTMENT_KEY,\r\n            EMPLOYEE_KEY: page.EMPLOYEE_KEY,\r\n            WORK_CENTER_KEY: page.WORK_CENTER_KEY,\r\n            WORK_CELL_KEY: page.WORK_CELL_KEY,\r\n            LABOR_CLASS: null,\r\n            WORK_ORDER_NUMBER: page.WORK_ORDER_NUMBER,\r\n            START_TIME: start_time,\r\n            STOP_TIME: stop_time,\r\n            LABOR_TIME: null,\r\n            LABOR_RATE_TYPE: null,\r\n            NOTE:note,\r\n            STATUS: \"C\"\r\n        }\r\n        console.log(laborRate, start_time, stop_time)\r\n        putPendingLaborService(page.KEY, serviceParams).then((res)=>{\r\n          message.success({ content: 'Successfully Updated ' });\r\n          history.push(`/labor-review-and-posting`)\r\n        })\r\n    }\r\n    const contentHtmlForRate = <>\r\n        {Constants.LABOR_RATE.map((item, index)=><Option key={index} value={item} >{item}</Option>)}\r\n    </>;\r\n    \r\n    return (\r\n      <>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n      <form  className=\"labor-record-form\">\r\n        <Col className=\"gutter-row\" span={20}>\r\n          <div>\r\n            <UiPageHeader content={Constants.WORKCELL_PROGRESS_TIMERS} />\r\n            <UiGrid title=\"Work Order \" number={page.WORK_ORDER_NUMBER} />\r\n            <UiGrid title=\"Customar \" number={page.CUST_NAME} />\r\n            <UiGrid title=\"Work Cell \" number={page.WORK_CELL_NAME} />\r\n            <UiGrid title=\"Employee \" number={page.EMPLOYEE_NAME} />\r\n            <UiGrid title=\"Labor Performed\" >\r\n              <Input.Group compact>\r\n              <Select value={laborPerform} onChange={onChangeLaborPerform} name=\"laborPerformed\">\r\n                <Option value={page.INVENTORY_NAME} onChange={onChange}>{page.INVENTORY_NAME}</Option>\r\n              </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Start Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact >\r\n                    <DatePicker onChange={onChangeStartDate} value={moment(startDate, 'DD-MM-YY')} format={dateFormat}/>\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss\" onChange={onChangeStartTime} value={moment(startTime, format)} />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Stop Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact>\r\n                    <DatePicker onChange={onChangeStopDate} value={moment(stopDate, dateFormat)} format={dateFormat} />\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss\" onChange={onChangeStopTime} value={moment(stopTime, format)} />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Rate\" >\r\n              <Input.Group compact>\r\n                <Select value={laborRate} onChange={onChangeRate} name=\"laborRate\">\r\n                  {contentHtmlForRate}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Hours\" number={pendingLaborRecord.LABOR_TIME} />\r\n            <div>\r\n              <p>Note *</p>\r\n              <TextArea rows={4} name='note' value={note} onChange={onChange} placeholder=\"Note\"/>\r\n            </div>\r\n            <div className=\"footer-button\">\r\n                <Button \r\n                    type=\"primary\" \r\n                    style={{backgroundColor:'red'}} \r\n                    className=\"time-button\" \r\n                    onClick={cancleChanges} \r\n                > <b>Cancel <br></br> Do not save changes </b>\r\n                </Button>\r\n                <Button \r\n                    type=\"primary\" \r\n                    className=\"time-button\" \r\n                    onClick={saveChange} \r\n                    style={{padding: '27px'}} \r\n                > <b>Save Changes</b> \r\n                </Button>  \r\n            </div>\r\n          </div>\r\n        </Col>\r\n        </form>\r\n    </Row> \r\n      </>\r\n    )\r\n}\r\nexport default LaborReviewAndPostingEdit","import React, {useState, useEffect, useContext} from 'react'\r\n// ant\r\nimport { Table, Tag , Button} from 'antd';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n// Router\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n// service\r\nimport { getListLaborAuditTrail } from './../../service/pendingLabor'\r\nimport Spinner from './../../views/Spinner'\r\nconst columns = [\r\n    {\r\n        title: '',\r\n        dataIndex: 'TRANSACTION_TYPE',\r\n        key: '',\r\n    },\r\n    {\r\n        title: 'Date',\r\n        dataIndex: 'ENTRY_DATE',\r\n        key: 'ENTRY_DATE',\r\n        render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Edit by',\r\n        dataIndex: 'ENTRY_FORM',\r\n        key: 'ENTRY_FORM',\r\n    },\r\n    {\r\n        title: 'Work Order',\r\n        dataIndex: 'ORIGINAL_WORK_ORDER_NUMBER',\r\n        key: 'ORIGINAL_WORK_ORDER_NUMBER',\r\n    },\r\n    {\r\n        title: 'Work Cell',\r\n        dataIndex: 'ORIGINAL_WORK_CELL_KEY',\r\n        key: 'ORIGINAL_WORK_CELL_KEY',\r\n    },\r\n    {\r\n        title: 'Employee',\r\n        dataIndex: 'ORIGINAL_EMPLOYEE_KEY',\r\n        key: 'ORIGINAL_EMPLOYEE_KEY',\r\n    },\r\n    {\r\n        title: 'Labor Performed',\r\n        dataIndex: 'ORIGINAL_WORK_CELL_KEY',\r\n        key: 'ORIGINAL_WORK_CELL_KEY',\r\n    },\r\n    {\r\n        title: 'Start Time',\r\n        dataIndex: 'ORIGINAL_START_TIME',\r\n        key: 'ORIGINAL_START_TIME',\r\n    },\r\n    {\r\n        title: 'Stop Time',\r\n        dataIndex: 'ORIGINAL_STOP_TIME',\r\n        key: 'ORIGINAL_STOP_TIME',\r\n    },\r\n    {\r\n      title: 'Note',\r\n      key: 'NOTE',\r\n      dataIndex: 'NOTE',\r\n      render: text => <a>{text}</a>\r\n    }\r\n  ];\r\nconst LaborReviewAndPostingView = () => {\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState(1);\r\n    const { getWorkCell, workCellData , getKeyData, keyData, getPanalShop ,keyEmpty} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        getListLaborAuditTrail(id).then(res=>setData(res))\r\n    }, [page]);\r\n    const cancleChanges = () =>{\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <div>\r\n            {data.length > 0 ?<Table columns={columns} dataSource={data} /> : \"NO DATA\" }\r\n            <div className=\"footer-cancle\">\r\n                <Button \r\n                    type=\"primary\" \r\n                    className=\"time-button\" \r\n                    onClick={cancleChanges}\r\n                    style={{backgroundColor:'rgba(0, 0, 0, 0.65)'}}  \r\n                > <b>Close This Page</b> \r\n                </Button>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LaborReviewAndPostingView","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Radio,\r\n    Select,\r\n    Input,\r\n    Col,\r\n    DatePicker,\r\n    TimePicker,\r\n    Row,\r\n    Button,\r\n    message\r\n  } from 'antd';\r\n\r\nimport moment from 'moment';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\r\n  //components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport { convertMonthToNumber, convertDateTime } from './../../utile/helpers' \r\nimport UiGrid from './../../views/UiGrid'\r\n//Constants\r\nimport Constants from './../../constants'\r\n//scss \r\nimport './labor-review-and-posting.scss'\r\n  // service\r\nimport { getProgressTimeStopService, putPendingLaborService } from './../../service/pendingLabor'\r\nimport { getPanelShopService,getWorkOrderService, getWorkCellService } from './../../service/employee';\r\n\r\nconst { Option } = Select;\r\nconst format = 'HH:mm';\r\nconst { TextArea } = Input;\r\nconst dateFormat = 'YYYY-MM-DD';\r\n\r\nconst LaborReviewAndPostingAdd = () => {\r\n  const history = useHistory();\r\n  const {pendingLaborRecord,panelShop, workCellData, getWorkCell, getPanalShop, getPendingLaborRecord } = useContext(GlobalContext);\r\n  const [customar, setCustomar] = useState('');\r\n  const [page, setPage] = useState([]);\r\n  const [note, setNote] = useState('');\r\n  const [workOrderNumber, setWorkOrderNumber] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [stopTime, setStopTime] = useState('');\r\n  const [stopDate, setStopDate] = useState('');\r\n  const [workCell, setWorkCell] = useState('');\r\n  const [employe, setEmploye] = useState('');\r\n  const [workCenterName, setWorkCenterName] = useState('');\r\n  const [laborRate, setRaborRate] = useState(Constants.LABOR_RATE[0]);\r\n  const [employeeUpdate, setEmployeeUpdate] = useState([]);\r\n  const [workCellUpdate, setWorkCellUpdate] = useState([])\r\n  const [laborActivityUpdate, setLaborActivityUpdate] = useState([])\r\n  let { id } = useParams();\r\n    useEffect(() => {\r\n      getWorkCellService().then(res=>{\r\n        setWorkCell(res[0].WORK_CELL_NAME)\r\n        setWorkCellUpdate(res)\r\n      })\r\n    }, [1]);\r\n    const onChangeWorkCell = (e) => {\r\n      workCellUpdate.map(item =>{\r\n        if(item.WORK_CELL_NAME === e){\r\n          setWorkCell(e)\r\n          getPanelShopService(item.DEPARTMENT_KEY).then(res=>{\r\n            setWorkCenterName(res[0].DESCRIPTION)\r\n            setEmployeeUpdate(res)\r\n            setEmploye(res[0].NAME)\r\n          })\r\n        }\r\n      })\r\n    }\r\n    const onChangeCustomar = (e) =>{\r\n      setCustomar(e.target.value);\r\n    }\r\n    const onChange = (e) => {\r\n      setNote(e.target.value);\r\n    }\r\n    const onChangeEmployee = (e) =>{\r\n      let update = workCellData.map(item=>{\r\n        if(e === item.WORK_CELL_NAME){\r\n          return item\r\n        }\r\n      })    \r\n      setEmploye(e)\r\n    }\r\n    const completeStartNew = () =>{\r\n      history.push('/')\r\n    }\r\n    const onChangeStartTime = (time, timeString) =>{\r\n        setStartTime(timeString);\r\n    }\r\n    const onChangeStopTime = (time, timeString) =>{\r\n        setStopTime(timeString);\r\n    }\r\n    const onChangeStartDate = (date, dateString) =>{\r\n        setStartDate(dateString);\r\n    }\r\n    const onChangeStopDate = (date, dateString) =>{\r\n        setStopDate(dateString);\r\n    }\r\n    const onChangeRate = (value) =>{\r\n        setRaborRate(value)\r\n    }\r\n    const onChangeWorkOrder =(e) =>{\r\n      getWorkOrderService(e.target.value).then(res=>{\r\n        setLaborActivityUpdate(res)\r\n        console.log(res)\r\n      })\r\n      \r\n      setWorkOrderNumber(e.target.value)\r\n    }\r\n    const cancleChanges = () =>{\r\n      history.goBack();\r\n    }\r\n    const saveChange = () =>{\r\n      let start_time = convertDateTime(startDate,startTime)\r\n      let stop_time = convertDateTime(stopDate,stopTime)\r\n      let serviceParams = {\r\n          PLANT_KEY: workCellUpdate === null ? page.PLANT_KEY : workCellUpdate.PLANT_KEY,\r\n          DEPARTMENT_KEY: workCellUpdate === null ? page.DEPARTMENT_KEY : workCellUpdate.DEPARTMENT_KEY,\r\n          EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n          WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n          WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n          LABOR_CLASS: null,\r\n          WORK_ORDER_NUMBER: workOrderNumber,\r\n          START_TIME: start_time,\r\n          STOP_TIME: stop_time,\r\n          LABOR_TIME: null,\r\n          LABOR_RATE_TYPE: null,\r\n          STATUS: \"C\"\r\n      }\r\n        console.log('saveChange', {\r\n          start_time,\r\n          stop_time,\r\n            note,\r\n            laborRate,\r\n            startTime,\r\n            startDate,\r\n            workOrderNumber,\r\n            customar\r\n        })\r\n        message.success({ content: 'please check data in console '});\r\n        // putPendingLaborService(pendingLaborRecord.KEY, serviceParams).then((res)=>{\r\n        //   history.push(`/labor-record-complete/${pendingLaborRecord.KEY}`)\r\n        // })\r\n    }\r\n    const contentHtml = <>\r\n      {workCellUpdate.length > 0 ? workCellUpdate.map((item, index)=><Option key={index} value={item.WORK_CELL_NAME} >{item.WORK_CELL_NAME}</Option>) : null}\r\n    </>;\r\n    const contentHtmlForEmployee = <>\r\n      {employeeUpdate.length > 0 ? employeeUpdate.map((item, index)=><Option key={index} value={item.NAME} >{item.NAME}</Option>) : null}\r\n    </>;\r\n\r\n    return (\r\n      <>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className=\"gutter-row\" span={20}>\r\n          <div>\r\n            <UiPageHeader content={Constants.WORKCELL_PROGRESS_TIMERS} />\r\n            <UiGrid title=\"Work Order\" >\r\n              <Input placeholder=\"Enter Work Order\" value={workOrderNumber} name=\"workOrder\" onChange={onChangeWorkOrder} />\r\n            </UiGrid>\r\n            <UiGrid title=\"Customar\" >\r\n              <Input placeholder=\"Customar\" name=\"customar\" value={customar} onChange={onChangeCustomar} />\r\n            </UiGrid>\r\n            <UiGrid title=\"Work Cell\" >\r\n              <Input.Group compact>\r\n                <Select value={workCell} onChange={onChangeWorkCell}>\r\n                  {contentHtml}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Employee\" >\r\n              <Input.Group compact>\r\n                <Select value={employe} onChange={onChangeEmployee}>\r\n                  {contentHtmlForEmployee}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Activity\" >\r\n              <Input.Group compact>\r\n                <Select value={workCenterName} >\r\n                  {/* <Option >{workCenterName}</Option> */}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Start Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact >\r\n                    <DatePicker onChange={onChangeStartDate}  format={dateFormat}/>\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss\" onChange={onChangeStartTime}  />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Stop Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact>\r\n                    <DatePicker onChange={onChangeStopDate}  format={dateFormat} />\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss\" onChange={onChangeStopTime}  />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Hours\" number={pendingLaborRecord.LABOR_TIME} />\r\n            <div >\r\n                <p>Note *</p>\r\n                <TextArea rows={4} name='note' value={note}  placeholder=\"Note\"/>\r\n            </div>\r\n            <div className=\"footer-button\">\r\n                <Button \r\n                    type=\"primary\" \r\n                    style={{backgroundColor:'red'}} \r\n                    className=\"time-button\" \r\n                    onClick={cancleChanges} \r\n                > <b>Cancel <br></br> Do not save changes </b>\r\n                </Button>\r\n                <Button \r\n                    type=\"primary\" \r\n                    className=\"time-button\" \r\n                    onClick={saveChange} \r\n                    style={{padding: '27px'}} \r\n                > <b>Save Changes</b> \r\n                </Button>  \r\n            </div>\r\n          </div>\r\n        </Col>\r\n\r\n    </Row>\r\n      </>\r\n    )\r\n}\r\nexport default LaborReviewAndPostingAdd","import WorkCell from '../pages/work-cell/work-cell';\r\nimport PanelShop from '../pages/panel-shop/panel-shop';\r\nimport JobPosting from '../pages/job-posting/job-posting';\r\nimport LaborActivity from '../pages/labor-activity/labor-activity';\r\nimport LaborConfirm from '../pages/labor-confirm/labor-confirm';\r\nimport ProgressTimers from '../pages/progress-timers/progress-timers';\r\nimport ReviewTimer from '../pages/review-timer/review-timer';\r\nimport ProgressTimeStop from '../pages/progress-time-stop/progress-time-stop';\r\nimport LaborRecordComplete from '../pages/labor-record-complete/labor-record-complete'\r\nimport LaborReviewAndPosting from '../pages/labor-review-and-posting/labor-review-and-posting';\r\nimport LaborReviewAndPostingEdit from  '../pages/labor-review-and-posting/labor-review-and-posting-edit'\r\nimport LaborReviewAndPostingView from '../pages/labor-review-and-posting/labor-review-and-posting-view'\r\nimport LaborReviewAndPostingAdd from '../pages/labor-review-and-posting/labor-review-and-posting-add'\r\nimport LaborTracker from '../pages/labor-tracker/labor-tracker'\r\nexport const Routes = [\r\n    {\r\n        component: WorkCell,\r\n        path: '/work-cell',\r\n        exact: true,\r\n        title: 'Work Cell'\r\n    },\r\n    {\r\n        component: WorkCell,\r\n        path: '/',\r\n        exact: true,\r\n        title: 'Work Cell'\r\n    },\r\n    {\r\n        component: PanelShop,\r\n        path: '/panel-shop/:id',\r\n        isBreadcrumbVisible: true,\r\n        exact: true,\r\n        title: 'PanelShop'\r\n    },\r\n    {\r\n        component: JobPosting,\r\n        path: '/job-posting-employee/:id',\r\n        exact: true,\r\n        title: 'JobPosting'\r\n    },\r\n    {\r\n        component: LaborActivity,\r\n        path: '/labor-activity/:id',\r\n        exact: true,\r\n        title: 'LaborActivity'\r\n    },\r\n    {\r\n        component: LaborConfirm,\r\n        path: '/labor-confirm',\r\n        exact: true,\r\n        title: 'labor-confirm'\r\n    },\r\n    {\r\n        component: ProgressTimers,\r\n        path: '/progress-timers',\r\n        exact: true,\r\n        title: 'ProgressTimers'\r\n    },\r\n    {\r\n        component: ReviewTimer,\r\n        path: '/review-timer',\r\n        exact: true,\r\n        title: 'ReviewTimer'\r\n    },\r\n    {\r\n        component: ProgressTimeStop,\r\n        path: '/progress-time-stop/:id',\r\n        exact: true,\r\n        title: 'ProgressTimeStop'\r\n    },\r\n    {\r\n        component: LaborRecordComplete,\r\n        path: '/labor-record-complete/:id',\r\n        exact: true,\r\n        title: 'LaborRecordComplete'\r\n    },\r\n    {\r\n        component: LaborReviewAndPosting,\r\n        path: '/labor-review-and-posting',\r\n        exact: true,\r\n        title: 'LaborReviewAndPosting'\r\n    },\r\n    {\r\n        component: LaborReviewAndPostingEdit,\r\n        path: '/labor-review-and-posting/edit/:id',\r\n        exact: true,\r\n        title: 'LaborReviewAndPostingEdit'\r\n    },\r\n    {\r\n        component: LaborReviewAndPostingView,\r\n        path: '/labor-review-and-posting/:id',\r\n        exact: true,\r\n        title: 'LaborReviewAndPosting'\r\n    },\r\n    {\r\n        component: LaborReviewAndPostingAdd,\r\n        path: '/labor-review-and-posting-add-labor-record',\r\n        exact: true,\r\n        title: 'LaborReviewAndPostingAdd'\r\n    },\r\n    {\r\n        component: LaborTracker,\r\n        path: '/labor-tracker',\r\n        exact: true,\r\n        title: 'LaborTracker'\r\n    }\r\n];\r\nexport default Routes;","import React, { useState, useEffect, useContext } from 'react';\r\n//components\r\nimport UiGridProgress from './../../views/UiGridProgress'\r\nimport Spinner from './../../views/Spinner'\r\n// Router\r\nimport {useHistory} from 'react-router-dom';\r\n//antd\r\nimport { Input, Button, Select, Table ,Menu, Dropdown, message } from 'antd';\r\n// context\r\nimport { GlobalContext } from \"./../../context//GlobalState\";\r\nimport _ from 'lodash';\r\nimport moment from 'moment'\r\nimport './labor-tracker.scss'\r\n\r\nconst LaborTracker = () => {\r\n  const { getPendingLabor , pendingLabor, startTime} = useContext(GlobalContext);\r\n  const [page, setPage] = useState(1);\r\n  const [workCellValue, setWorkCellValue] = useState(\"All\");\r\n  const { Option } = Select;\r\n  const history = useHistory();\r\n    useEffect(() => {\r\n      getPendingLabor()\r\n    }, [page]);\r\n    const timerHandler = (key) =>{\r\n      history.push(`/progress-time-stop/${key}`)\r\n    }\r\n    const progressDataFilter = pendingLabor.length > 0 ? _.orderBy(pendingLabor, ['KEY'], ['desc']) : null\r\n    let tempalte\r\n    if(progressDataFilter){\r\n      let data =  _.filter(progressDataFilter, function(item) { return item.STOP_TIME === null });\r\n      tempalte = (\r\n        data.map((item, index)=>{\r\n          let itemStartTime = _.split(item.START_TIME, ' ');\r\n          let time = itemStartTime[1]\r\n          return  <UiGridProgress \r\n                key={index}\r\n                employe={item.EMPLOYEE_KEY} \r\n                wOrder={item.WORK_ORDER_NUMBER} \r\n                activity=\"22\" \r\n                start_time={time}\r\n                start_time_count={item.START_TIME}\r\n                employeName={item.EMPLOYEE_NAME}\r\n                wcName={item.WORK_CELL_NAME}\r\n                woDes={item.WO_DESCRIPTION}\r\n                timerHandler={() => timerHandler(item.KEY)} \r\n            />\r\n        })\r\n      )\r\n    }else{\r\n      return <Spinner />\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className=\"labor-tracker\">\r\n            <div className=\"__work-order\">\r\n                <div className=\"__mr-2\">\r\n                    <p>Work Cell</p>\r\n                </div>\r\n                <div>\r\n                <Input.Group compact>\r\n                    <Select value={workCellValue}  name=\"workCell\">\r\n                        <Option value=\"All\" >{\"All\"}</Option>\r\n                    </Select>\r\n                </Input.Group>\r\n                </div>\r\n            </div>\r\n            <div style={{marginRight: \"25px\",textAlign:\"center\"}}>\r\n                <p >Click a timer to access <br></br> the job </p>\r\n            </div>\r\n        </div>\r\n        {tempalte}\r\n      \r\n    </>\r\n  ); \r\n}\r\n\r\nexport default LaborTracker;","import React, {useContext} from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\n// context\r\nimport { GlobalContext } from \"./../context/GlobalState\";\r\nimport history from './history';\r\nimport routes from './routes';\r\n\r\nconst Routes = (props) => (\r\n    <Router history={ history }>\r\n      <Switch>\r\n        { routes.map((route, index) => {\r\n          const { component: RouteComponent, routes, exact, path } = route;\r\n  \r\n          return <Route\r\n            exact={ exact }\r\n            key={ index }\r\n            path={ path }\r\n            render={ () => <RouteComponent { ...props } routes={ routes } /> } />;\r\n        })}\r\n      </Switch>\r\n    </Router>\r\n  );\r\nexport default Routes;\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ArrowLeftOutlined  } from '@ant-design/icons';\r\nimport { Layout, Button } from 'antd';\r\nconst { Content } = Layout;\r\nexport default function BackButton() {\r\n    const history = useHistory();\r\n    let tempalate\r\n    // Back Button\r\n    const goBack = () => {\r\n        history.goBack();\r\n    }\r\n    console.log('---',window.location.pathname )\r\n    if(window.location.pathname === \"/work-cell\"){\r\n        tempalate= null\r\n    }else{\r\n        tempalate = (<Layout className=\"layout\">\r\n        <Content style={{ padding: '0 50px' }} > \r\n          <Button type=\"primary\" className=\"back-button\" onClick={goBack} icon={<ArrowLeftOutlined  />}>Back</Button>\r\n        </Content>\r\n      </Layout>)\r\n    }\r\n    if(window.location.pathname.includes(\"/labor-review-and-posting\")){\r\n        tempalate= null\r\n    }\r\n    if(window.location.pathname === \"/labor-tracker\"){\r\n        tempalate=null\r\n    }\r\n    return (\r\n        <>\r\n            {tempalate}\r\n        </>\r\n    )\r\n}\r\n","import React, {Suspense, useContext} from 'react';\nimport './App.scss';\n// Components\nimport UiHeader from './views/UiHeader'\nimport TopNavBar  from './views/TopNavBar';\nimport Spinner from './views/Spinner'\n// Routers\nimport Routes from './routes';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n// context\nimport { GlobalContext } from \"./context/GlobalState\";\nimport { GlobalProvider } from './context/GlobalState';\n\n// Antd\nimport { Layout, Button } from 'antd';\nimport BackButton from './views/BackButton';\nconst { Content } = Layout;\n\nconst App = () => {;\n    let location = useLocation();\n    const { keyData, getKeyData, getPendingLabor,isActive, isActiveFun } = useContext(GlobalContext);\n    let {id} = useParams();\n    return (\n        <GlobalProvider>\n          <Suspense fallback={<Spinner />}> {/* Show a loader component here as a fallback*/}\n          \n          {location.pathname.includes('labor-review-and-posting') \n            ? <UiHeader for=\"supervisor\" /> \n            :<><UiHeader /><TopNavBar /></>\n          }\n              <Layout className=\"layout\">\n                <Content style={{ padding: '0 50px' }} > \n                    <Routes />\n                </Content>\n              </Layout>\n              <BackButton />\n          </Suspense>\n        </GlobalProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\n//Grid\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter } from 'react-router-dom';\n\nReactDOM.render( \n    <BrowserRouter >\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}