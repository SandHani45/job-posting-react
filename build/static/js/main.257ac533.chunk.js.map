{"version":3,"sources":["views/MainHamber/index.js","views/UiHeader/index.js","context/AppReducer.js","service/employee.js","service/pendingLabor.js","context/GlobalState.js","views/TopNavBar/index.js","views/Spinner/index.js","views/UiCard/index.js","views/UiPageHeader/index.js","constants/index.js","pages/work-cell/work-cell.js","pages/panel-shop/panel-shop.js","pages/job-posting/job-posting.js","pages/labor-activity/labor-activity.js","views/UiGrid/index.js","pages/labor-confirm/labor-confirm.js","views/UiTimerButton/index.js","views/UiGridProgress/index.js","pages/progress-timers/progress-timers.js","pages/review-timer/review-timer.js","pages/progress-time-stop/progress-time-stop.js","pages/labor-record-complete/labor-record-complete.js","views/HamberMenu/index.js","pages/labor-review-and-posting/labor-review-and-posting.js","pages/labor-review-and-posting/labor-review-and-posting-edit.js","pages/labor-review-and-posting/labor-review-and-posting-view.js","pages/labor-review-and-posting/labor-review-and-posting-add.js","routes/route-config.js","routes/routes.js","App.js","serviceWorker.js","index.js"],"names":["MainHamber","keyValue","data","history","useHistory","location","useLocation","overlay","onClick","e","key","push","pathname","Item","icon","UserOutlined","MenuOutlined","Header","Layout","UiHeader","props","Fragment","className","for","state","payload","type","workCellData","panelShop","keyData","laborActivity","laborConfirm","pendingLabor","pendingLaborRecord","startTime","isActive","laborPostingFilter","error","endPoint","getPendingLaborService","axios","get","then","res","putPendingLaborService","body","put","getLaborPostingFilterService","wOrder","filterData","_","filter","item","STATUS","initialState","jobPosting","endTime","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","keyEmpty","Provider","value","getWorkCell","getPendingLabor","getPanalShop","id","getKeyData","keyName","splice","length","getWorkOrder","DEPARTMENT_KEY","getWorkOrderService","STATUS_MESSAGE","getLaborActivityService","getLaborConfirm","serviceParams","deptKey","woNo","plantKey","wcellKey","wcenterKey","employee","getLaborConfirmService","startTimer","count","isActiveFun","getPendingLaborRecord","pendingLaborKeyData","find","o","KEY","getLaborPostingFilter","TopNavBar","useContext","track","href","to","Spinner","size","style","background","padding","UiCard","text","onClickHandler","name","span","hoverable","UiPageHeader","content","CONSTANTS","WORKCELL","JOBPOSTING","LABORCONFIRM","WORKORDER","CUSTOMER","PLANT","DEPARTMENT","WORKCELLS","EMPLOYEE","LOBARACTIVITY","WORKCELL_PROGRESS_TIMERS","LABOR_RATE","WorkCell","useState","page","useEffect","Constants","gutter","map","index","DEPARTMENT_NAME","WORK_CELL_NAME","panelShopClick","PanelShop","useParams","NAME","JobPosting","jobNumber","setJobNumber","onChange","event","target","workOrderPosting","LaborActivity","console","log","CODE","DESCRIPTION","code","PLANT_KEY","laborActivityClick","UiGrid","title","number","desc","seconds","setSeconds","setIsActive","interval","setInterval","clearInterval","xs","sm","md","lg","WO_NUMBER","WO_DESC","CUSTOMER_NAME","PLANT_NAME","EMP_NAME","offset","tempDate","Date","tempMonth","getMonth","finaleDateTime","getDate","getFullYear","join","toLocaleString","split","EMPLOYEE_KEY","WORK_CENTER_KEY","WORK_CELL_KEY","LABOR_CLASS","WORK_ORDER_NUMBER","parseInt","START_TIME","STOP_TIME","LABOR_TIME","LABOR_RATE_TYPE","post","UiTimerButton","timerHandler","time","hours","color","border","txtColor","width","height","UiGridProgress","employe","lactivity","start_time","start_time_count","employeName","wcName","woDes","styles","bold","fontWeight","colorGreen","ProgressTimers","progressDataFilter","orderBy","EMPLOYEE_NAME","WO_DESCRIPTION","Option","Select","TextArea","Input","ReviewTimer","workCellUpdate","employeeUpdate","laborActivityUpdate","apiFetchData","setApiFetchData","workOrder","workCellName","startDate","stopTime","stopDate","note","laborRecord","setLaborRecord","WORKCENTER_NAME","contentHtml","contentHtmlForEmployee","onSubmit","preventDefault","placeholder","CUST_NAME","Group","compact","defaultValue","moment","format","rows","ProgressTimeStop","undefined","INVENTORY_NUMBER","INVENTORY_NAME","DEPT_CODE","DEPT_NAME","LaborRecordComplete","withRouter","match","deleteItem","delete","message","success","setTimeout","window","reload","url","confirm","columns","dataIndex","render","record","LaborReviewAndPosting","onSelectChange","selectedRowKeys","setState","rowData","inputValue","handleClick","bind","onChangeHandler","this","catch","rowSelection","rowKey","dataSource","Component","LaborReviewAndPostingEdit","setPage","setNote","setStartTime","setStartDate","setStopTime","setStopDate","laborRate","setRaborRate","onChangeRate","contentHtmlForRate","date","use12Hours","backgroundColor","goBack","LaborReviewAndPostingView","setData","getListLaborAuditTrail","Routes","component","path","exact","LaborConfirm","Router","routes","defaultRoute","route","RouteComponent","Content","App","fallback","includes","ArrowLeftOutlined","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.257ac533.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button ,Menu, Dropdown, message } from 'antd';\r\nimport { MenuOutlined , UserOutlined } from '@ant-design/icons';\r\n// Router\r\nimport {useHistory, useLocation} from 'react-router-dom';\r\n\r\nconst MainHamber = ({keyValue,data}) => {\r\n    const history = useHistory();\r\n    let location = useLocation();\r\n    const handleMenuClick = (e) => {\r\n        if(e.key === 'add'){\r\n            history.push(`${location.pathname}-add-labor-record`);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Dropdown overlay= {\r\n                <Menu onClick={handleMenuClick}>\r\n                <Menu.Item key='add' icon={<UserOutlined />}>\r\n                    Add a Labor Record \r\n                </Menu.Item>\r\n              </Menu>\r\n            } >\r\n            <Button>\r\n                 <MenuOutlined />\r\n            </Button>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\nexport default MainHamber","import React from 'react'\r\nimport { Layout } from 'antd';\r\nimport MainHamber from './../MainHamber'\r\nconst { Header } = Layout;\r\n\r\nconst UiHeader = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Header>\r\n        <div className=\"logo\">\r\n          {\r\n            props.for === 'supervisor' \r\n              ? <div className=\"supervisor\"><MainHamber />  <h3 className=\"logo-white\">Logo</h3></div>\r\n              : <h3 className=\"logo-white\">Logo</h3>\r\n          }\r\n          \r\n        </div>\r\n      </Header>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default UiHeader\r\n","export default (state, {\r\n  payload, type\r\n}) => {\r\n    switch (type) {\r\n      case \"GET_WORK_CELL\":\r\n        return {\r\n          ...state,\r\n          workCellData: payload\r\n        };\r\n        case \"GET_PANEL_SHOP\":\r\n        return {\r\n          ...state,\r\n          panelShop: payload\r\n        };\r\n        case \"GET_KEY_DATA\":\r\n        return {\r\n          ...state,\r\n          keyData: [...state.keyData, payload]\r\n        };\r\n        case \"GET_KEY_DATA_EMPTY\":\r\n          return {\r\n            ...state,\r\n            keyData: []\r\n          };\r\n        case \"GET_WORK_ORDER\":\r\n        return {\r\n          ...state,\r\n          laborActivity: payload\r\n        };\r\n        case \"GET_LABOR_CONFIRM\":\r\n          return {\r\n            ...state,\r\n            laborConfirm: payload\r\n          };\r\n        case \"GET_PENDING_LABOR\":\r\n        return {\r\n          ...state,\r\n          pendingLabor: payload\r\n        };\r\n        case \"GET_PENDING_LABOR_RECORD\":\r\n          return {\r\n            ...state,\r\n            pendingLaborRecord: payload\r\n          };\r\n        case \"GET_START_TIME\":\r\n          return {\r\n            ...state,\r\n            startTime: payload\r\n          };\r\n        case \"GET_IS_ACTIVE\":\r\n        return {\r\n          ...state,\r\n          isActive: payload\r\n        };\r\n        case \"GET_LABOR_POSTING_FILTER\":\r\n          return {\r\n            ...state,\r\n            laborPostingFilter: payload\r\n          };\r\n        case \"ERROR\":\r\n          return {\r\n            ...state,\r\n            error: payload\r\n          };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import axios from 'axios';\r\nconst endPoint = \"http://34.206.72.199:3010/api/pc\"\r\nexport const getWorkCellService = () => {\r\n    return axios.get(`${endPoint}/workCells/`).then((res) => res.data);\r\n};\r\nexport const getWorkCellIdService = (id) => {\r\n    return axios.get(`${endPoint}/workCells/${id}`).then((res) => res.data);\r\n};\r\nexport const getPanelShopService = (id) => {\r\n    return axios.get(`${endPoint}/employee/${id}`).then((res) => res.data);\r\n};\r\nexport const getWorkOrderService = (id) => {\r\n    return axios.get(`${endPoint}/checkWorkOrder/${id}`).then((res) => res.data);\r\n};\r\nexport const getLaborActivityService = (key,id) => {\r\n    return axios.get(`${endPoint}/laborActivity/${key}/${id}`).then((res) => res.data);\r\n};\r\n// export const getLaborConfirmService = ({deptKey, woNo, plantKey, wcellKey, wcenterKey, employee}) => {\r\n//     return axios.get(`${endPoint}/laborConfirm/${deptKey}/${woNo}/${plantKey}/${wcellKey}/${wcenterKey}/${employee}`).then((res) => res.data);\r\n// };\r\n// demo \r\nexport const getLaborConfirmService = ({deptKey, woNo, plantKey, wcellKey, wcenterKey, employee}) => {\r\n    return axios.get(`${endPoint}/laborConfirm/31/3443151/97/2/157/55`).then((res) => res.data);\r\n};\r\n","import axios from 'axios';\r\nimport _ from 'lodash'\r\nconst endPoint = \"http://34.206.72.199:3010/api/pc\"\r\n// Pending Labor\r\n//get\r\nexport const getPendingLaborService = () => {\r\n    return axios.get(`${endPoint}/pendingLabor`).then((res) => res.data);\r\n}\r\n//get:id\r\nexport const getProgressTimeStopService = (key) => {\r\n    return axios.get(`${endPoint}/pendingLabor/${key}`).then((res) => res.data);\r\n}\r\n//post\r\nexport const postPendingLaborService = (body) => {\r\n    return axios.post(`${endPoint}/pendingLabor`, body).then((res) => res.data);\r\n}\r\n\r\n// put\r\nexport const putPendingLaborService = (key, body) => {\r\n    return axios.put(`${endPoint}/pendingLabor/${key}`, body).then((res) => res.data);\r\n}\r\n\r\n// Delete\r\nexport const deletePendingLaborService = (key) => {\r\n    return axios.delete(`${endPoint}/pendingLabor/${key}`).then((res) => res.data);\r\n}\r\n\r\n// getLaborPostingFilter\r\nexport const getLaborPostingFilterService = (wOrder) => {\r\n    let filterData = {\r\n        wOrder:wOrder\r\n    }\r\n    return axios.get(`${endPoint}/pendingLabor/${' '}/${' '}/${filterData.wOrder}`).then((res) => {\r\n        return _.filter(res.data, function(item) { \r\n            if(item.STATUS === \"I\"){\r\n                return item\r\n            }\r\n         });\r\n    });\r\n}\r\n\r\n// listLaborAuditTrail\r\nexport const getListLaborAuditTrail = (id) => {\r\n    return axios.get(`${endPoint}/listLaborAuditTrail/${id}`).then((res) => res.data);\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport _ from 'lodash'\r\nimport AppReducer from \"./AppReducer\";\r\nimport { \r\n    getWorkCellService, \r\n    getPanelShopService, \r\n    getWorkOrderService,\r\n    getLaborActivityService,\r\n    getLaborConfirmService \r\n} from './../service/employee'\r\nimport {getPendingLaborService ,getLaborPostingFilterService} from './../service/pendingLabor'\r\nconst initialState = {\r\n  workCellData:[],\r\n  panelShop:[],\r\n  jobPosting:[],\r\n  keyData:[],\r\n  laborActivity: [],\r\n  laborConfirm: {},\r\n  pendingLabor:{},\r\n  startTime:0,\r\n  endTime:null,\r\n  isActive:false,\r\n  pendingLaborRecord:{},\r\n  laborPostingFilter:{},\r\n  error:{}\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const getWorkCell = () => {\r\n    getWorkCellService().then((res)=>{\r\n        dispatch({\r\n            type: \"GET_WORK_CELL\",\r\n            payload: res\r\n        });\r\n    })\r\n  }\r\n\r\n  const getPanalShop = (key) => {\r\n    getPanelShopService(key).then((res)=>{\r\n        dispatch({\r\n            type: \"GET_PANEL_SHOP\",\r\n            payload: res\r\n        });\r\n    })\r\n  }\r\n\r\n  const getWorkOrder = (id) => {\r\n    let key = state.keyData[0].DEPARTMENT_KEY\r\n    getWorkOrderService(id).then((res)=>{\r\n        if(res[0].STATUS_MESSAGE === null){\r\n            getLaborActivityService(key,id).then((res)=>{\r\n                dispatch({\r\n                    type: \"GET_WORK_ORDER\",\r\n                    payload: res\r\n                });\r\n            })\r\n        }else{\r\n          dispatch({\r\n            type: \"ERROR\",\r\n            payload: res\r\n        });\r\n       }\r\n    })\r\n  }\r\n\r\n  const getLaborConfirm = (serviceParams) => {\r\n    getLaborConfirmService(serviceParams).then((res)=>{\r\n        dispatch({\r\n          type: \"GET_LABOR_CONFIRM\",\r\n          payload: res\r\n      });\r\n    })\r\n  }\r\n\r\n  const getProgressTimeStop = (key) => {\r\n    getProgressTimeStop(key).then((res)=>{\r\n        dispatch({\r\n          type: \"GET_PROGRESS_TIME_STOP\",\r\n          payload: res\r\n      });\r\n    })\r\n  }\r\n  \r\n  const getKeyData = (keyName, keyValue) => {\r\n    if(keyName === 'workcell'){\r\n      keyEmpty()\r\n      dispatch({\r\n        type: \"GET_KEY_DATA\",\r\n        payload: keyValue\r\n      });\r\n    };\r\n    if(keyName === 'panel_shop'){\r\n      let data = state.keyData\r\n      data.splice(1, data.length-1);\r\n      dispatch({\r\n        type: \"GET_KEY_DATA\",\r\n        payload: keyValue\r\n      });\r\n    }\r\n    if(keyName === 'post_labor'){\r\n      let data = state.keyData\r\n      data.splice(2, data.length-1);\r\n      dispatch({\r\n        type: \"GET_KEY_DATA\",\r\n        payload: keyValue\r\n      });\r\n    }\r\n    if(keyName === 'work_center'){\r\n      let data = state.keyData\r\n      data.splice(3, data.length-1);\r\n      dispatch({\r\n        type: \"GET_KEY_DATA\",\r\n        payload: keyValue\r\n      });\r\n    }\r\n  }\r\n\r\n  const keyEmpty = () =>{\r\n    dispatch({\r\n        type: \"GET_KEY_DATA_EMPTY\",\r\n        payload: []\r\n    });\r\n  }\r\n  \r\n  const getPendingLabor = () => {\r\n    getPendingLaborService().then((res)=>{\r\n      dispatch({\r\n        type: \"GET_PENDING_LABOR\",\r\n        payload: res\r\n      });\r\n    })\r\n  }\r\n\r\n  const startTimer = (count) => {\r\n    dispatch({\r\n      type: \"GET_START_TIME\",\r\n      payload: count\r\n    });\r\n  }\r\n\r\n  const isActiveFun = (value) => {\r\n    dispatch({\r\n      type: \"GET_IS_ACTIVE\",\r\n      payload: value\r\n    });\r\n  }\r\n// laborPending\r\n  const getPendingLaborRecord = (id) => {\r\n    getPendingLaborService(id).then((res)=>{\r\n      let pendingLaborKeyData = _.find(res, function(o) { \r\n        if(o.KEY == id){\r\n            return o\r\n        }\r\n      });\r\n      dispatch({\r\n        type: \"GET_PENDING_LABOR_RECORD\",\r\n        payload: pendingLaborKeyData\r\n      });\r\n    })\r\n  }\r\n// labor review posting \r\n  const getLaborPostingFilter = (wOrder) => {\r\n    getLaborPostingFilterService(wOrder).then((res)=>{\r\n      dispatch({\r\n        type: \"GET_LABOR_POSTING_FILTER\",\r\n        payload: res\r\n      });\r\n    })\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        workCellData: state.workCellData,\r\n        panelShop: state.panelShop,\r\n        keyData: state.keyData,\r\n        laborActivity: state.laborActivity,\r\n        laborConfirm:state.laborConfirm,\r\n        pendingLabor:state.pendingLabor,\r\n        startTime:state.startTime,\r\n        endTime:state.endTime,\r\n        isActive:state.isActive,\r\n        pendingLaborRecord:state.pendingLaborRecord,\r\n        laborPostingFilter:state.laborPostingFilter,\r\n        error:state.error,\r\n        getWorkCell,\r\n        getPendingLabor,\r\n        getPanalShop,\r\n        getKeyData,\r\n        getWorkOrder,\r\n        getLaborConfirm,\r\n        keyEmpty,\r\n        startTimer,\r\n        isActiveFun,\r\n        getPendingLaborRecord,\r\n        getLaborPostingFilter\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};","import React, {useContext} from 'react'\r\nimport { Breadcrumb } from 'antd';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport {  useLocation } from 'react-router-dom';\r\nimport { GlobalContext } from \"./../../context//GlobalState\";\r\nimport './topNavBar.scss'\r\nfunction TopNavBar() {\r\n  const { keyData } = useContext(GlobalContext);\r\n  let location = useLocation();\r\n  let track = keyData.length > 0 ? `/panel-shop/${keyData[0].DEPARTMENT_KEY}` :'/'\r\n    return (\r\n        <div className=\"main-flex\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>\r\n              <a href=\"\">Application Center</a>\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div>\r\n            {location.pathname !== '/progress-timers' ? \r\n              <Link to=\"/progress-timers\">See All In Progress</Link> \r\n              : <Link to={track}>Track Another Job in this Work Cell</Link> \r\n              }\r\n              \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopNavBar;","import React from 'react'\r\nimport { Spin } from 'antd';\r\nimport './spinner.scss'\r\nconst Spinner = () => {\r\n    return (\r\n        <section className=\"spinner\">\r\n            <Spin size=\"large\" />\r\n        </section>\r\n    )\r\n}\r\nexport default Spinner","import React from 'react'\r\nimport { Card, Col } from 'antd';\r\nimport './ui-card.scss'\r\nconst style = { background: '#bfbfbf', padding: '8px 0' };\r\nfunction UiCard(props) {\r\n  const { text, onClickHandler, name} = props\r\n  return (\r\n    <React.Fragment>\r\n      <Col className=\"gutter-row\" span={6}>\r\n        <Card\r\n          hoverable\r\n          style={style}\r\n          className=\"card-body\" \r\n          onClick={onClickHandler}\r\n        >\r\n          <p  >{text}   </p>\r\n          <p>{name}</p>\r\n        </Card>\r\n      </Col>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default UiCard\r\n","import React from 'react'\r\n\r\nexport default function UiPageHeader(props) {\r\n    const {content} = props\r\n    return (\r\n        <div className=\"main-title\">\r\n          <h3>{content}</h3>\r\n        </div>\r\n    )\r\n}\r\n","const CONSTANTS = {\r\n    WORKCELL: 'CLock in to a Work Cell',\r\n    JOBPOSTING: 'Which Job Are You Posting Labor To',\r\n    LABORCONFIRM:'Post Labor To',\r\n    WORKORDER:'Work Order',\r\n    CUSTOMER:'Customer',\r\n    PLANT:'Plant',\r\n    DEPARTMENT:'Department',\r\n    WORKCELLS:'Work Cell',\r\n    EMPLOYEE:'Employee',\r\n    LOBARACTIVITY: 'Labor Activity',\r\n    WORKCELL_PROGRESS_TIMERS: 'Work Cell Panal Shop In Progress Timers ',\r\n    LABOR_RATE:[\r\n      \"Standard Rate\",\r\n      \"Standard Rate 2\",\r\n      \"Standard Rate 3\",\r\n      \"Standard Rate 4\"\r\n    ]\r\n  };\r\n  \r\n  export default CONSTANTS;","import React, { useState, useEffect, useContext } from 'react';\r\n//components\r\nimport UiCard from './../../views/UiCard'\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport Spinner from './../../views/Spinner'\r\n//Constants\r\nimport Constants from './../../constants'\r\n// Router\r\nimport {useHistory} from 'react-router-dom';\r\n//antd\r\nimport { Row } from 'antd';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n\r\nconst WorkCell = () => {\r\n  const [page, setPage] = useState(1);\r\n  const { getWorkCell, workCellData , getKeyData, getPanalShop} = useContext(GlobalContext);\r\n  const history = useHistory();\r\n    useEffect(() => {\r\n      getWorkCell()\r\n    }, [page]);\r\n\r\n  const panelShopClick = (key) => {\r\n    let data = workCellData\r\n    let keyValue;\r\n    data.map(item=>{\r\n        if(item.DEPARTMENT_KEY === key){\r\n            keyValue =  item\r\n        }\r\n    })\r\n    getPanalShop(key)\r\n    getKeyData('workcell', keyValue)\r\n    history.push(`/panel-shop/${key}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UiPageHeader content={Constants.WORKCELL} />\r\n      <Row gutter={16}>\r\n        {workCellData.length >= 1 ? workCellData.map((item, index)=>{\r\n          return <UiCard key={item.KEY } text={item.DEPARTMENT_NAME} name={item.WORK_CELL_NAME} onClickHandler={() => panelShopClick(item.DEPARTMENT_KEY)}/>\r\n        }) : <Spinner />}\r\n      </Row>\r\n    </>\r\n  ); \r\n}\r\n\r\nexport default WorkCell;","import React, {useState,useEffect, useContext} from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n//components\r\nimport UiCard from './../../views/UiCard'\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\n//Constants\r\nimport Constants from './../../constants'\r\n// Antd\r\nimport { Row } from 'antd';\r\nimport {useHistory} from 'react-router-dom';\r\n// context\r\nimport { GlobalContext } from \"./../../context//GlobalState\";\r\n\r\nconst PanelShop = (props) => {\r\n    const { panelShop , getKeyData ,keyData} = useContext(GlobalContext);\r\n    let { id } = useParams();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n      if(keyData.length  === 0){\r\n        history.push(`/work-cell`)\r\n      }\r\n    }, [1]);\r\n\r\n    function jobPosting (key) {\r\n      let data = panelShop\r\n      let keyValue;\r\n      data.map(item=>{\r\n          if(item.EMPLOYEE === key){\r\n              keyValue =  item\r\n          }\r\n      })\r\n      getKeyData('panel_shop',keyValue)\r\n      history.push(`/job-posting-employee/${key}`);\r\n    };\r\n  \r\n    return (\r\n        <>\r\n        <UiPageHeader content={Constants.WORKCELL} />\r\n          <Row gutter={16}>\r\n            {panelShop.length >= 1 ? panelShop.map((item, index)=>{\r\n              return <UiCard key={index } text={`#${item.EMPLOYEE}`} name={item.NAME} onClickHandler={() => jobPosting(item.EMPLOYEE)}/>\r\n            }):  null}\r\n          </Row>\r\n        </>\r\n    )\r\n}\r\nexport default PanelShop","import React, {useState,useEffect, useContext} from 'react'\r\nimport { useParams, useHistory} from \"react-router-dom\";\r\n//components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\nimport './job-posting.scss'\r\nimport { Input, Button  } from 'antd';\r\n\r\nconst JobPosting = (props) => {\r\n    let { id } = useParams();\r\n    const [page, setPage] = useState(1);\r\n    const [jobNumber, setJobNumber] = useState();\r\n    const { keyData, getWorkOrder, getKeyData} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(keyData.length  === 0){\r\n            history.push(`/work-cell`)\r\n          }\r\n      }, [page]);\r\n\r\n    function onChangeHandler(event) {\r\n        setJobNumber(event.target.value)\r\n    }\r\n\r\n    const onSubmitHandler = () => {\r\n        let workOrderPosting = {\r\n            workOrderPosting:jobNumber\r\n        }\r\n        getWorkOrder(jobNumber)\r\n        getKeyData('post_labor', workOrderPosting)\r\n        history.push(`/labor-activity/${jobNumber}`);\r\n    }\r\n    return (\r\n        <>\r\n            <UiPageHeader content={Constants.JOBPOSTING} />\r\n            <div className=\"job-posting\">\r\n                <div>\r\n                    WO #\r\n                </div>\r\n                <div>\r\n                    <Input onChange={onChangeHandler} />\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" onClick={onSubmitHandler}>Enter</Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default JobPosting","\r\nimport React, {useContext, useEffect} from 'react'\r\n//components\r\nimport UiCard from './../../views/UiCard'\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\n// Antd\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Row } from 'antd';\r\n\r\n\r\n const LaborActivity = (props) => {\r\n    const { keyData, laborActivity, getKeyData, getLaborConfirm} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n      if(keyData.length  === 0){\r\n          history.push(`/work-cell`)\r\n        }\r\n    }, [1]);\r\n\r\n    const laborActivityClick = (code) => {\r\n      let data = laborActivity\r\n      let keyValue;\r\n      data.map(item=>{\r\n          if(item.CODE === code){\r\n              keyValue =  item\r\n          }\r\n      })\r\n      let serviceParams = {\r\n        deptKey : keyData[0].DEPARTMENT_KEY,\r\n        woNo:keyData[2].workOrderPosting,\r\n        plantKey:keyData[0].PLANT_KEY,\r\n        wcellKey:keyData[0].KEY,\r\n        wcenterKey:keyValue.KEY,\r\n        employee:keyValue.CODE\r\n      }\r\n      getLaborConfirm(serviceParams);\r\n      getKeyData('work_center', keyValue)  \r\n      history.push(`/labor-confirm`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <UiPageHeader content={Constants.WORKCELL} />\r\n        {console.log(laborActivity)}\r\n          <Row gutter={16}>\r\n            {laborActivity.length > 0 ? laborActivity.map((item, index)=>{\r\n              return <UiCard \r\n                        key={index }  \r\n                        text={`#${item.CODE}`} \r\n                        name={item.DESCRIPTION} \r\n                        onClickHandler={() => laborActivityClick(item.CODE)}\r\n                      />\r\n            }): 'No Data'}\r\n          </Row>\r\n        </>\r\n    )\r\n}\r\nexport default LaborActivity","\r\nimport React from 'react'\r\nfunction UiGrid({title,number,desc, children}) {\r\n    return (\r\n    <React.Fragment>\r\n        <div className=\"ui-grid\">\r\n            <p>{title}</p>\r\n            <p>{number || children}</p>\r\n            <p>{desc}</p>\r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nexport default UiGrid\r\n            ","\r\nimport React, {useContext,useState,useEffect} from 'react'\r\n//components\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiPageHeader from './../../views/UiPageHeader';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\nimport _ from 'lodash'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Button,Row, Col } from 'antd';\r\n//SCSS\r\nimport './labor-confirm.scss'\r\n// service\r\nimport { postPendingLaborService } from './../../service/pendingLabor'\r\n\r\n const LaborActivity = (props) => {\r\n    const { keyData , getPendingLabor,startTime,laborActivity,startTimer, laborConfirm} = useContext(GlobalContext);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(keyData.length  === 0){\r\n            history.push(`/work-cell`)\r\n          }\r\n        let interval = null;\r\n        if (isActive) {\r\n          interval = setInterval(() => {\r\n            setSeconds(seconds => seconds + 1);\r\n            startTimer(seconds)\r\n          }, 1000);\r\n        } else if (!isActive && seconds !== 0) {\r\n          clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n      }, [isActive, seconds]);\r\n     \r\n    const startHandler = () => {\r\n        // Date and Time Conveter script\r\n        setIsActive(!isActive)\r\n        let tempDate = new Date()\r\n        let months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \r\n        \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n        let tempMonth = months[tempDate.getMonth()]\r\n        let finalDate = [tempDate.getDate(), tempMonth, tempDate.getFullYear()].join('-')\r\n        let tempTime = new Date().toLocaleString('en-GB');\r\n        let splitTime = tempTime.split(',')\r\n        let time = splitTime[1]\r\n        let finaleDateTime = [finalDate,time].join(' ')\r\n        let serviceParams = {\r\n            PLANT_KEY: keyData[0].PLANT_KEY,\r\n            DEPARTMENT_KEY: keyData[0].DEPARTMENT_KEY,\r\n            EMPLOYEE_KEY: keyData[1].EMPLOYEE,\r\n            WORK_CENTER_KEY: keyData[3].KEY,\r\n            WORK_CELL_KEY: keyData[0].KEY,\r\n            LABOR_CLASS: null,\r\n            WORK_ORDER_NUMBER: parseInt(keyData[2].workOrderPosting),\r\n            START_TIME: finaleDateTime,\r\n            STOP_TIME: null,\r\n            LABOR_TIME: null,\r\n            LABOR_RATE_TYPE: null,\r\n            STATUS: \"I\"\r\n        }\r\n        postPendingLaborService(serviceParams).then(res=>{\r\n            history.push('/progress-timers')\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n        {laborConfirm.length > 0 ? \r\n            <>  \r\n                <UiPageHeader content={Constants.LABORCONFIRM} />\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col className=\"gutter-row\" span={24}>\r\n                    <div>\r\n                        <UiGrid title={Constants.WORKORDER} number={laborConfirm[0].WO_NUMBER} desc={laborConfirm[0].WO_DESC} />\r\n                        <UiGrid title={Constants.CUSTOMER} number={laborConfirm[0].CUSTOMER} desc={laborConfirm[0].CUSTOMER_NAME}/>\r\n                        <UiGrid title={Constants.PLANT} number={laborConfirm[0].PLANT} desc={laborConfirm[0].PLANT_NAME} />\r\n                        <UiGrid title={Constants.DEPARTMENT} number='' desc=\"\" />\r\n                        <UiGrid title={Constants.WORKCELLS} number='' desc={laborConfirm[0].NAME} />\r\n                        <UiGrid title={Constants.EMPLOYEE} number={laborConfirm[0].EMPLOYEE} desc={laborConfirm[0].EMP_NAME} />\r\n                        <UiGrid title={Constants.LOBARACTIVITY}  number={laborConfirm[0].CODE} desc={laborConfirm[0].DESCRIPTION} />\r\n                    </div>\r\n                    </Col>\r\n                    \r\n                    <Col className=\"gutter-row\" offset={8} span={8}>\r\n                        <div ><Button type=\"primary\" className=\"start-button green\" onClick={startHandler} >Start Tracking</Button> </div>\r\n                    </Col>\r\n                </Row>\r\n            </> : null }\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default LaborActivity","\r\nimport React from 'react'\r\nimport './ui-timer-buuton.scss'\r\n// context\r\nfunction UiTimerButton(props) {\r\n\r\n    const { timerHandler,name,time,hours, color, border,txtColor, width, height} = props\r\n    return (\r\n    <React.Fragment>\r\n       <div className=\"ui-timer-button\" \r\n            style={{background:color, border:`1px solid ${border}`,color:txtColor,width:width,height:height}} \r\n            onClick={timerHandler}>\r\n            <p>{name}</p>\r\n            <p>{time}</p>\r\n            <p>{hours}</p>\r\n       </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nexport default UiTimerButton\r\n            ","\r\nimport React from 'react'\r\nimport UiTimerButton from './../UiTimerButton'\r\n//antd\r\nimport { Row,Col } from 'antd';\r\nimport './ui-grid-progress.scss'\r\nfunction UiGridProgress(props) {\r\n    const { employe,wOrder,lactivity,start_time,start_time_count, employeName,wcName,woDes, timerHandler} = props;\r\n    const style = {  padding: '8px 0' };\r\n    const styles = {\r\n        bold:{\r\n            fontWeight:'bold'\r\n        },\r\n        colorGreen:{\r\n            color:'green',\r\n            padding: '8px 0',\r\n            fontWeight: '500'\r\n        }\r\n    }\r\n    return (\r\n    <React.Fragment>\r\n         <div className=\"ui-grid-progress\" >\r\n            <hr></hr>\r\n            <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                <Col className=\"gutter-row\" span={3}>\r\n                    <div style={style} >\r\n                        <p>Employee</p>\r\n                        <p>Work Order</p>\r\n                        <p>Labor Activity</p>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={3}>\r\n                    <div style={styles.bold} className=\"ui-grid-progress__grid\">\r\n                        <p>{employe}</p>\r\n                        <p>{wOrder}</p>\r\n                        <p>{lactivity}</p>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={8}>\r\n                    <div style={style} className=\"ui-grid-progress__grid\">\r\n                        <p style={styles.bold}>{employeName}</p>\r\n                        <p>{woDes} </p>\r\n                        <p style={styles.bold}>{wcName} </p>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={4}>\r\n                    <div className=\"ui-grid-progress__grid\">\r\n                        <p style={styles.colorGreen}>Start Time</p>\r\n                        <p style={styles.bold}>{start_time}</p>\r\n                    </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" span={6}>\r\n                    <div style={style} className=\"ui-grid-progress__grid\">\r\n                        <UiTimerButton name=\"Elasped\" time={start_time_count} hours='HoursMinutes' color=\"green\" timerHandler={timerHandler}/>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\nexport default UiGridProgress\r\n            ","import React, { useState, useEffect, useContext } from 'react';\r\n//components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport UiTimerButton from './../../views/UiTimerButton'\r\nimport UiGridProgress from './../../views/UiGridProgress'\r\nimport Spinner from './../../views/Spinner'\r\n// Router\r\nimport {useHistory} from 'react-router-dom';\r\n//Constants\r\nimport Constants from './../../constants'\r\n//antd\r\nimport { Row,Col } from 'antd';\r\n// context\r\nimport { GlobalContext } from \"./../../context//GlobalState\";\r\nimport _ from 'lodash';\r\nimport moment from 'moment'\r\n\r\nconst ProgressTimers = () => {\r\n  const { getPendingLabor , pendingLabor, startTime} = useContext(GlobalContext);\r\n  const [page, setPage] = useState(1);\r\n  const history = useHistory();\r\n    useEffect(() => {\r\n      getPendingLabor()\r\n    }, [page]);\r\n    const timerHandler = (key) =>{\r\n      history.push(`/progress-time-stop/${key}`)\r\n    }\r\n    const progressDataFilter = pendingLabor.length > 0 ? _.orderBy(pendingLabor, ['KEY'], ['desc']) : null\r\n  return (\r\n    <>\r\n        <UiPageHeader content={Constants.WORKCELL_PROGRESS_TIMERS} />\r\n        {progressDataFilter ? progressDataFilter.map((item, index)=>{\r\n          let itemStartTime = _.split(item.START_TIME, ' ');\r\n          let time = itemStartTime[1]\r\n          return  <UiGridProgress \r\n                    key={index} \r\n                    employe={item.EMPLOYEE_KEY} \r\n                    wOrder={item.WORK_ORDER_NUMBER} \r\n                    lactivity=\"22\" \r\n                    start_time={time}\r\n                    start_time_count={startTime}\r\n                    employeName={item.EMPLOYEE_NAME}\r\n                    wcName={item.WORK_CELL_NAME}\r\n                    woDes={item.WO_DESCRIPTION}\r\n                    timerHandler={() => timerHandler(item.KEY)} \r\n                  />\r\n        }) :  <Spinner />}\r\n      \r\n    </>\r\n  ); \r\n}\r\n\r\nexport default ProgressTimers;","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Radio,\r\n    Select,\r\n    Input,\r\n    Col,\r\n    DatePicker,\r\n    TimePicker,\r\n    Row,\r\n    Button\r\n  } from 'antd';\r\n\r\nimport moment from 'moment';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\r\n  //components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiTimerButton from './../../views/UiTimerButton'\r\n//Constants\r\nimport Constants from './../../constants'\r\n//scss \r\nimport './review-timer.scss'\r\n  // service\r\nimport { putPendingLaborService } from './../../service/pendingLabor'\r\n  const { Option } = Select;\r\n  const format = 'HH:mm';\r\n  const { TextArea } = Input;\r\n  const dateFormat = 'YYYY/MM/DD';\r\nconst ReviewTimer = () => {\r\n  const history = useHistory();\r\n  const {pendingLaborRecord,panelShop, workCellData, getWorkCell, getPanalShop } = useContext(GlobalContext);\r\n  const [page, setPage] = useState(1);\r\n  const [apiFetchData, setApiFetchData] = useState({\r\n    workCellUpdate:{},\r\n    employeeUpdate:{},\r\n    laborActivityUpdate:{}\r\n  });\r\n  const [laborRecord, setLaborRecord] = useState({\r\n      workOrder: \"\",\r\n      workCellName: \"\",\r\n      employee: \"\",\r\n      laborActivity: \"\",\r\n      startTime: \"\",\r\n      startDate:\"\",\r\n      stopTime:'',\r\n      stopDate:'',\r\n      note:''\r\n    });\r\n    useEffect(() => {\r\n      getWorkCell()\r\n      setLaborRecord({\r\n        workOrder:pendingLaborRecord.WORK_ORDER_NUMBER,\r\n        workCellName: pendingLaborRecord.WORK_CELL_NAME,\r\n        employee: pendingLaborRecord.EMPLOYEE_NAME,\r\n        laborActivity: pendingLaborRecord.WORKCENTER_NAME,\r\n        startTime: \"\",\r\n        startDate:\"\",\r\n        stopTime:'',\r\n        stopDate:''\r\n      })\r\n    }, [page]);\r\n    const onChange = (e) => {\r\n      setLaborRecord({ [e.target.name]: e.target.value });\r\n    }\r\n    const onChangeWorkCell = (e) => {\r\n      if(e !== laborRecord.WORK_CELL_NAME ){\r\n        workCellData.map(item =>{\r\n          if(item.WORK_CELL_NAME === e){\r\n            getPanalShop(item.DEPARTMENT_KEY)\r\n            setApiFetchData({employeeUpdate:panelShop})\r\n          }\r\n        })\r\n      }\r\n    }\r\n    const completeStartNew = () =>{\r\n      history.push('/')\r\n    }\r\n    const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      let serviceParams = {\r\n          PLANT_KEY: pendingLaborRecord.PLANT_KEY,\r\n          DEPARTMENT_KEY: pendingLaborRecord.DEPARTMENT_KEY,\r\n          EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n          WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n          WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n          LABOR_CLASS: null,\r\n          WORK_ORDER_NUMBER: pendingLaborRecord.WORK_ORDER_NUMBER,\r\n          START_TIME: pendingLaborRecord.START_TIME,\r\n          STOP_TIME: pendingLaborRecord.STOP_TIME,\r\n          LABOR_TIME: null,\r\n          LABOR_RATE_TYPE: null,\r\n          STATUS: \"C\"\r\n      }\r\n      putPendingLaborService(pendingLaborRecord.KEY, serviceParams).then((res)=>{\r\n        history.push(`/labor-record-complete/${pendingLaborRecord.KEY}`)\r\n      })\r\n    }\r\n    const contentHtml = <>\r\n      {workCellData.length > 0 ? workCellData.map((item, index)=><Option key={index} value={item.WORK_CELL_NAME} >{item.WORK_CELL_NAME}</Option>) : null}\r\n    </>;\r\n     const contentHtmlForEmployee = <>\r\n      {panelShop.length > 0 ? panelShop.map((item, index)=><Option key={index} value={item.NAME} >{item.NAME}</Option>) : null}\r\n    </>;\r\n    \r\n    return (\r\n      <>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n      <form onSubmit={onSubmit} className=\"labor-record-form\">\r\n        <Col className=\"gutter-row\" span={12}>\r\n          <div>\r\n            {console.log(apiFetchData)}\r\n            <UiPageHeader content={Constants.WORKCELL_PROGRESS_TIMERS} />\r\n            <UiGrid title=\"Work Order\" desc=\"SMS PRESS HIGHT  VOLATAGE\">\r\n              <Input placeholder=\"\" name=\"workOrder\" value={pendingLaborRecord.WORK_ORDER_NUMBER} onChange={onChange} />\r\n            </UiGrid>\r\n            <UiGrid title=\"Customar \" number={pendingLaborRecord.CUST_NAME} desc=\"SMS PRESS HIGHT  VOLATAGE\" />\r\n            <UiGrid title=\"Plant \" number={pendingLaborRecord.PLANT_KEY} desc=\"Electrical\" />\r\n            <UiGrid title=\"Departement \" number={pendingLaborRecord.DEPARTMENT_KEY} desc=\"Panel Shop\" />\r\n            <UiGrid title=\"Work Cell\" >\r\n              <Input.Group compact>\r\n                <Select defaultValue={pendingLaborRecord.WORK_CELL_NAME} name=\"workCellName\" onChange={onChangeWorkCell}>\r\n                  {contentHtml}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Employee\" >\r\n              <Input.Group compact>\r\n                <Select defaultValue={apiFetchData.employeeUpdate.length > 0 ?  '': pendingLaborRecord.EMPLOYEE_NAME}  name=\"employee\">\r\n                  {contentHtmlForEmployee}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Activity\" >\r\n              <Input.Group compact>\r\n              <Select defaultValue={pendingLaborRecord.WORKCENTER_NAME} name=\"laborActivity\">\r\n                <Option value={pendingLaborRecord.WORKCENTER_NAME} onChange={onChange}>{pendingLaborRecord.WORKCENTER_NAME}</Option>\r\n              </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Start Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact >\r\n                    <DatePicker name=\"startDate\" defaultValue={moment('2015/01/01', dateFormat)} format={dateFormat}/>\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker name=\"startTime\" defaultValue={moment(pendingLaborRecord.START_TIME, format)} format={format} />\r\n                </div>\r\n                <div>\r\n                  <Radio.Group>\r\n                    <Radio value=\"a\">AM</Radio>\r\n                    <Radio value=\"b\">PM</Radio>\r\n                  </Radio.Group>\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Stop Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact>\r\n                    <DatePicker name=\"stopDate\"/>\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker name=\"stopTime\" defaultValue={moment(pendingLaborRecord.STOP_TIME, format)} format={format} />\r\n                </div>\r\n                <div>\r\n                  <Radio.Group>\r\n                    <Radio value=\"a\">AM</Radio>\r\n                    <Radio value=\"b\">PM</Radio>\r\n                  </Radio.Group>\r\n                </div>\r\n\r\n              </div>\r\n            </UiGrid>\r\n        <UiGrid title=\"Labor Hours \" number={pendingLaborRecord.LABOR_TIME} />\r\n          </div>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={12}>\r\n          <div >\r\n            <p>Note *</p>\r\n            <TextArea rows={4} name=\"note\" onChange={onChange}/>\r\n          </div>\r\n          <div className=\"check-time-button\">\r\n            <input type=\"submit\" className=\"time-button yellow\" value=\"Complete Tracking\" />\r\n            <Button type=\"primary\" className=\"time-button\" onClick={completeStartNew} >Complete Tracking And Start New Job</Button>  \r\n          </div>\r\n        </Col>\r\n        </form>\r\n    </Row>\r\n      </>\r\n    )\r\n}\r\nexport default ReviewTimer","\r\nimport React, {useContext,useState, useEffect} from 'react'\r\n//components\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiPageHeader from './../../views/UiPageHeader';\r\nimport UiTimerButton from './../../views/UiTimerButton'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\nimport _ from 'lodash'\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { Button,Row, Col } from 'antd';\r\n\r\n// service\r\nimport { putPendingLaborService } from './../../service/pendingLabor'\r\n\r\n const ProgressTimeStop = (props) => {\r\n    const {keyData, pendingLaborRecord, getPendingLaborRecord } = useContext(GlobalContext);\r\n    let { id } = useParams();\r\n    const [page, setPage] = useState(0);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getPendingLaborRecord(id)\r\n      }, [page]);\r\n\r\n \r\n    const stopTimer = () =>{\r\n        let tempDate = new Date()\r\n        let months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \r\n        \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\r\n        let tempMonth = months[tempDate.getMonth()]\r\n        let finalDate = [tempDate.getDate(), tempMonth, tempDate.getFullYear()].join('-')\r\n        let tempTime = new Date().toLocaleString('en-GB');\r\n        let splitTime = tempTime.split(',')\r\n        let time = splitTime[1]\r\n        let stopTime = [finalDate, time].join(' ')\r\n        let serviceParams = {\r\n            PLANT_KEY: pendingLaborRecord.PLANT_KEY,\r\n            DEPARTMENT_KEY: pendingLaborRecord.DEPARTMENT_KEY,\r\n            EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n            WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n            WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n            LABOR_CLASS: null,\r\n            WORK_ORDER_NUMBER: pendingLaborRecord.WORK_ORDER_NUMBER,\r\n            START_TIME: pendingLaborRecord.START_TIME,\r\n            STOP_TIME: stopTime,\r\n            LABOR_TIME: null,\r\n            LABOR_RATE_TYPE: null,\r\n            STATUS: \"I\"\r\n        }\r\n\r\n        putPendingLaborService(id, serviceParams).then((res)=>{\r\n            if(res){\r\n                history.push('/review-timer')\r\n            }\r\n        })\r\n        // history.push('/review-timer')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { pendingLaborRecord !== undefined ?\r\n                <> \r\n                    <UiPageHeader content={Constants.LABORCONFIRM} />\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col className=\"gutter-row\" span={24}>\r\n                        <div>\r\n                            <UiGrid title={Constants.WORKORDER} number={pendingLaborRecord.WORK_ORDER_NUMBER} desc={pendingLaborRecord.WO_DESCRIPTION} />\r\n                            <UiGrid title={Constants.CUSTOMER} number={pendingLaborRecord.CUST_NAME} />\r\n                            <UiGrid title={Constants.PLANT} number={pendingLaborRecord.INVENTORY_NUMBER} desc={pendingLaborRecord.INVENTORY_NAME} />\r\n                            <UiGrid title={Constants.DEPARTMENT} number={pendingLaborRecord.DEPT_CODE} desc={pendingLaborRecord.DEPT_NAME} />\r\n                            <UiGrid title={Constants.WORKCELLS} number={pendingLaborRecord.WORK_CELL_KEY} desc={pendingLaborRecord.WORK_CELL_NAME} />\r\n                            <UiGrid title={Constants.EMPLOYEE} number={pendingLaborRecord.EMPLOYEE_KEY} desc={pendingLaborRecord.EMPLOYEE_NAME} />\r\n                            <UiGrid title={Constants.LOBARACTIVITY}  number={pendingLaborRecord.WORKCENTER_NAME} />\r\n                        </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" offset={8} span={5}>\r\n                            <div>\r\n                            <UiTimerButton name=\"Elasped\" time='100' hours='HoursMinutes' color=\"green\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={5}>\r\n                            <div>\r\n                                <UiTimerButton name=\"Stop Timer\" time='and' hours='Review Labor' color=\"red\" timerHandler={stopTimer}/>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                 </> \r\n                : null}\r\n           \r\n        </>\r\n    )\r\n}\r\nexport default ProgressTimeStop","\r\nimport React, {useContext,useState, useEffect} from 'react'\r\n//components\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiPageHeader from './../../views/UiPageHeader';\r\nimport UiTimerButton from './../../views/UiTimerButton'\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n//Constants\r\nimport Constants from './../../constants'\r\nimport _ from 'lodash'\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { Button,Row, Col } from 'antd';\r\n\r\n// service\r\nimport { putPendingLaborService } from './../../service/pendingLabor'\r\n\r\n const LaborRecordComplete = (props) => {\r\n    const {pendingLabor, pendingLaborRecord, getPendingLaborRecord } = useContext(GlobalContext);\r\n    let { id } = useParams();\r\n    const [page, setPage] = useState(0);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getPendingLaborRecord(id)\r\n      }, [page]);\r\n\r\n \r\n    const stopTimer = () =>{\r\n        let serviceParams = {\r\n            STOP_TIME: null,\r\n        }\r\n        // putPendingLaborService(id, serviceParams).then((res)=>{\r\n        //     console.log(res)\r\n        // })\r\n        history.push('/review-timer')\r\n        console.log('stop')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { pendingLaborRecord !== undefined ?\r\n                <> \r\n                    <UiPageHeader content={Constants.LABORCONFIRM} />\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col className=\"gutter-row\" span={12}>\r\n                            <div>\r\n                                <UiGrid title={Constants.WORKORDER} number={pendingLaborRecord.WORK_ORDER_NUMBER} desc={pendingLaborRecord.WO_DESCRIPTION} />\r\n                                <UiGrid title={Constants.CUSTOMER} number={pendingLaborRecord.CUST_NAME} />\r\n                                <UiGrid title={Constants.PLANT} number={pendingLaborRecord.INVENTORY_NUMBER} desc={pendingLaborRecord.INVENTORY_NAME} />\r\n                                <UiGrid title={Constants.DEPARTMENT} number={pendingLaborRecord.DEPT_CODE} desc={pendingLaborRecord.DEPT_NAME} />\r\n                                <UiGrid title={Constants.WORKCELLS} number={pendingLaborRecord.WORK_CELL_KEY} desc={pendingLaborRecord.WORK_CELL_NAME} />\r\n                                <UiGrid title={Constants.EMPLOYEE} number={pendingLaborRecord.EMPLOYEE_KEY} desc={pendingLaborRecord.EMPLOYEE_NAME} />\r\n                                <UiGrid title={Constants.LOBARACTIVITY}  number={pendingLaborRecord.WORKCENTER_NAME} />\r\n                            </div>\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={12}>\r\n                            <div>\r\n                                <UiTimerButton \r\n                                    name=\"Complete\" \r\n                                    time='1:10' \r\n                                    hours='HoursMinutes' \r\n                                    txtColor=\"black\" \r\n                                    color=\"white\" \r\n                                    border=\"black\"\r\n                                    width=\"250px\" \r\n                                    height=\"250px\"\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        {/* <Col className=\"gutter-row\" span={5}>\r\n                            <div>\r\n                                <UiTimerButton name=\"Stop Timer\" time='and' hours='Review Labor' color=\"red\" timerHandler={stopTimer}/>\r\n                            </div>\r\n                        </Col> */}\r\n                    </Row>\r\n                 </> \r\n                : null}\r\n           \r\n        </>\r\n    )\r\n}\r\nexport default LaborRecordComplete","import React from 'react'\r\nimport { Button ,Menu, Dropdown, message, Popconfirm } from 'antd';\r\nimport { MenuOutlined , UserOutlined } from '@ant-design/icons';\r\n// Router\r\nimport {useHistory, useLocation} from 'react-router-dom';\r\n//Service\r\nimport {deletePendingLaborService} from './../../service/pendingLabor'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nconst HamberMenu = ({keyValue,data,match,title}) => {\r\n    const history = useHistory();\r\n    let location = useLocation();\r\n    // const handleMenuClick = (e) => {\r\n    //     switch (e.key) {\r\n    //         case \"delete\":\r\n    //         var del=confirm(\"Are you sure you want to delete this record?\");\r\n    //         if (del==true){\r\n    //             return deletePendingLaborService(keyValue).then(res=>{\r\n    //                 message.success('This is a success message');\r\n    //                 history.push(`${location.pathname}`);\r\n    //             })\r\n    //          }else{\r\n    //              alert(\"Record Not Deleted\")\r\n    //          }\r\n    //          return del;\r\n            \r\n    //         case \"edit\":\r\n    //         return history.push(`${location.pathname}/edit/${keyValue}`);\r\n    //         case \"view\":\r\n    //         return history.push(`${location.pathname}/${data.WORK_CELL_KEY}`);\r\n    //         default:\r\n    //             return history.push(`${location.pathname}/${data.WORK_CELL_KEY}`);\r\n    //     }\r\n    // }\r\n    const deleteItem = (e) =>{  \r\n        e.preventDefault()\r\n        return deletePendingLaborService(keyValue).then(res=>{\r\n            if(res){\r\n                message.success('successfully deleted');\r\n                setTimeout(function(){ window.location.reload(false); }, 2000);\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <span>\r\n            <Dropdown overlay= {\r\n                <Menu >\r\n                <Menu.Item key='edit' icon={<UserOutlined />}>\r\n                    <Link to={`${match.url}/edit/${keyValue}`}>Edit</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='view' icon={<UserOutlined />}>\r\n                    <Link to={`${match.url}/${data.WORK_CELL_KEY}`}>View</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='delete' icon={<UserOutlined />}>  \r\n                    <a href=\"#\" onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) deleteItem(e) } }>\r\n                        Delete\r\n                    </a>\r\n                </Menu.Item>\r\n              </Menu>\r\n            } >\r\n            <Button>\r\n                 <MenuOutlined />\r\n            </Button>\r\n            </Dropdown>\r\n        </span>\r\n    )\r\n}\r\nexport default withRouter(HamberMenu)","import React, { Component } from 'react';\r\nimport { Input, Button, Select, Table ,Menu, Dropdown, message } from 'antd';\r\nimport './labor-review-and-posting.scss'\r\nimport { getLaborPostingFilterService, getPendingLaborService } from './../../service/pendingLabor'\r\nimport Spinner from './../../views/Spinner'\r\nimport HamberMenu from './../../views/HamberMenu'\r\nconst columns = [\r\n    {title: 'WORK_ORDER_NUMBER', dataIndex: 'WORK_ORDER_NUMBER', key: 'KEY'},\r\n    {title: 'CUST_NAME', dataIndex: 'CUST_NAME', key: 'KEY'},\r\n    {title: 'EMPLOYEE_NAME', dataIndex: 'EMPLOYEE_NAME', key: 'KEY'},\r\n    {title: 'LABOR_CLASS', dataIndex: 'LABOR_CLASS', key: 'KEY'},\r\n    {title: 'WORK_CELL_NAME', dataIndex: 'WORK_CELL_NAME', key: 'KEY'},\r\n    {title: 'START_TIME', dataIndex: 'START_TIME', key: 'KEY'},\r\n    {title: 'STOP_TIME', dataIndex: 'STOP_TIME', key: 'KEY'},\r\n    {title: 'LABOR_TIME', dataIndex: 'LABOR_TIME',key: 'KEY'},\r\n    {title: 'LABOR_RATE_TYPE', dataIndex: 'LABOR_RATE_TYPE',key: 'KEY'},\r\n    {\r\n        title: 'Action',\r\n        key: 'KEY',\r\n        dataIndex: 'KEY',\r\n        render: (text, record) => (\r\n        <HamberMenu keyValue={text} data={record} />\r\n        )\r\n    }\r\n  ];\r\nclass LaborReviewAndPosting extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rowData: [],\r\n            selectedRowKeys: [], // Check here to configure the default column\r\n            inputValue:{\r\n                workOrder:''\r\n            }\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        getPendingLaborService(this.state.inputValue.workOrder)\r\n        .then((res) => this.setState({ rowData: res }))\r\n        .catch(error => console.log(error))\r\n    }\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n        getLaborPostingFilterService(this.state.inputValue.workOrder)\r\n        .then((res) => this.setState({ rowData: res }))\r\n        .catch(error => console.log(error))\r\n    }\r\n    onChangeHandler(event){\r\n        this.setState({\r\n            inputValue:{\r\n                workOrder:event.target.value\r\n            }\r\n        })\r\n    }\r\n    onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    };\r\n      \r\n    render() {\r\n        const { Option } = Select;\r\n        const { selectedRowKeys, inputValue } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n          };\r\n        return (\r\n            <div\r\n                className=\"ag-theme-balham\"\r\n                style={{ height: '600px'}}\r\n            >\r\n                <div className=\"labor-review-filter\">\r\n                    <div className=\"__work-order\">\r\n                        <div className=\"__mr-2\">\r\n                            <p>Plant</p>\r\n                        </div>\r\n                        <div>\r\n                        <Input.Group compact>\r\n                            <Select defaultValue={'All'}  name=\"plant\">\r\n                                <Option value=\"one\" >{\"one\"}</Option>\r\n                            </Select>\r\n                        </Input.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"__work-order mt-2 mb-2\">\r\n                        <div className=\"__mr-1\">\r\n                            <p>Work Order</p>\r\n                        </div>\r\n                        <div>\r\n                            <Input name=\"workOrder\" onChange={this.onChangeHandler} value={inputValue.workOrder} />\r\n                        </div>\r\n                        <div className=\"ml-10\">\r\n                            <Button type=\"primary\" onClick={this.handleClick}>Enter</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {<Table rowKey={record => record.KEY} rowSelection={rowSelection} columns={columns} dataSource={this.state.rowData} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LaborReviewAndPosting","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Radio,\r\n    Select,\r\n    Input,\r\n    Col,\r\n    DatePicker,\r\n    TimePicker,\r\n    Row,\r\n    Button\r\n  } from 'antd';\r\n\r\nimport moment from 'moment';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\r\n  //components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiTimerButton from './../../views/UiTimerButton'\r\nimport Spinner from './../../views/Spinner'\r\n//Constants\r\nimport Constants from './../../constants'\r\n//scss \r\nimport './labor-review-and-posting.scss'\r\n  // service\r\nimport { getProgressTimeStopService, putPendingLaborService } from './../../service/pendingLabor'\r\nconst { Option } = Select;\r\nconst format = 'HH:mm';\r\nconst { TextArea } = Input;\r\nconst dateFormat = 'YYYY-MM-DD';\r\n\r\nconst LaborReviewAndPostingEdit = () => {\r\n  const history = useHistory();\r\n  const {pendingLaborRecord,panelShop, workCellData, getWorkCell, getPanalShop, getPendingLaborRecord } = useContext(GlobalContext);\r\n  const [page, setPage] = useState([]);\r\n  const [note, setNote] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [stopTime, setStopTime] = useState('');\r\n  const [stopDate, setStopDate] = useState('');\r\n  const [laborRate, setRaborRate] = useState(Constants.LABOR_RATE[0]);\r\n  let { id } = useParams();\r\n    useEffect(() => {\r\n      getProgressTimeStopService(id).then(res=>{\r\n        setPage(res[0])\r\n        setStartTime(res[0].START_TIME)\r\n        setStopTime(res[0].STOP_TIME)\r\n      })\r\n    }, [1]);\r\n\r\n    const onChange = (e) => {\r\n        setNote(e.target.value);\r\n    }\r\n    const onChangeStartTime = (time) =>{\r\n        setStartTime(time);\r\n    }\r\n    const onChangeStopTime = (time) =>{\r\n        setStopTime(time);\r\n    }\r\n    const onChangeStartDate = (date) =>{\r\n        setStartDate(date);\r\n    }\r\n    const onChangeStopDate = (date) =>{\r\n        setStopDate(date);\r\n    }\r\n    const onChangeRate = (value) =>{\r\n        setRaborRate(value)\r\n    }\r\n    const cancleChanges = () =>{\r\n      history.goBack();\r\n    }\r\n    const saveChange = () =>{\r\n        let serviceParams = {\r\n            PLANT_KEY: pendingLaborRecord.PLANT_KEY,\r\n            DEPARTMENT_KEY: pendingLaborRecord.DEPARTMENT_KEY,\r\n            EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n            WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n            WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n            LABOR_CLASS: null,\r\n            WORK_ORDER_NUMBER: pendingLaborRecord.WORK_ORDER_NUMBER,\r\n            START_TIME: pendingLaborRecord.START_TIME,\r\n            STOP_TIME: pendingLaborRecord.STOP_TIME,\r\n            LABOR_TIME: null,\r\n            LABOR_RATE_TYPE: laborRate,\r\n            NOTE:note,\r\n            STATUS: \"C\"\r\n        }\r\n        console.log('saveChange', {\r\n            stopTime,\r\n            stopDate,\r\n            note,\r\n            laborRate,\r\n            startTime,\r\n            startDate\r\n        })\r\n    }\r\n    const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      let serviceParams = {\r\n          PLANT_KEY: pendingLaborRecord.PLANT_KEY,\r\n          DEPARTMENT_KEY: pendingLaborRecord.DEPARTMENT_KEY,\r\n          EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n          WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n          WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n          LABOR_CLASS: null,\r\n          WORK_ORDER_NUMBER: pendingLaborRecord.WORK_ORDER_NUMBER,\r\n          START_TIME: pendingLaborRecord.START_TIME,\r\n          STOP_TIME: pendingLaborRecord.STOP_TIME,\r\n          LABOR_TIME: null,\r\n          LABOR_RATE_TYPE: null,\r\n          STATUS: \"C\"\r\n      }\r\n      putPendingLaborService(pendingLaborRecord.KEY, serviceParams).then((res)=>{\r\n        history.push(`/labor-record-complete/${pendingLaborRecord.KEY}`)\r\n      })\r\n    }\r\n\r\n    const contentHtml = <>\r\n      {workCellData.length > 0 ? workCellData.map((item, index)=><Option key={index} value={item.WORK_CELL_NAME} >{item.WORK_CELL_NAME}</Option>) : null}\r\n    </>;\r\n    const contentHtmlForEmployee = <>\r\n      {panelShop.length > 0 ? panelShop.map((item, index)=><Option key={index} value={item.NAME} >{item.NAME}</Option>) : null}\r\n    </>;\r\n    const contentHtmlForRate = <>\r\n        {Constants.LABOR_RATE.map((item, index)=><Option key={index} value={item} >{item}</Option>)}\r\n    </>;\r\n    \r\n    return (\r\n      <>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n      <form  className=\"labor-record-form\">\r\n        <Col className=\"gutter-row\" span={20}>\r\n          <div>\r\n            <UiPageHeader content={Constants.WORKCELL_PROGRESS_TIMERS} />\r\n            <UiGrid title=\"Work Order \" number={page.WORK_ORDER_NUMBER} />\r\n            <UiGrid title=\"Customar \" number={page.CUST_NAME} />\r\n            <UiGrid title=\"Work Cell \" number={page.WORK_CELL_NAME} />\r\n            <UiGrid title=\"Employee \" number={page.EMPLOYEE_NAME} />\r\n            {/* <UiGrid title=\"Labor Performed \" number={pendingLaborRecord.INVENTORY_NAME} /> */}\r\n            {/* <UiGrid title=\"Labor Performed\" >\r\n              <Input.Group compact>\r\n                <Select defaultValue={pendingLaborRecord.INVENTORY_NAME} name=\"laborPerformed\" onChange={onChangeWorkCell}>\r\n                  {contentHtml}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid> */}\r\n            {/* <UiGrid title=\"Employee\" >\r\n              <Input.Group compact>\r\n                <Select defaultValue={apiFetchData.employeeUpdate.length > 0 ?  '': pendingLaborRecord.EMPLOYEE_NAME}  name=\"employee\">\r\n                  {contentHtmlForEmployee}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid> */}\r\n            <UiGrid title=\"Labor Performed\" >\r\n              <Input.Group compact>\r\n              <Select defaultValue={page.INVENTORY_NAME} value={page.INVENTORY_NAME} onChange={onChangeRate} name=\"laborPerformed\">\r\n                <Option value={page.INVENTORY_NAME} onChange={onChange}>{page.INVENTORY_NAME}</Option>\r\n              </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Start Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact >\r\n                    <DatePicker onChange={onChangeStartDate} defaultValue={moment(startDate, dateFormat)} format={dateFormat}/>\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss A\" onChange={onChangeStartTime} value={moment(startTime, format)} />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Stop Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact>\r\n                    <DatePicker onChange={onChangeStopDate} defaultValue={moment(stopDate, dateFormat)} format={dateFormat} />\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss A\" onChange={onChangeStopTime} value={moment(stopTime, format)} />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Hours \" number={pendingLaborRecord.LABOR_TIME} />\r\n            <UiGrid title=\"Labar Rate\" >\r\n              <Input.Group compact>\r\n                <Select defaultValue={laborRate} value={laborRate} onChange={onChangeRate} >\r\n                  {contentHtmlForRate}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <div >\r\n                <p>Note *</p>\r\n                <TextArea rows={4} name='note' value={note} onChange={onChange} placeholder=\"Note\"/>\r\n            </div>\r\n            <div className=\"footer-button\">\r\n                <Button \r\n                    type=\"primary\" \r\n                    style={{backgroundColor:'red'}} \r\n                    className=\"time-button\" \r\n                    onClick={cancleChanges} \r\n                > <b>Cancel <br></br> Do not save changes </b>\r\n                </Button>\r\n                <Button \r\n                    type=\"primary\" \r\n                    className=\"time-button\" \r\n                    onClick={saveChange} \r\n                    style={{padding: '27px'}} \r\n                > <b>Save Changes</b> \r\n                </Button>  \r\n            </div>\r\n          </div>\r\n        </Col>\r\n        </form>\r\n    </Row> \r\n      </>\r\n    )\r\n}\r\nexport default LaborReviewAndPostingEdit","import React, {useState, useEffect, useContext} from 'react'\r\n// ant\r\nimport { Table, Tag , Button} from 'antd';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\n// Router\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n// service\r\nimport { getListLaborAuditTrail } from './../../service/pendingLabor'\r\nimport Spinner from './../../views/Spinner'\r\nconst columns = [\r\n    {\r\n        title: '',\r\n        dataIndex: 'TRANSACTION_TYPE',\r\n        key: '',\r\n    },\r\n    {\r\n        title: 'Date',\r\n        dataIndex: 'ENTRY_DATE',\r\n        key: 'ENTRY_DATE',\r\n        render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Edit by',\r\n        dataIndex: 'ENTRY_FORM',\r\n        key: 'ENTRY_FORM',\r\n    },\r\n    {\r\n        title: 'Work Order',\r\n        dataIndex: 'ORIGINAL_WORK_ORDER_NUMBER',\r\n        key: 'ORIGINAL_WORK_ORDER_NUMBER',\r\n    },\r\n    {\r\n        title: 'Work Cell',\r\n        dataIndex: 'ORIGINAL_WORK_CELL_KEY',\r\n        key: 'ORIGINAL_WORK_CELL_KEY',\r\n    },\r\n    {\r\n        title: 'Employee',\r\n        dataIndex: 'ORIGINAL_EMPLOYEE_KEY',\r\n        key: 'ORIGINAL_EMPLOYEE_KEY',\r\n    },\r\n    {\r\n        title: 'Labor Performed',\r\n        dataIndex: 'ORIGINAL_WORK_CELL_KEY',\r\n        key: 'ORIGINAL_WORK_CELL_KEY',\r\n    },\r\n    {\r\n        title: 'Start Time',\r\n        dataIndex: 'ORIGINAL_START_TIME',\r\n        key: 'ORIGINAL_START_TIME',\r\n    },\r\n    {\r\n        title: 'Stop Time',\r\n        dataIndex: 'ORIGINAL_STOP_TIME',\r\n        key: 'ORIGINAL_STOP_TIME',\r\n    },\r\n    {\r\n      title: 'Note',\r\n      key: 'NOTE',\r\n      dataIndex: 'NOTE',\r\n      render: text => <a>{text}</a>\r\n    }\r\n  ];\r\nconst LaborReviewAndPostingView = () => {\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState(1);\r\n    const { getWorkCell, workCellData , getKeyData, keyData, getPanalShop ,keyEmpty} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        getListLaborAuditTrail(id).then(res=>setData(res))\r\n    }, [page]);\r\n    const cancleChanges = () =>{\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <div>\r\n            {data.length > 0 ?<Table columns={columns} dataSource={data} /> : <Spinner /> }\r\n            <div className=\"footer-cancle\">\r\n                <Button \r\n                    type=\"primary\" \r\n                    className=\"time-button\" \r\n                    onClick={cancleChanges}\r\n                    style={{backgroundColor:'rgba(0, 0, 0, 0.65)'}}  \r\n                > <b>Close This Page</b> \r\n                </Button>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LaborReviewAndPostingView","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n    Radio,\r\n    Select,\r\n    Input,\r\n    Col,\r\n    DatePicker,\r\n    TimePicker,\r\n    Row,\r\n    Button\r\n  } from 'antd';\r\n\r\nimport moment from 'moment';\r\n// context\r\nimport { GlobalContext } from \"./../../context/GlobalState\";\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\r\n  //components\r\nimport UiPageHeader from './../../views/UiPageHeader'\r\nimport UiGrid from './../../views/UiGrid'\r\nimport UiTimerButton from './../../views/UiTimerButton'\r\n//Constants\r\nimport Constants from './../../constants'\r\n//scss \r\nimport './labor-review-and-posting.scss'\r\n  // service\r\nimport { getProgressTimeStopService, putPendingLaborService } from './../../service/pendingLabor'\r\nconst { Option } = Select;\r\nconst format = 'HH:mm';\r\nconst { TextArea } = Input;\r\nconst dateFormat = 'YYYY-MM-DD';\r\n\r\nconst LaborReviewAndPostingAdd = () => {\r\n  const history = useHistory();\r\n  const {pendingLaborRecord,panelShop, workCellData, getWorkCell, getPanalShop, getPendingLaborRecord } = useContext(GlobalContext);\r\n  const [page, setPage] = useState([]);\r\n  const [note, setNote] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [stopTime, setStopTime] = useState('');\r\n  const [stopDate, setStopDate] = useState('');\r\n  const [laborRate, setRaborRate] = useState(Constants.LABOR_RATE[0]);\r\n  let { id } = useParams();\r\n    useEffect(() => {\r\n\r\n    }, [1]);\r\n\r\n    const onChange = (e) => {\r\n        setNote(e.target.value);\r\n    }\r\n    const onChangeStartTime = (time) =>{\r\n        setStartTime(time);\r\n    }\r\n    const onChangeStopTime = (time) =>{\r\n        setStopTime(time);\r\n    }\r\n    const onChangeStartDate = (date) =>{\r\n        setStartDate(date);\r\n    }\r\n    const onChangeStopDate = (date) =>{\r\n        setStopDate(date);\r\n    }\r\n    const onChangeRate = (value) =>{\r\n        setRaborRate(value)\r\n    }\r\n    const cancleChanges = () =>{\r\n      history.goBack();\r\n    }\r\n    const saveChange = () =>{\r\n        let serviceParams = {\r\n            PLANT_KEY: pendingLaborRecord.PLANT_KEY,\r\n            DEPARTMENT_KEY: pendingLaborRecord.DEPARTMENT_KEY,\r\n            EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n            WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n            WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n            LABOR_CLASS: null,\r\n            WORK_ORDER_NUMBER: pendingLaborRecord.WORK_ORDER_NUMBER,\r\n            START_TIME: pendingLaborRecord.START_TIME,\r\n            STOP_TIME: pendingLaborRecord.STOP_TIME,\r\n            LABOR_TIME: null,\r\n            LABOR_RATE_TYPE: laborRate,\r\n            NOTE:note,\r\n            STATUS: \"C\"\r\n        }\r\n        console.log('saveChange', {\r\n            stopTime,\r\n            stopDate,\r\n            note,\r\n            laborRate,\r\n            startTime,\r\n            startDate\r\n        })\r\n    }\r\n    const onSubmit = (e) => {\r\n      e.preventDefault();\r\n      let serviceParams = {\r\n          PLANT_KEY: pendingLaborRecord.PLANT_KEY,\r\n          DEPARTMENT_KEY: pendingLaborRecord.DEPARTMENT_KEY,\r\n          EMPLOYEE_KEY: pendingLaborRecord.EMPLOYEE_KEY,\r\n          WORK_CENTER_KEY: pendingLaborRecord.WORK_CENTER_KEY,\r\n          WORK_CELL_KEY: pendingLaborRecord.WORK_CELL_KEY,\r\n          LABOR_CLASS: null,\r\n          WORK_ORDER_NUMBER: pendingLaborRecord.WORK_ORDER_NUMBER,\r\n          START_TIME: pendingLaborRecord.START_TIME,\r\n          STOP_TIME: pendingLaborRecord.STOP_TIME,\r\n          LABOR_TIME: null,\r\n          LABOR_RATE_TYPE: null,\r\n          STATUS: \"C\"\r\n      }\r\n      putPendingLaborService(pendingLaborRecord.KEY, serviceParams).then((res)=>{\r\n        history.push(`/labor-record-complete/${pendingLaborRecord.KEY}`)\r\n      })\r\n    }\r\n\r\n    const contentHtml = <>\r\n      {workCellData.length > 0 ? workCellData.map((item, index)=><Option key={index} value={item.WORK_CELL_NAME} >{item.WORK_CELL_NAME}</Option>) : null}\r\n    </>;\r\n    const contentHtmlForEmployee = <>\r\n      {panelShop.length > 0 ? panelShop.map((item, index)=><Option key={index} value={item.NAME} >{item.NAME}</Option>) : null}\r\n    </>;\r\n    const contentHtmlForRate = <>\r\n        {Constants.LABOR_RATE.map((item, index)=><Option key={index} value={item} >{item}</Option>)}\r\n    </>;\r\n    \r\n    return (\r\n      <>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className=\"gutter-row\" span={20}>\r\n          <div>\r\n            <UiPageHeader content={Constants.WORKCELL_PROGRESS_TIMERS} />\r\n            <UiGrid title=\"Work Order\" >\r\n              <Input placeholder=\"\" name=\"workOrder\" onChange={onChange} />\r\n            </UiGrid>\r\n            <UiGrid title=\"Customar\" >\r\n              <Input placeholder=\"\" name=\"customar\" onChange={onChange} />\r\n            </UiGrid>\r\n             <UiGrid title=\"Work Cell\" >\r\n              <Input.Group compact>\r\n                <Select defaultValue={pendingLaborRecord.WORK_CELL_NAME} name=\"workCellName\" >\r\n                  {contentHtml}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Employee\" >\r\n              <Input.Group compact>\r\n                <Select defaultValue={pendingLaborRecord.EMPLOYEE_NAME}  name=\"employee\">\r\n                  {contentHtmlForEmployee}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Performed\" >\r\n              <Input.Group compact>\r\n              <Select defaultValue={page.INVENTORY_NAME} onChange={onChange} name=\"laborPerformed\">\r\n                <Option >{page.INVENTORY_NAME}</Option>\r\n              </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <UiGrid title=\"Start Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact >\r\n                    <DatePicker onChange={onChangeStartDate} defaultValue={moment(startDate, dateFormat)} format={dateFormat}/>\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss A\" onChange={onChange} value={moment(startTime, format)} />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Stop Time\" >\r\n              <div className=\"data-set\">\r\n                <div>\r\n                  <Input.Group compact>\r\n                    <DatePicker onChange={onChange} defaultValue={moment(stopDate, dateFormat)} format={dateFormat} />\r\n                  </Input.Group>\r\n                </div>\r\n                <div>\r\n                  <TimePicker use12Hours format=\"h:mm:ss A\" onChange={onChange} value={moment(stopTime, format)} />\r\n                </div>\r\n              </div>\r\n            </UiGrid>\r\n            <UiGrid title=\"Labor Hours \" number={pendingLaborRecord.LABOR_TIME} />\r\n            <UiGrid title=\"Labar Rate\" >\r\n              <Input.Group compact>\r\n                <Select defaultValue={laborRate} value={laborRate} onChange={onChangeRate} >\r\n                  {contentHtmlForRate}\r\n                </Select>\r\n              </Input.Group>\r\n            </UiGrid>\r\n            <div >\r\n                <p>Note *</p>\r\n                <TextArea rows={4} name='note' value={note} onChange={onChange} placeholder=\"Note\"/>\r\n            </div>\r\n            <div className=\"footer-button\">\r\n                <Button \r\n                    type=\"primary\" \r\n                    style={{backgroundColor:'red'}} \r\n                    className=\"time-button\" \r\n                    onClick={cancleChanges} \r\n                > <b>Cancel <br></br> Do not save changes </b>\r\n                </Button>\r\n                <Button \r\n                    type=\"primary\" \r\n                    className=\"time-button\" \r\n                    onClick={saveChange} \r\n                    style={{padding: '27px'}} \r\n                > <b>Save Changes</b> \r\n                </Button>  \r\n            </div>\r\n          </div>\r\n        </Col>\r\n\r\n    </Row>\r\n      </>\r\n    )\r\n}\r\nexport default LaborReviewAndPostingAdd","import WorkCell from './../pages/work-cell/work-cell';\r\nimport PanelShop from './../pages/panel-shop/panel-shop';\r\nimport JobPosting from './../pages/job-posting/job-posting';\r\nimport LaborActivity from './../pages/labor-activity/labor-activity';\r\nimport LaborConfirm from './../pages/labor-confirm/labor-confirm';\r\nimport ProgressTimers from './../pages/progress-timers/progress-timers';\r\nimport ReviewTimer from './../pages/review-timer/review-timer';\r\nimport ProgressTimeStop from './../pages/progress-time-stop/progress-time-stop';\r\nimport LaborRecordComplete from './../pages/labor-record-complete/labor-record-complete'\r\nimport LaborReviewAndPosting from './../pages/labor-review-and-posting/labor-review-and-posting';\r\nimport LaborReviewAndPostingEdit from  './../pages/labor-review-and-posting/labor-review-and-posting-edit'\r\nimport LaborReviewAndPostingView from './../pages/labor-review-and-posting/labor-review-and-posting-view'\r\nimport LaborReviewAndPostingAdd from './../pages/labor-review-and-posting/labor-review-and-posting-add'\r\nexport const Routes = [\r\n    {\r\n        component: WorkCell,\r\n        path: '/work-cell',\r\n        exact: true,\r\n        title: 'Work Cell'\r\n    },\r\n    {\r\n        component: PanelShop,\r\n        path: '/panel-shop/:id',\r\n        exact: true,\r\n        title: 'PanelShop'\r\n    },\r\n    {\r\n        component: JobPosting,\r\n        path: '/job-posting-employee/:id',\r\n        exact: true,\r\n        title: 'JobPosting'\r\n    },\r\n    {\r\n        component: LaborActivity,\r\n        path: '/labor-activity/:id',\r\n        exact: true,\r\n        title: 'LaborActivity'\r\n    },\r\n    {\r\n        component: LaborConfirm,\r\n        path: '/labor-confirm',\r\n        exact: true,\r\n        title: 'labor-confirm'\r\n    },\r\n    {\r\n        component: ProgressTimers,\r\n        path: '/progress-timers',\r\n        exact: true,\r\n        title: 'ProgressTimers'\r\n    },\r\n    {\r\n        component: ReviewTimer,\r\n        path: '/review-timer',\r\n        exact: true,\r\n        title: 'ReviewTimer'\r\n    },\r\n    {\r\n        component: ProgressTimeStop,\r\n        path: '/progress-time-stop/:id',\r\n        exact: true,\r\n        title: 'ProgressTimeStop'\r\n    },\r\n    {\r\n        component: LaborRecordComplete,\r\n        path: '/labor-record-complete/:id',\r\n        exact: true,\r\n        title: 'LaborRecordComplete'\r\n    },\r\n    {\r\n        component: LaborReviewAndPosting,\r\n        path: '/labor-review-and-posting',\r\n        exact: true,\r\n        title: 'LaborReviewAndPosting'\r\n    },\r\n    {\r\n        component: LaborReviewAndPostingEdit,\r\n        path: '/labor-review-and-posting/edit/:id',\r\n        exact: true,\r\n        title: 'LaborReviewAndPostingEdit'\r\n    },\r\n    {\r\n        component: LaborReviewAndPostingView,\r\n        path: '/labor-review-and-posting/:id',\r\n        exact: true,\r\n        title: 'LaborReviewAndPosting'\r\n    },\r\n    {\r\n        component: LaborReviewAndPostingAdd,\r\n        path: '/labor-review-and-posting-add-labor-record',\r\n        exact: true,\r\n        title: 'LaborReviewAndPostingAdd'\r\n    }\r\n];\r\n","import React, {useContext} from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n// context\r\nimport { GlobalContext } from \"./../context/GlobalState\";\r\n\r\nexport const Router = (props) => {\r\n    const { routes, defaultRoute } = props;\r\n    const { keyData } = useContext(GlobalContext);\r\n    return (\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                const { component: RouteComponent, routes, exact, path } = route;\r\n                return <Route\r\n                    exact={exact}\r\n                    key={index}\r\n                    path={path}\r\n                    render={() => <RouteComponent {...props} routes={routes} />} />;\r\n            })} \r\n            <Redirect to={defaultRoute} />\r\n        </Switch>\r\n    );\r\n};\r\n","import React, {Suspense, useMemo, useContext} from 'react';\nimport './App.scss';\n// Components\nimport UiHeader from './views/UiHeader'\nimport TopNavBar  from './views/TopNavBar';\nimport Timer from './views/Timer'\nimport Spinner from './views/Spinner'\n// Routers\nimport { Routes, Router } from './routes';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n// context\nimport { GlobalContext } from \"./context/GlobalState\";\nimport { GlobalProvider } from './context/GlobalState';\n\n// Antd\nimport { ArrowLeftOutlined  } from '@ant-design/icons';\nimport { Layout, Button } from 'antd';\nconst { Content } = Layout;\n\nconst App = () => {\n\n    const history = useHistory();\n    let location = useLocation();\n    const { keyData, getKeyData, getPendingLabor,isActive, isActiveFun } = useContext(GlobalContext);\n    let {id} = useParams();\n    // Back Button\n    const goBack = () => {\n        history.goBack();\n      }\n    return (\n        <GlobalProvider>\n          <Suspense fallback={<Spinner />}> {/* Show a loader component here as a fallback*/}\n          \n          {location.pathname.includes('labor-review-and-posting') \n            ? <UiHeader for=\"supervisor\" /> \n            :<><UiHeader /><TopNavBar /></>\n          }\n              {/* <UiHeader />\n              <TopNavBar /> */}\n              {/* <Timer /> */}\n              <Layout className=\"layout\">\n                <Content style={{ padding: '0 50px' }} > \n                    <Router routes={Routes} defaultRoute={Routes[0].path} />\n                </Content>\n              </Layout>\n              {location.pathname !== '/work-cell' ?\n              <Layout className=\"layout\">\n                <Content style={{ padding: '0 50px' }} > \n                  <Button type=\"primary\" className=\"back-button\" onClick={goBack} icon={<ArrowLeftOutlined  />}>Back</Button>\n                </Content>\n              </Layout>\n              : null}\n          </Suspense>\n        </GlobalProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\n//Grid\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render( \n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}